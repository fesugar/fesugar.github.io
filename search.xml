<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>18位身份证信息解析</title>
    <url>/zh-CN/2019/03/19/18%E4%BD%8D%E8%BA%AB%E4%BB%BD%E8%AF%81%E4%BF%A1%E6%81%AF%E8%A7%A3%E6%9E%90.html</url>
    <content><![CDATA[<p><strong>软件名称：18位身份证信息解析</strong><br><strong>软件介绍：解析18位身份证号码，地址区域信息</strong><br><strong>软件大小：2MB</strong><br><strong>下载链接：<a href="https://cdn.fesugar.com/download/Identity" target="_blank" rel="noopener">https://cdn.fesugar.com/download/Identity</a> Search.zip</strong><br><strong>发布时间：2013/3</strong><br><strong>新增功能：</strong> <strong>1. 对于星座进行个性分析</strong><br><strong>宣传版本号：1.0.0.6</strong><br><strong>支持操作系统（含多少位）： Windows 7 SP1, Windows 8.1, Windows 10 （ 32&amp;64）</strong><br><strong>语言种类：中文简体</strong><br><strong>是否收费：免费软件</strong><br><strong>软件截图：</strong> <img data-src="https://cdn.fesugar.com/2019/03/2019-03-19-0403059.jpg" alt=""></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>Windows</tag>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>BAT批处理修复Windows桌面快捷图标问题</title>
    <url>/zh-CN/2016/04/05/BAT%E6%89%B9%E5%A4%84%E7%90%86%E4%BF%AE%E5%A4%8DWindows%E6%A1%8C%E9%9D%A2%E5%BF%AB%E6%8D%B7%E5%9B%BE%E6%A0%87%E9%97%AE%E9%A2%98.html</url>
    <content><![CDATA[<p>XP 、Win7桌面快捷图标错误及exe文件错误关联的批处理修复方案<br>以前写的一个脚本</p>
<a id="more"></a>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">::显示或者隐藏命令 //ECHO [ON | OFF]</span><br><span class="line">@ ECHO OFF</span><br><span class="line">REM 修复桌面快捷方式变成了相同的图标或者未知图标，exe快捷方式或者文件无法运行。</span><br><span class="line">::设置颜色为 淡蓝色背景色，白色前景色</span><br><span class="line">COLOR 9F</span><br><span class="line">::设置运行窗口标题</span><br><span class="line">TITLE XP 、Win7桌面快捷图标错误及exe文件错误关联--修复</span><br><span class="line">::提示以管理员身份运行</span><br><span class="line">ECHO ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line">ECHO ☆ ☆</span><br><span class="line">ECHO ☆ 为了能够成功修复，请使用管理员身份运行 [鼠标右键单击--以管理员身份运行] ☆</span><br><span class="line">ECHO ☆ ☆</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line"></span><br><span class="line">::检测系统版本，如果需要并跳转到相应的系统标签处进行执行</span><br><span class="line">VER|FINDSTR /I <span class="string">"5.1"</span> &amp;&amp; GOTO XP || GOTO Win7</span><br><span class="line">:: XP 系统的方案</span><br><span class="line">:XP</span><br><span class="line">::说明可能导致此问题的相关原因</span><br><span class="line">ECHO 主要症状：</span><br><span class="line">ECHO 桌面多数或全部快捷方式图标变成了某一个相同、未知的图标,或者exe文件无法运行。</span><br><span class="line">ECHO 1.可能由于注册表异常导致。</span><br><span class="line">ECHO 2.缓存过旧导致的异常。</span><br><span class="line">ECHO =====================================</span><br><span class="line">::信息提示并作出选择</span><br><span class="line">::暂不使用此句 CHOICE /C YN /T 10 /D Y /M <span class="string">"您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span></span><br><span class="line"><span class="string">set /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span></span><br><span class="line"><span class="string">::判断输入的字符</span></span><br><span class="line"><span class="string">::暂不使用此句 IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span></span><br><span class="line"><span class="string">IF /I %IS% EQU Y (GOTO R) ELSE (EXIT)</span></span><br><span class="line"><span class="string">:: Win7 系统的方案</span></span><br><span class="line"><span class="string">:Win7</span></span><br><span class="line"><span class="string">::说明可能导致此问题的相关原因</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 主要症状：</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 桌面多数或全部快捷方式图标变成了某一个相同的图标,exe文件无法运行。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 1.可能由于注册表异常导致。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 2.缓存过旧导致的异常。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO =====================================</span></span><br><span class="line"><span class="string">::信息提示并作出选择</span></span><br><span class="line"><span class="string">CHOICE /C YN /T 10 /D Y /M "</span>您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span><br><span class="line">::暂不使用此句 <span class="built_in">set</span> /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span><br><span class="line">::判断输入的字符</span><br><span class="line">IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span><br><span class="line">::暂不使用此句 IF /I %IS% EQU Y (GOTO R) ELSE (EXIT)</span><br><span class="line"></span><br><span class="line">::标签R</span><br><span class="line">:R</span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">::使用REG命令对注册表进行操作</span><br><span class="line"></span><br><span class="line">::首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">REG EXPORT HKCR.exe %TEMP%HKCR.exe.reg /y</span><br><span class="line">REG EXPORT HKCR.lnk %TEMP%HKCR.lnk.reg /y</span><br><span class="line">REG EXPORT HKCRexefile %TEMP%HKCR.exefile.reg /y</span><br><span class="line">REG EXPORT HKCUSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnk %TEMP%HKCU.lnk.reg /y</span><br><span class="line">REG EXPORT HKCUSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exe %TEMP%HKCU.exe.reg /y</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 修复注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">::HKEY_CLASSES_ROOTexefile</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOTexefileDefaultIcon"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOTexefileDefaultIcon"</span> /ve /t REG_SZ /d <span class="string">"%%1"</span> /f</span><br><span class="line">::设置变量并赋值</span><br><span class="line"><span class="built_in">set</span> exe=<span class="string">""</span><span class="string">""</span>%%1<span class="string">""</span><span class="string">" %%*"</span></span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOTexefileshellopen"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOTexefileshellrunas"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOTexefileshellopencommand"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOTexefileshellopencommand"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOTexefileshellrunascommand"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOTexefileshellrunascommand"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line"></span><br><span class="line">::HKEY_CLASSES_ROOT.exe</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT.exe"</span> /ve /t REG_SZ /d <span class="string">"exefile"</span> /f</span><br><span class="line">assoc.exe=exefile</span><br><span class="line"></span><br><span class="line">::HKEY_CLASSES_ROOT.lnk</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT.lnk"</span> /ve /t REG_SZ /d lnkfile /f</span><br><span class="line">assoc.lnk=lnkfile</span><br><span class="line"></span><br><span class="line">::HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnk</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnk"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnkOpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnkOpenwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnkOpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.lnkOpenwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">::HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exe</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exe"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exeOpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exeOpenwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exeOpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USERSoftwareMicrosoftWindowsCurrentVersionExplorerFileExts.exeOpenwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">::REG DELETE <span class="string">"HKEY_LOCAL_MACHINESOFTWAREMicrosoftWindowsCurrentVersionExplorerShellIcons"</span> /f</span><br><span class="line"></span><br><span class="line">::判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%AppDataLocalIconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%AppDataLocalIconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%LocalSettingsApplication DataIconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%LocalSettingsApplication DataIconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line">::重启 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表修复完成☆☆</span><br><span class="line">ECHO.</span><br><span class="line">::等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,如果提示成功并且还存在问题建议重启计算机后查看是否已经修复.</span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>18位身份证号码合法性计算</title>
    <url>/zh-CN/2016/10/13/18%E4%BD%8D%E8%BA%AB%E4%BB%BD%E8%AF%81%E5%8F%B7%E7%A0%81%E5%90%88%E6%B3%95%E6%80%A7%E8%AE%A1%E7%AE%97.html</url>
    <content><![CDATA[<h5 id="来看下合法性计算方法"><a href="#来看下合法性计算方法" class="headerlink" title="来看下合法性计算方法"></a>来看下合法性计算方法</h5><h6 id="1、将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。"><a href="#1、将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。" class="headerlink" title="1、将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。"></a>1、将前面的身份证号码17位数分别乘以不同的系数。从第一位到第十七位的系数分别为：7－9－10－5－8－4－2－1－6－3－7－9－10－5－8－4－2。</h6><h6 id="2、将这17位数字和系数相乘的结果相加。"><a href="#2、将这17位数字和系数相乘的结果相加。" class="headerlink" title="2、将这17位数字和系数相乘的结果相加。"></a>2、将这17位数字和系数相乘的结果相加。</h6><h6 id="3、用加出来和除以11，看余数是多少？"><a href="#3、用加出来和除以11，看余数是多少？" class="headerlink" title="3、用加出来和除以11，看余数是多少？"></a>3、用加出来和除以11，看余数是多少？</h6><h6 id="4、余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X-－9－8－7－6－5－4－3－2。-即馀数0对应1，馀数1对应0，馀数2对应X…"><a href="#4、余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X-－9－8－7－6－5－4－3－2。-即馀数0对应1，馀数1对应0，馀数2对应X…" class="headerlink" title="4、余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X －9－8－7－6－5－4－3－2。(即馀数0对应1，馀数1对应0，馀数2对应X…)"></a>4、余数只可能有0－1－2－3－4－5－6－7－8－9－10这11个数字。其分别对应的最后一位身份证的号码为1－0－X －9－8－7－6－5－4－3－2。(即馀数0对应1，馀数1对应0，馀数2对应X…)</h6><h6 id="5、通过上面得知如果余数是3，就会在身份证的第18位数字上出现的是9。如果对应的数字是2，身份证的最后一位号码就是罗马数字x。"><a href="#5、通过上面得知如果余数是3，就会在身份证的第18位数字上出现的是9。如果对应的数字是2，身份证的最后一位号码就是罗马数字x。" class="headerlink" title="5、通过上面得知如果余数是3，就会在身份证的第18位数字上出现的是9。如果对应的数字是2，身份证的最后一位号码就是罗马数字x。"></a>5、通过上面得知如果余数是3，就会在身份证的第18位数字上出现的是9。如果对应的数字是2，身份证的最后一位号码就是罗马数字x。</h6><h6 id="例如：某男性的身份证号码为【53010219200508011x】，我们看看这个身份证是不是合法的身份证。"><a href="#例如：某男性的身份证号码为【53010219200508011x】，我们看看这个身份证是不是合法的身份证。" class="headerlink" title="例如：某男性的身份证号码为【53010219200508011x】，我们看看这个身份证是不是合法的身份证。"></a>例如：某男性的身份证号码为【53010219200508011x】，我们看看这个身份证是不是合法的身份证。</h6><h6 id="首先我们得出前17位的乘积和【-5-7-3-9-0-10-1-5-0-8-2-4-1-2-9-1-2-6-0-3-0-7-5-9-0-10-8-5-0-8-1-4-1-2-】是189，然后用189除以11得出的结果是189-11-17—-2，也就是说其余数是2。最后通过对应规则就可以知道余数2对应的检验码是X。所以，可以判定这是一个正确的身份证号码。"><a href="#首先我们得出前17位的乘积和【-5-7-3-9-0-10-1-5-0-8-2-4-1-2-9-1-2-6-0-3-0-7-5-9-0-10-8-5-0-8-1-4-1-2-】是189，然后用189除以11得出的结果是189-11-17—-2，也就是说其余数是2。最后通过对应规则就可以知道余数2对应的检验码是X。所以，可以判定这是一个正确的身份证号码。" class="headerlink" title="首先我们得出前17位的乘积和【(5*7)+(3*9)+(0*10)+(1*5)+(0*8)+(2*4)+(1*2)+(9*1)+(2*6)+(0*3)+(0*7)+(5*9)+(0*10)+(8*5)+(0*8)+(1*4)+(1*2)】是189，然后用189除以11得出的结果是189/11=17—-2，也就是说其余数是2。最后通过对应规则就可以知道余数2对应的检验码是X。所以，可以判定这是一个正确的身份证号码。"></a>首先我们得出前17位的乘积和【(5*7)+(3*9)+(0*10)+(1*5)+(0*8)+(2*4)+(1*2)+(9*1)+(2*6)+(0*3)+(0*7)+(5*9)+(0*10)+(8*5)+(0*8)+(1*4)+(1*2)】是189，然后用189除以11得出的结果是189/11=17—-2，也就是说其余数是2。最后通过对应规则就可以知道余数2对应的检验码是X。所以，可以判定这是一个正确的身份证号码。</h6><a id="more"></a>
<h5 id="这里使用-VB-NET-写了一个方法，返回布尔值-true-合法-false-非法"><a href="#这里使用-VB-NET-写了一个方法，返回布尔值-true-合法-false-非法" class="headerlink" title="这里使用 VB.NET 写了一个方法，返回布尔值  true 合法  false  非法"></a>这里使用 VB.NET 写了一个方法，返回布尔值  true 合法  false  非法</h5><figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> 检查18位身份证号是否合法</span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="str"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Function</span> sfzxy(str <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">If</span> Trim(str).Length &lt;&gt; <span class="number">18</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Dim</span> wi <span class="keyword">As</span> <span class="built_in">String</span> = (str.Substring(<span class="number">0</span>, <span class="number">1</span>) * <span class="number">7</span> + str.Substring(<span class="number">1</span>, <span class="number">1</span>) * <span class="number">9</span> + str.Substring(<span class="number">2</span>, <span class="number">1</span>) * <span class="number">10</span> +</span><br><span class="line">             str.Substring(<span class="number">3</span>, <span class="number">1</span>) * <span class="number">5</span> + str.Substring(<span class="number">4</span>, <span class="number">1</span>) * <span class="number">8</span> + str.Substring(<span class="number">5</span>, <span class="number">1</span>) * <span class="number">4</span> +</span><br><span class="line">            str.Substring(<span class="number">6</span>, <span class="number">1</span>) * <span class="number">2</span> + str.Substring(<span class="number">7</span>, <span class="number">1</span>) * <span class="number">1</span> + str.Substring(<span class="number">8</span>, <span class="number">1</span>) * <span class="number">6</span> +</span><br><span class="line">             str.Substring(<span class="number">9</span>, <span class="number">1</span>) * <span class="number">3</span> + str.Substring(<span class="number">10</span>, <span class="number">1</span>) * <span class="number">7</span> + str.Substring(<span class="number">11</span>, <span class="number">1</span>) * <span class="number">9</span> +</span><br><span class="line">             str.Substring(<span class="number">12</span>, <span class="number">1</span>) * <span class="number">10</span> + str.Substring(<span class="number">13</span>, <span class="number">1</span>) * <span class="number">5</span> + str.Substring(<span class="number">14</span>, <span class="number">1</span>) * <span class="number">8</span> +</span><br><span class="line">             str.Substring(<span class="number">15</span>, <span class="number">1</span>) * <span class="number">4</span> + str.Substring(<span class="number">16</span>, <span class="number">1</span>) * <span class="number">2</span>) <span class="keyword">Mod</span> <span class="number">11</span></span><br><span class="line">    <span class="keyword">Select</span> <span class="keyword">Case</span> wi</span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"0"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">1</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"1"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">0</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"2"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="string">"X"</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"3"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">9</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"4"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">8</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"5"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">7</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"6"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">6</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"7"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">5</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"8"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">4</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"9"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">3</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Case</span> <span class="string">"10"</span></span><br><span class="line">            <span class="keyword">If</span> str.Substring(<span class="number">17</span>, <span class="number">1</span>) = <span class="number">2</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">Case</span> <span class="keyword">Else</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">Return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Select</span></span><br><span class="line">    <span class="keyword">Return</span> <span class="literal">False</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>

<p>下图是以前写的小工具 <img data-src="https://cdn.fesugar.com/2016/10/2016-10-13-05111565.png" alt="20161013130810"></p>
]]></content>
      <categories>
        <category>书籍文档</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>VB.NET</tag>
      </tags>
  </entry>
  <entry>
    <title>An error occurred during local report processing</title>
    <url>/zh-CN/2016/10/18/An%20error%20occurred%20during%20local%20report%20processing.html</url>
    <content><![CDATA[<p>在.net平台使用 RDLC 进行报表开发，本机测试正常，到别的机器不是没反应就是报 An error occurred during local report processing 等错误<br>最后发现要确保报表所需的控件存在以及版本正确。</p>
<pre><code>Microsoft.ReportViewer.Common.dll 
Microsoft.ReportViewer.DataVisualization.dll 
Microsoft.ReportViewer.ProcessingObjectModel.dll 
Microsoft.ReportViewer.WinForms.dll</code></pre><p>这四个搞定后终于正常了！ 最后别忘了语言资源的使用<br>─zh-Hans </p>
<pre><code>Microsoft.ReportViewer.Common.resources.dll
Microsoft.ReportViewer.DataVisualization.resources.dll 
Microsoft.ReportViewer.Design.resources.dll 
Microsoft.ReportViewer.WinForms.resources.dll</code></pre>]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>RDLC</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 修复文件错误关联问题</title>
    <url>/zh-CN/2019/03/31/CMD%20%E4%BF%AE%E5%A4%8D%E6%96%87%E4%BB%B6%E9%94%99%E8%AF%AF%E5%85%B3%E8%81%94%E9%97%AE%E9%A2%98.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">::┌──────────────────────────┐</span><br><span class="line">::│		故障还原方案		 │</span><br><span class="line">::│		文件错误关联问题	 │</span><br><span class="line">::└──────────────────────────┘</span><br><span class="line">:: 显示或者隐藏命令 //ECHO [ON | OFF]</span><br><span class="line">@ ECHO OFF</span><br><span class="line">REM 对 lnk 和 exe 文件的错误关联问题进行分析</span><br><span class="line">:: 设置颜色为 淡蓝色背景色，白色前景色</span><br><span class="line">COLOR 9F</span><br><span class="line">:: 设置运行窗口标题</span><br><span class="line">TITLE 文件错误关联问题--演示</span><br><span class="line">:: 提示以管理员身份运行</span><br><span class="line">ECHO ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆ 为了能够成功演示，请使用管理员身份运行  [鼠标右键单击--以管理员身份运行] ☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line">:: 显示标语信息</span><br><span class="line">ECHO ╔═══════════════════════════════╗</span><br><span class="line">ECHO ║  _____糖糖-测试  ------------------------------------------- ║</span><br><span class="line">ECHO ╚═══════════════════════════════╝</span><br><span class="line"></span><br><span class="line">:: 说明可能导致此问题的相关原因</span><br><span class="line">ECHO.</span><br><span class="line">ECHO 主要症状：</span><br><span class="line">ECHO.</span><br><span class="line">ECHO 桌面多数或全部快捷方式图标变成了某一个相同的图标,exe文件无法运行。</span><br><span class="line">ECHO.</span><br><span class="line">ECHO 1.可能由于注册表异常导致。</span><br><span class="line">ECHO.</span><br><span class="line">ECHO 2.缓存过旧导致的异常。</span><br><span class="line">ECHO.</span><br><span class="line">ECHO =====================================</span><br><span class="line"></span><br><span class="line">:: 空一行</span><br><span class="line">ECHO.</span><br><span class="line">:: 获取当前相对路径</span><br><span class="line"><span class="built_in">set</span> P=%~dp0</span><br><span class="line"><span class="built_in">echo</span> 当前路径 ╞ %P% ╡</span><br><span class="line"></span><br><span class="line">:: 获取当前准确时间</span><br><span class="line"><span class="built_in">set</span> T=%DATE:~0,4%%DATE:~5,2%%DATE:~8,2%%TIME:~0,2%%TIME:~3,2%%TIME:~6,2%</span><br><span class="line"><span class="built_in">echo</span> 当前时间 ╞ %T% ╡</span><br><span class="line"></span><br><span class="line">:: 空一行</span><br><span class="line">ECHO.</span><br><span class="line">:: 检测系统版本，如果需要并跳转到相应的系统标签处进行执行</span><br><span class="line">VER|FINDSTR /I <span class="string">"5.1"</span> &amp;&amp; GOTO XP || GOTO Win7</span><br><span class="line"></span><br><span class="line">:: XP 系统的方案</span><br><span class="line">:XP</span><br><span class="line"></span><br><span class="line">:: 信息提示并作出选择</span><br><span class="line">:: 暂不使用此句 CHOICE /C YN /T 10 /D Y /M <span class="string">"您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span></span><br><span class="line"><span class="string">set /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span></span><br><span class="line"><span class="string">:: 判断输入的字符</span></span><br><span class="line"><span class="string">:: 暂不使用此句 IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span></span><br><span class="line"><span class="string">IF /I %IS% EQU Y (ECHO 记录状态) ELSE (EXIT)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 判断当前状态 0-1 ；写入注册表值，记录当前运行状态</span></span><br><span class="line"><span class="string">REG QUERY HKEY_CURRENT_USER\\Software\\FileExts_Test /ve 1&gt;nul 2&gt;nul</span></span><br><span class="line"><span class="string">:: 判断返回码是否为 1 (命令执行失败)</span></span><br><span class="line"><span class="string">IF ERRORLEVEL 1 (</span></span><br><span class="line"><span class="string">REG ADD "</span>HKEY_CURRENT_USER\\Software\\FileExts_Test<span class="string">" /ve /f</span></span><br><span class="line"><span class="string">TITLE 文件错误关联问题--制造故障中...</span></span><br><span class="line"><span class="string">GOTO XP_C</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">REG DELETE "</span>HKEY_CURRENT_USER\\Software\\FileExts_Test<span class="string">" /f</span></span><br><span class="line"><span class="string">TITLE 文件错误关联问题--修复故障中...</span></span><br><span class="line"><span class="string">GOTO XP_R</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: Win7 系统的方案</span></span><br><span class="line"><span class="string">:Win7</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 信息提示并作出选择</span></span><br><span class="line"><span class="string">CHOICE /C YN /T 10 /D Y /M "</span>您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span><br><span class="line">:: 暂不使用此句 <span class="built_in">set</span> /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span><br><span class="line">:: 判断输入的字符</span><br><span class="line">IF ERRORLEVEL 2 (EXIT) ELSE (ECHO 记录状态)</span><br><span class="line">:: 暂不使用此句 IF /I %IS% EQU Y (GOTO R) ELSE (EXIT)</span><br><span class="line"></span><br><span class="line">:: 判断当前状态 0-1 ；写入注册表值，记录当前运行状态</span><br><span class="line">REG QUERY HKEY_CURRENT_USER\\Software\\FileExts_Test /ve 1&gt;nul 2&gt;nul</span><br><span class="line">:: 判断返回码是否为 1 (命令执行失败)</span><br><span class="line">IF ERRORLEVEL 1 (</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\FileExts_Test"</span> /ve /f</span><br><span class="line">TITLE 文件错误关联问题--制造故障中...</span><br><span class="line">GOTO Win7_C</span><br><span class="line">) ELSE (</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\FileExts_Test"</span> /f</span><br><span class="line">TITLE 文件错误关联问题--修复故障中...</span><br><span class="line">GOTO Win7_R</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">::*****************************************************************************************</span><br><span class="line"></span><br><span class="line">:: 标签XP_C 制造故障</span><br><span class="line">:XP_C</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">:: 使用REG命令对注册表进行操作</span><br><span class="line"></span><br><span class="line">:: 首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">ECHO 备份路径 - %TEMP%</span><br><span class="line">REG EXPORT HKCR\\.exe %TEMP%\\%T%_HKCR.exe.reg</span><br><span class="line">REG EXPORT HKCR\\.lnk %TEMP%\\%T%_HKCR.lnk.reg</span><br><span class="line">REG EXPORT HKCR\\exefile %TEMP%\\%T%_HKCR.exefile.reg</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk %TEMP%\\%T%_HKCU.lnk.reg</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe %TEMP%\\%T%_HKCU.exe.reg</span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 篡改注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\exefile</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /ve /t REG_SZ /d <span class="string">"%%1"</span> /f</span><br><span class="line"></span><br><span class="line">:: 设置变量并赋值</span><br><span class="line"><span class="built_in">set</span> exe=<span class="string">""</span><span class="string">""</span>%%1<span class="string">""</span><span class="string">" %%*"</span></span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.exe</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.exe"</span> /ve /t REG_SZ /d <span class="string">"lnkfile"</span> /f</span><br><span class="line">::assoc.exe=exefile</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.lnk</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.lnk"</span> /ve /t REG_SZ /d <span class="string">"exefile"</span> /f</span><br><span class="line">::assoc.lnk=lnkfile</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /v <span class="string">"Progid"</span> /t REG_SZ /d <span class="string">"Applications\\iexplore.exe"</span> /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /v <span class="string">"Progid"</span> /t REG_SZ /d <span class="string">"Applications\\notepad.exe"</span> /f</span><br><span class="line"></span><br><span class="line">:: REG DELETE <span class="string">"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIcons"</span> /f</span><br><span class="line"></span><br><span class="line">:: 判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">:: 针对 XP 等系统</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line"></span><br><span class="line">:: 重启 explorer 进程</span><br><span class="line">:: 强制结束 资源管理器 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">:: 延时</span><br><span class="line">ECHO 三秒后自动启动 explorer 进程</span><br><span class="line">PING 127.0.0.1 -N 3 1&gt;nul 2&gt;nul</span><br><span class="line">:: 启动 资源管理器 explorer 进程</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表篡改完成☆☆</span><br><span class="line">ECHO.</span><br><span class="line">:: 等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,请查看故障是否制造成功 - 再次运行执行修复.</span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">:: 标签XP_R 进行修复</span><br><span class="line">:XP_R</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">:: 使用REG命令对注册表进行操作</span><br><span class="line"></span><br><span class="line">:: 首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">ECHO 备份路径 - %TEMP%</span><br><span class="line">REG EXPORT HKCR\\.exe %TEMP%\\%T%_HKCR.exe.reg</span><br><span class="line">REG EXPORT HKCR\\.lnk %TEMP%\\%T%_HKCR.lnk.reg</span><br><span class="line">REG EXPORT HKCR\\exefile %TEMP%\\%T%_HKCR.exefile.reg</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk %TEMP%\\%T%_HKCU.lnk.reg</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe %TEMP%\\%T%_HKCU.exe.reg</span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 修复注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\exefile</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /ve /t REG_SZ /d <span class="string">"%%1"</span> /f</span><br><span class="line"></span><br><span class="line">:: 设置变量并赋值</span><br><span class="line"><span class="built_in">set</span> exe=<span class="string">""</span><span class="string">""</span>%%1<span class="string">""</span><span class="string">" %%*"</span></span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.exe</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.exe"</span> /ve /t REG_SZ /d <span class="string">"exefile"</span> /f</span><br><span class="line">assoc.exe=exefile</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.lnk</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.lnk"</span> /ve /t REG_SZ /d lnkfile /f</span><br><span class="line">assoc.lnk=lnkfile</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">:: REG DELETE <span class="string">"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIcons"</span> /f</span><br><span class="line"></span><br><span class="line">:: 判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">:: 针对 XP 等系统</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line"></span><br><span class="line">:: 重启 explorer 进程</span><br><span class="line">:: 强制结束 资源管理器 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">:: 延时</span><br><span class="line">ECHO 三秒后自动启动 explorer 进程</span><br><span class="line">PING 127.0.0.1 -N 3 1&gt;nul 2&gt;nul</span><br><span class="line">:: 启动 资源管理器 explorer 进程</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表修复完成☆☆</span><br><span class="line">ECHO.</span><br><span class="line">:: 等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,请查看是否已经修复.</span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">::****************************************************************************************</span><br><span class="line">::****************************************************************************************</span><br><span class="line"></span><br><span class="line">:: 标签Win7_C 制造故障</span><br><span class="line">:Win7_C</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">:: 使用REG命令对注册表进行操作</span><br><span class="line"></span><br><span class="line">:: 首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">ECHO 备份路径 - %TEMP%</span><br><span class="line">REG EXPORT HKCR\\.exe %TEMP%\\%T%_HKCR.exe.reg /y</span><br><span class="line">REG EXPORT HKCR\\.lnk %TEMP%\\%T%_HKCR.lnk.reg /y</span><br><span class="line">REG EXPORT HKCR\\exefile %TEMP%\\%T%_HKCR.exefile.reg /y</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk %TEMP%\\%T%_HKCU.lnk.reg /y</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe %TEMP%\\%T%_HKCU.exe.reg /y</span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 篡改注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\exefile</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /ve /t REG_SZ /d <span class="string">"%%1"</span> /f</span><br><span class="line"></span><br><span class="line">:: 设置变量并赋值</span><br><span class="line"><span class="built_in">set</span> exe=<span class="string">""</span><span class="string">""</span>%%1<span class="string">""</span><span class="string">" %%*"</span></span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.exe</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.exe"</span> /ve /t REG_SZ /d <span class="string">"lnkfile"</span> /f</span><br><span class="line">::assoc.exe=exefile</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.lnk</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.lnk"</span> /ve /t REG_SZ /d <span class="string">"exefile"</span> /f</span><br><span class="line">::assoc.lnk=lnkfile</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /v <span class="string">"Progid"</span> /t REG_SZ /d <span class="string">"Applications\\iexplore.exe"</span> /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /va /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /v <span class="string">"Progid"</span> /t REG_SZ /d <span class="string">"Applications\\notepad.exe"</span> /f</span><br><span class="line"></span><br><span class="line">:: REG DELETE <span class="string">"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIcons"</span> /f</span><br><span class="line"></span><br><span class="line">:: 判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">:: 针对 Win7 等系统</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line"></span><br><span class="line">:: 重启 explorer 进程</span><br><span class="line">:: 强制结束 资源管理器 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">:: 延迟操作</span><br><span class="line">ECHO 3 秒后自动启动 explorer 进程</span><br><span class="line">TIMEOUT 3</span><br><span class="line">:: 启动 资源管理器 explorer 进程</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表篡改完成☆☆</span><br><span class="line">ECHO.</span><br><span class="line">:: 等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,请查看故障是否制造成功 - 再次运行执行修复.</span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">:: 标签Win7_R 进行修复</span><br><span class="line">:Win7_R</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">:: 使用REG命令对注册表进行操作</span><br><span class="line"></span><br><span class="line">:: 首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">ECHO 备份路径 - %TEMP%</span><br><span class="line">REG EXPORT HKCR\\.exe %TEMP%\\%T%_HKCR.exe.reg /y</span><br><span class="line">REG EXPORT HKCR\\.lnk %TEMP%\\%T%_HKCR.lnk.reg /y</span><br><span class="line">REG EXPORT HKCR\\exefile %TEMP%\\%T%_HKCR.exefile.reg /y</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk %TEMP%\\%T%_HKCU.lnk.reg /y</span><br><span class="line">REG EXPORT HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe %TEMP%\\%T%_HKCU.exe.reg /y</span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 修复注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\exefile</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\DefaultIcon"</span> /ve /t REG_SZ /d <span class="string">"%%1"</span> /f</span><br><span class="line"></span><br><span class="line">:: 设置变量并赋值</span><br><span class="line"><span class="built_in">set</span> exe=<span class="string">""</span><span class="string">""</span>%%1<span class="string">""</span><span class="string">" %%*"</span></span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\open\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /ve /t REG_SZ /d %exe% /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\exefile\\shell\\runas\\command"</span> /v <span class="string">"IsolatedCommand"</span> /t REG_SZ /d %exe% /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.exe</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.exe"</span> /ve /t REG_SZ /d <span class="string">"exefile"</span> /f</span><br><span class="line">assoc.exe=exefile</span><br><span class="line"></span><br><span class="line">:: HKEY_CLASSES_ROOT\\.lnk</span><br><span class="line">REG ADD <span class="string">"HKEY_CLASSES_ROOT\\.lnk"</span> /ve /t REG_SZ /d lnkfile /f</span><br><span class="line">assoc.lnk=lnkfile</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\UserChoice"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.lnk\\Openwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">:: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\UserChoice"</span> /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe"</span> /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /ve /f</span><br><span class="line">REG ADD <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /ve /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\OpenWithProgids"</span> /va /f</span><br><span class="line">REG DELETE <span class="string">"HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\.exe\\Openwithlist"</span> /va /f</span><br><span class="line"></span><br><span class="line">:: REG DELETE <span class="string">"HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ShellIcons"</span> /f</span><br><span class="line"></span><br><span class="line">:: 判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">:: 针对 Win7 等系统</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line"></span><br><span class="line">:: 重启 explorer 进程</span><br><span class="line">:: 强制结束 资源管理器 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">:: 延迟操作</span><br><span class="line">ECHO 3 秒后自动启动 explorer 进程</span><br><span class="line">TIMEOUT 3</span><br><span class="line">:: 启动 资源管理器 explorer 进程</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line"></span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表修复完成☆☆</span><br><span class="line">ECHO.</span><br><span class="line">:: 等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,请查看是否已经修复.</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> 提示：如果存在系统托盘图标部分消失的问题，请打开任务管理器 结束 explorer 进程，新建 explorer 进程即可，或者重启电脑。</span><br><span class="line">pause&gt;nul</span><br><span class="line"></span><br><span class="line">REM =====END=====</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 修复电脑磁盘图标</title>
    <url>/zh-CN/2019/03/31/CMD%20%E4%BF%AE%E5%A4%8D%E7%94%B5%E8%84%91%E7%A3%81%E7%9B%98%E5%9B%BE%E6%A0%87.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">::显示或者隐藏命令 //ECHO [ON | OFF]</span><br><span class="line">@ ECHO OFF</span><br><span class="line">REM 修复电脑磁盘图标。</span><br><span class="line">::设置颜色为 淡蓝色背景色，白色前景色</span><br><span class="line">COLOR 9F</span><br><span class="line">::设置运行窗口标题</span><br><span class="line">TITLE XP 、Win7电脑磁盘图标--修复</span><br><span class="line">::提示以管理员身份运行</span><br><span class="line">ECHO ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆ 为了能够成功修复，请使用管理员身份运行  [鼠标右键单击--以管理员身份运行] ☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line"></span><br><span class="line">::检测系统版本，如果需要并跳转到相应的系统标签处进行执行</span><br><span class="line">VER|FINDSTR /I <span class="string">"5.1"</span> &amp;&amp; GOTO XP || GOTO Win7</span><br><span class="line">:: XP 系统的方案</span><br><span class="line">:XP</span><br><span class="line">::说明可能导致此问题的相关原因</span><br><span class="line">ECHO 主要症状：</span><br><span class="line">ECHO 磁盘图标显示未知或者为其他图标。</span><br><span class="line">ECHO 1.可能由于注册表异常导致。</span><br><span class="line">ECHO 2.相关服务未启用。</span><br><span class="line">ECHO 3.设置了磁盘分区的Antorun.inf。</span><br><span class="line">ECHO 4.更改了shell32.dll中分区图标，或者shell32.dll文件损坏。</span><br><span class="line">ECHO 5.缓存过旧导致的异常。</span><br><span class="line">ECHO =====================================</span><br><span class="line">::信息提示并作出选择</span><br><span class="line">::暂不使用此句 CHOICE /C YN /T 10 /D Y /M <span class="string">"您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span></span><br><span class="line"><span class="string">set /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span></span><br><span class="line"><span class="string">::判断输入的字符</span></span><br><span class="line"><span class="string">::暂不使用此句 IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span></span><br><span class="line"><span class="string">IF /I %IS% EQU Y (GOTO R) ELSE (EXIT)</span></span><br><span class="line"><span class="string">:: Win7 系统的方案</span></span><br><span class="line"><span class="string">:Win7</span></span><br><span class="line"><span class="string">::说明可能导致此问题的相关原因</span></span><br><span class="line"><span class="string">ECHO 主要症状：</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 磁盘图标显示未知或者为其他图标。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 1.可能由于注册表异常导致。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 2.相关服务未启用。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 3.设置了磁盘分区的Antorun.inf。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 4.更改了shell32.dll中分区图标，或者shell32.dll文件损坏。</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 5.缓存过旧导致的异常。</span></span><br><span class="line"><span class="string">ECHO =====================================</span></span><br><span class="line"><span class="string">::信息提示并作出选择</span></span><br><span class="line"><span class="string">CHOICE /C YN /T 10 /D Y /M "</span>您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span><br><span class="line">::暂不使用此句 <span class="built_in">set</span> /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span><br><span class="line">::判断输入的字符</span><br><span class="line">IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span><br><span class="line">::暂不使用此句 IF /I %IS% EQU Y (GOTO R) ELSE (EXIT)</span><br><span class="line"></span><br><span class="line">::标签R</span><br><span class="line">:R</span><br><span class="line">ECHO.</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line">ECHO //如遇到安全软件拦截请解除拦截。/</span><br><span class="line">ECHO /////////////////////////////////</span><br><span class="line"></span><br><span class="line">::首先执行备份至临时目录</span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份autorun.inf文件 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">FOR %%i IN (</span><br><span class="line">C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO IF EXIST <span class="string">"%%i:\\autorun.inf"</span> (</span><br><span class="line">COPY /Y %%i:\\autorun.inf %TEMP%\\%%iautorun.inf) ELSE (</span><br><span class="line">ECHO 未备份 %%i:盘autorun.inf 文件)</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO %TEMP%</span><br><span class="line">ECHO ☆☆autorun.inf备份至临时目录☆☆</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 删除autorun.inf文件 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">FOR %%i IN (</span><br><span class="line">C D E F G H I J K L M N O P Q R S T U V W X Y Z) DO IF EXIST <span class="string">"%%i:\\autorun.inf"</span> (</span><br><span class="line">DEL /F /Q /A %%i:\\autorun.inf) ELSE (</span><br><span class="line">ECHO %%i:盘未发现autorun.inf 文件)</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆autorun.inf文件删除完毕☆☆</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 备份注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">REG EXPORT HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons %TEMP%\\HKLM.DriveIcons.reg /y</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表备份完毕☆☆</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 清理注册表 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">REG DELETE <span class="string">"HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\DriveIcons"</span> /f</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆注册表清理完毕☆☆</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">ECHO ■■■■ 重启 ShellHWDetection 服务 ■■■■</span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">::NET START [service]</span><br><span class="line">::NET STOP [service]</span><br><span class="line">::sc config [service] start= demand     //手动</span><br><span class="line">::sc config [service] start= auto       //自动</span><br><span class="line">::sc config [service] start= disabled //禁用</span><br><span class="line">::sc start [service]</span><br><span class="line">::sc stop   [service]</span><br><span class="line">net start ShellHWDetection</span><br><span class="line">sc config ShellHWDetection start= auto</span><br><span class="line">sc start ShellHWDetection</span><br><span class="line">ECHO └────────────┘</span><br><span class="line">ECHO ☆☆ShellHWDetection 服务启动完毕☆☆</span><br><span class="line"></span><br><span class="line">::判断图标缓存文件 IconCache.db 是否存在 ，是则删除文件</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\AppData\\Local\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line">IF EXIST <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span> (DEL /F /Q /A <span class="string">"%USERPROFILE%\\LocalSettings\\Application Data\\IconCache.db"</span>) ELSE (ECHO 未发现图标缓存文件)</span><br><span class="line">::重启 explorer 进程</span><br><span class="line">TASKKILL /IM explorer.exe /F</span><br><span class="line">start <span class="string">""</span> <span class="string">"explorer.exe"</span></span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line"></span><br><span class="line">ECHO ┌────────────┐</span><br><span class="line">ECHO 如问题没有有效解决可尝试</span><br><span class="line">ECHO 右键单击 “计算机” - “管理” - “磁盘管理”中更改磁盘的盘符来解决。</span><br><span class="line">ECHO └────────────┘</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">::等待按键继续</span><br><span class="line">ECHO .......................................................................</span><br><span class="line"><span class="built_in">echo</span> 操作完毕,如果提示成功并且还存在问题建议重启计算机后查看是否已经修复.</span><br><span class="line">pause&gt;nul</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
        <category>Windows_bash</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 修复XP摄像头功能异常</title>
    <url>/zh-CN/2019/03/31/CMD%20%E4%BF%AE%E5%A4%8DXP%E6%91%84%E5%83%8F%E5%A4%B4%E5%8A%9F%E8%83%BD%E5%BC%82%E5%B8%B8.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:: 显示或者隐藏命令 //ECHO [ON | OFF]</span><br><span class="line">@ ECHO OFF</span><br><span class="line">REM 摄像头无法正常打开。</span><br><span class="line"></span><br><span class="line">:: 设置颜色为 淡蓝色背景色，白色前景色</span><br><span class="line">COLOR 9F</span><br><span class="line"></span><br><span class="line">:: 设置运行窗口标题</span><br><span class="line">TITLE 摄像头异常</span><br><span class="line"></span><br><span class="line">:: 提示以管理员身份运行</span><br><span class="line">ECHO ■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆ 为了能够成功修复，请使用管理员身份运行  [鼠标右键单击--以管理员身份运行] ☆</span><br><span class="line">ECHO ☆                                                                          ☆</span><br><span class="line">ECHO ☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆☆</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">::说明可能导致此问题的相关原因</span><br><span class="line">ECHO 主要症状：</span><br><span class="line">ECHO 摄像头无法使用。</span><br><span class="line">ECHO 1.可能由于注册表异常导致。</span><br><span class="line">ECHO 2.可能相关组件导致异常。</span><br><span class="line">ECHO 3.可能由于摄像头驱动程序导致异常。</span><br><span class="line">ECHO 4. ...........</span><br><span class="line">ECHO =====================================</span><br><span class="line"></span><br><span class="line">:: 空一行</span><br><span class="line">ECHO.</span><br><span class="line">:: 获取当前相对路径</span><br><span class="line"><span class="built_in">set</span> P=%~dp0</span><br><span class="line"><span class="built_in">echo</span> 当前路径 ╞ %P% ╡</span><br><span class="line"></span><br><span class="line">:: 获取当前准确时间</span><br><span class="line"><span class="built_in">set</span> T=%DATE:~0,4%%DATE:~5,2%%DATE:~8,2%%TIME:~0,2%%TIME:~3,2%%TIME:~6,2%</span><br><span class="line"><span class="built_in">echo</span> 当前时间 ╞ %T% ╡</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">::信息提示并作出选择</span><br><span class="line">::暂不使用此句 CHOICE /C YN /T 10 /D Y /M <span class="string">"您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span></span><br><span class="line"><span class="string">set /P IS=您好，键入 Y 执行修复，N 退出。(不区分大小写，输入错误将直接退出) 输入后回车</span></span><br><span class="line"><span class="string">::判断输入的字符</span></span><br><span class="line"><span class="string">::暂不使用此句 IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span></span><br><span class="line"><span class="string">IF /I %IS% EQU Y (ECHO 开始修复) ELSE (EXIT)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 显示系统信息</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ■■■■■■ 当前系统版本 ■■■■■■</span></span><br><span class="line"><span class="string">VER|FINDSTR /I "</span>5.1<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■  Windows XP  ■■■■■■</span></span><br><span class="line"><span class="string">VER|FINDSTR /I "</span>6.1<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■   Windows 7  ■■■■■■</span></span><br><span class="line"><span class="string">VER|FINDSTR /I "</span>6.2<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■   Windows 8  ■■■■■■</span></span><br><span class="line"><span class="string">VER|FINDSTR /I "</span>6.3<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■  Windows 8.1 ■■■■■■</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO "</span>%PROCESSOR_ARCHITECTURE%<span class="string">"|FINDSTR /I "</span>86<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■     32 位    ■■■■■■</span></span><br><span class="line"><span class="string">ECHO "</span>%PROCESSOR_ARCHITECTURE%<span class="string">"|FINDSTR /I "</span>64<span class="string">" &gt; nul &amp;&amp; ECHO ■■■■■■     64 位    ■■■■■■</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 备份注册表</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 备份注册表 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 创建目录</span></span><br><span class="line"><span class="string">MKDIR %TEMP%\\%T% &gt; nul</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 备份目录 %TEMP%\\%T% 创建成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	 ECHO 创建备份目录 %TEMP%\\%T% 出错. &amp;&amp; ECHO 按任意键退出. &amp;&amp; pause&gt;nul &amp;&amp; EXIT</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: 导出注册表项、值</span></span><br><span class="line"><span class="string">REG EXPORT HKEY_CLASSES_ROOT\\CLSID\\&#123;62BE5D10-60EB-11d0-BD3B-00A0C911CE86&#125; %TEMP%\\%T%\\HKCR-CLSID-62BE5.reg</span></span><br><span class="line"><span class="string">REG EXPORT HKEY_CLASSES_ROOT\\Wow6432Node\\CLSID\\&#123;62BE5D10-60EB-11d0-BD3B-00A0C911CE86&#125; %TEMP%\\%T%\\HKCR-Wow6432Node-CLSID-62BE5.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REG EXPORT HKEY_CLASSES_ROOT\\CLSID\\&#123;DA4E3DA0-D07D-11d0-BD50-00A0C911CE86&#125; %TEMP%\\%T%\\HKCR-CLSID-DA4E3.reg</span></span><br><span class="line"><span class="string">REG EXPORT HKEY_CLASSES_ROOT\\Wow6432Node\\CLSID\\&#123;DA4E3DA0-D07D-11d0-BD50-00A0C911CE86&#125; %TEMP%\\%T%\\HKCR-Wow6432Node-CLSID-DA4E3.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REG EXPORT HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\&#123;6BDD1FC6-810F-11D0-BEC7-08002BE2092F&#125; %TEMP%\\%T%\\HKLM-6BDD1.reg</span></span><br><span class="line"><span class="string">::REG EXPORT 注册表项 %TEMP%\\%T%\\导出的名称</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO 注册表备份完毕，位置 %TEMP%\\%T%\</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 修复注册表</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 重置注册表 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 删除注册表项、值</span></span><br><span class="line"><span class="string">REG DELETE "</span>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\&#123;6BDD1FC6-810F-11D0-BEC7-08002BE2092F&#125;<span class="string">" /v "</span>UpperFilters<span class="string">" /f</span></span><br><span class="line"><span class="string">:: 添加注册表项、值</span></span><br><span class="line"><span class="string">REG ADD "</span>HKEY_LOCAL_MACHINE\\SYSTEM\\ControlSet001\\Control\\Class\\&#123;6BDD1FC6-810F-11D0-BEC7-08002BE2092F&#125;<span class="string">" /v "</span>UpperFilters<span class="string">" /t REG_MULTI_SZ /d "</span><span class="string">" /f</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 注册 Quartz.dll Proppage.dll directSpy.dll</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 注册 dll 组件 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: devenum.dll</span></span><br><span class="line"><span class="string">regsvr32 /s devenum.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 devenum.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 devenum.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 devenum.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 devenum.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: msdmo.dll</span></span><br><span class="line"><span class="string">regsvr32 /s msdmo.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 msdmo.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 msdmo.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 msdmo.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 msdmo.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: avicap32.dll</span></span><br><span class="line"><span class="string">regsvr32 /s avicap32.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 avicap32.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 avicap32.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 avicap32.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 avicap32.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: msvfw32.dll</span></span><br><span class="line"><span class="string">regsvr32 /s msvfw32.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 msvfw32.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 msvfw32.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 msvfw32.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 msvfw32.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: Quartz.dll</span></span><br><span class="line"><span class="string">regsvr32 /s Quartz.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 Quartz.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 Quartz.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 Quartz.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 Quartz.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: Proppage.dll</span></span><br><span class="line"><span class="string">regsvr32 /s Proppage.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 Proppage.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 Proppage.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 Proppage.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 Proppage.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: directSpy.dll</span></span><br><span class="line"><span class="string">regsvr32 /s directSpy.dll</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 注册 directSpy.dll 成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 5 (</span></span><br><span class="line"><span class="string">		ECHO 注册 directSpy.dll 所需的权限需要提升.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 文件 directSpy.dll 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 注册 directSpy.dll 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 启动 Windows Image Acquisition (WIA) 服务</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 启动 Windows Image Acquisition (WIA) 服务 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: net start 命令启动 stisvc 服务</span></span><br><span class="line"><span class="string">net start stisvc</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 设置 stisvc 服务为自启动</span></span><br><span class="line"><span class="string">sc config stisvc start= auto</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 再次启动 stisvc 服务使用 sc start 命令</span></span><br><span class="line"><span class="string">sc start stisvc</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 等待按键继续</span></span><br><span class="line"><span class="string">ECHO .......................................................................</span></span><br><span class="line"><span class="string">echo 操作完毕.</span></span><br><span class="line"><span class="string">pause&gt;nul</span></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 在Windows7 之后版本添加第三方摄像头工具</title>
    <url>/zh-CN/2019/03/31/CMD%20%E5%9C%A8Windows7%20%E4%B9%8B%E5%90%8E%E7%89%88%E6%9C%AC%E6%B7%BB%E5%8A%A0%E7%AC%AC%E4%B8%89%E6%96%B9%E6%91%84%E5%83%8F%E5%A4%B4%E5%B7%A5%E5%85%B7.html</url>
    <content><![CDATA[<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:: 显示或者隐藏命令 //ECHO [ON | OFF]</span><br><span class="line">@ ECHO OFF</span><br><span class="line">REM 没有摄像头图标。</span><br><span class="line"></span><br><span class="line">:: 设置颜色为 淡蓝色背景色，白色前景色</span><br><span class="line">COLOR 9F</span><br><span class="line"></span><br><span class="line">:: 设置运行窗口标题</span><br><span class="line">TITLE 添加摄像头图标</span><br><span class="line"></span><br><span class="line">:: 申请提权</span><br><span class="line">net session &gt;nul 2&gt;&amp;1</span><br><span class="line"><span class="keyword">if</span> not <span class="string">"%errorLevel%"</span> == <span class="string">"0"</span> (</span><br><span class="line">  <span class="built_in">echo</span> 提示：此工具必须使用管理员权限运行！</span><br><span class="line">  <span class="built_in">echo</span> 它会弹出UAC对话框，请单击[是]继续。</span><br><span class="line">  <span class="built_in">echo</span> Set UAC = CreateObject^(<span class="string">"Shell.Application"</span>^) &gt; <span class="string">"%temp%\\578635getadmin.vbs"</span></span><br><span class="line">  <span class="built_in">echo</span> UAC.ShellExecute <span class="string">"%~s0"</span>, <span class="string">"%*"</span>, <span class="string">""</span>, <span class="string">"runas"</span>, 1 &gt;&gt; <span class="string">"%temp%\\578635getadmin.vbs"</span></span><br><span class="line">  <span class="string">"%temp%\\578635getadmin.vbs"</span></span><br><span class="line">  <span class="built_in">exit</span> /b 2</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">::说明可能导致此问题的相关原因</span><br><span class="line">ECHO 主要症状：</span><br><span class="line">ECHO 摄像头图标消失、没有图标。</span><br><span class="line">ECHO 1.可能未安装摄像头软件。</span><br><span class="line">ECHO 2.可能注册表异常导致。</span><br><span class="line">ECHO 3.用户错误操作导致。</span><br><span class="line">ECHO 注意：此脚本将创建第三方摄像头软件</span><br><span class="line">ECHO =====================================</span><br><span class="line"></span><br><span class="line">:: 空一行</span><br><span class="line">:: ECHO.</span><br><span class="line">:: 获取当前相对路径</span><br><span class="line"><span class="built_in">set</span> P=%~dp0</span><br><span class="line">:: <span class="built_in">echo</span> 当前路径 ╞ %P% ╡</span><br><span class="line"></span><br><span class="line">:: 获取当前准确时间</span><br><span class="line"><span class="built_in">set</span> T=%DATE:~0,4%%DATE:~5,2%%DATE:~8,2%%TIME:~0,2%%TIME:~3,2%%TIME:~6,2%</span><br><span class="line">:: <span class="built_in">echo</span> 当前时间 ╞ %T% ╡</span><br><span class="line"></span><br><span class="line">:: 显示系统信息</span><br><span class="line">ECHO ■■■■■■ 当前系统版本 ■■■■■■</span><br><span class="line">VER|FINDSTR /I <span class="string">"5.1"</span> &gt; nul &amp;&amp; ECHO ■■■■■■  Windows XP  ■■■■■■ &amp;&amp; GOTO A</span><br><span class="line">VER|FINDSTR /I <span class="string">"6.1"</span> &gt; nul &amp;&amp; ECHO ■■■■■■   Windows 7  ■■■■■■ &amp;&amp; GOTO A</span><br><span class="line">VER|FINDSTR /I <span class="string">"6.2"</span> &gt; nul &amp;&amp; ECHO ■■■■■■   Windows 8  ■■■■■■ &amp;&amp; GOTO A</span><br><span class="line">VER|FINDSTR /I <span class="string">"6.3"</span> &gt; nul &amp;&amp; ECHO ■■■■■■  Windows 8.1 ■■■■■■ &amp;&amp; GOTO A</span><br><span class="line"></span><br><span class="line">wmic os get name</span><br><span class="line">:A</span><br><span class="line">ECHO <span class="string">"%PROCESSOR_ARCHITECTURE%"</span>|FINDSTR /I <span class="string">"86"</span> &gt; nul &amp;&amp; ECHO ■■■■■■     32 位    ■■■■■■ &amp;&amp; <span class="built_in">set</span> X=32</span><br><span class="line">ECHO <span class="string">"%PROCESSOR_ARCHITECTURE%"</span>|FINDSTR /I <span class="string">"64"</span> &gt; nul &amp;&amp; ECHO ■■■■■■     64 位    ■■■■■■ &amp;&amp; <span class="built_in">set</span> X=64</span><br><span class="line"></span><br><span class="line">:: 判断变量X的值,X为系统位数</span><br><span class="line">IF /I %X% EQU 64 (</span><br><span class="line">	<span class="built_in">set</span> exe=<span class="string">"%ProgramFiles(X86)%\\MiniCapTool\\Cap.exe"</span></span><br><span class="line">	<span class="built_in">set</span> ico=<span class="string">"%ProgramFiles(X86)%\\MiniCapTool\\Cap.ico"</span></span><br><span class="line">	<span class="built_in">set</span> dir=<span class="string">"%ProgramFiles(X86)%\\MiniCapTool"</span></span><br><span class="line">) ELSE (</span><br><span class="line">	IF /I %X% EQU 32 (</span><br><span class="line">		<span class="built_in">set</span> exe=<span class="string">"%ProgramFiles%\\MiniCapTool\\Cap.exe"</span></span><br><span class="line">		<span class="built_in">set</span> ico=<span class="string">"%ProgramFiles%\\MiniCapTool\\Cap.ico"</span></span><br><span class="line">		<span class="built_in">set</span> dir=<span class="string">"%ProgramFiles%\\MiniCapTool"</span></span><br><span class="line">	) ELSE (</span><br><span class="line">		<span class="built_in">set</span> exe=<span class="string">"%systemdrive%\\Program Files\\MiniCapTool\\Cap.exe"</span></span><br><span class="line">		<span class="built_in">set</span> ico=<span class="string">"%systemdrive%\\Program Files\\MiniCapTool\\Cap.ico"</span></span><br><span class="line">		<span class="built_in">set</span> dir=<span class="string">"%systemdrive%\\Program Files\\MiniCapTool"</span></span><br><span class="line">	)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">:: 获取当前状态</span><br><span class="line">ECHO.</span><br><span class="line">ECHO 正在检测当前状态...</span><br><span class="line">ECHO.</span><br><span class="line">:: 判断文件是否存在</span><br><span class="line">IF EXIST %exe% (</span><br><span class="line">	<span class="built_in">echo</span> 发现存在摄像头软件. 路径 &amp;&amp; <span class="built_in">echo</span> %exe%</span><br><span class="line">) ELSE (</span><br><span class="line">	<span class="built_in">echo</span> 未发现摄像头软件. </span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">:: 检查注册表</span><br><span class="line">REG QUERY HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; /ve &gt;nul 2&gt;nul</span><br><span class="line">:: 判断返回码状态</span><br><span class="line">IF /I %errorlevel% EQU 0 (</span><br><span class="line">	ECHO 检测到注册表有残留.</span><br><span class="line">) ELSE (</span><br><span class="line">	IF /I %errorlevel% EQU 1 (</span><br><span class="line">		ECHO 未发现注册表残留.</span><br><span class="line">	) ELSE (</span><br><span class="line">		ECHO 出现未知错误.</span><br><span class="line">	)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">ECHO.</span><br><span class="line">::信息提示并作出选择</span><br><span class="line">::暂不使用此句 CHOICE /C YN /T 10 /D Y /M <span class="string">"您好，键入 Y 执行修复，N 退出，如未操作，默认十秒后自动执行修复。</span></span><br><span class="line"><span class="string">set /P IS=您好，键入1执行添加、修复，2移除，3退出。(输入错误将直接退出) 输入后回车:</span></span><br><span class="line"><span class="string">::判断输入的字符</span></span><br><span class="line"><span class="string">::暂不使用此句 IF ERRORLEVEL 2 (EXIT) ELSE (GOTO R)</span></span><br><span class="line"><span class="string">IF /I %IS% EQU 1 (</span></span><br><span class="line"><span class="string">	ECHO 开始修复 &amp;&amp; GOTO Install</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %IS% EQU 2 (</span></span><br><span class="line"><span class="string">		ECHO 开始移除 &amp;&amp; GOTO uninstall</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %IS% EQU 3 (</span></span><br><span class="line"><span class="string">			EXIT</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 输入错误，按任意键退出。&amp;&amp; pause&gt;nul &amp;&amp; EXIT</span></span><br><span class="line"><span class="string">		)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REM ----------------------------------------------------------------------------------------------------------</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:Install</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 备份注册表</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 备份注册表 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 创建目录</span></span><br><span class="line"><span class="string">MKDIR %TEMP%\\%T% &gt; nul</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 备份目录 %TEMP%\\%T% 创建成功.</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	 ECHO 创建备份目录 %TEMP%\\%T% 出错. &amp;&amp; ECHO 按任意键退出. &amp;&amp; pause&gt;nul &amp;&amp; EXIT</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">:: 导出注册表项、值</span></span><br><span class="line"><span class="string">REG EXPORT HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; %TEMP%\\%T%\\HKCM-CLSID-AC000.reg</span></span><br><span class="line"><span class="string">REG EXPORT HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; %TEMP%\\%T%\\HKCM-NameSpace-CLSID-AC000.reg</span></span><br><span class="line"><span class="string">::REG EXPORT 注册表项 %TEMP%\\%T%\\导出的名称</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO 注册表备份完毕，位置 %TEMP%\\%T%\</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 安装摄像头软件 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO 安装位置 %dir%</span></span><br><span class="line"><span class="string">:: 创建目录</span></span><br><span class="line"><span class="string">MKDIR %dir%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 复制文件、目录到系统软件安装目录</span></span><br><span class="line"><span class="string">COPY /y "</span>%P%\\MiniCapTool\\Cap.exe<span class="string">" %exe%</span></span><br><span class="line"><span class="string">COPY /y "</span>%P%\\MiniCapTool\\Cap.ico<span class="string">" %ico%</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 修复注册表</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 修复注册表 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 安装</span></span><br><span class="line"><span class="string">REM ECHO Windows Registry Editor Version 5.00 &gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;] &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO @="</span>USB 视频设备<span class="string">" &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\DefaultIcon] &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO @="</span>\\%ico%<span class="string">" &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO [HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell\\Open\\Command] &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO @="</span>\\%exe%<span class="string">" &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO [HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;] &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string">REM ECHO @="</span>USB 视频设备<span class="string">" &gt;&gt; %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REM :: 导入注册表文件</span></span><br><span class="line"><span class="string">REM regedit /s %TEMP%\\%T%\\add.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; /ve /t REG_SZ /d "</span>USB 视频设备<span class="string">" /f</span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\DefaultIcon /ve /t REG_SZ /d %ico% /f</span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell /ve /f</span></span><br><span class="line"><span class="string">REG DELETE HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell /va /f</span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell\\Open /ve /f</span></span><br><span class="line"><span class="string">REG DELETE HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell\\Open /va /f</span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;\\shell\\Open\\Command /ve /t REG_SZ /d %exe% /f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REG ADD HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; /ve /t REG_SZ /d "</span>USB 视频设备<span class="string">" /f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 判断执行状态</span></span><br><span class="line"><span class="string">IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	ECHO 操作已成功完成..</span></span><br><span class="line"><span class="string">) ELSE (</span></span><br><span class="line"><span class="string">	IF /I %errorlevel% EQU 1 (</span></span><br><span class="line"><span class="string">		ECHO 请尝试使用管理员身份运行脚本程序.</span></span><br><span class="line"><span class="string">	) ELSE (</span></span><br><span class="line"><span class="string">		IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			ECHO 注册表文件 没有找到.</span></span><br><span class="line"><span class="string">		) ELSE (</span></span><br><span class="line"><span class="string">			ECHO 出现未知错误.)</span></span><br><span class="line"><span class="string">	)</span></span><br><span class="line"><span class="string">)</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 结束</span></span><br><span class="line"><span class="string">GOTO END</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:uninstall</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 删除摄像头软件 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 删除文件</span></span><br><span class="line"><span class="string">ECHO 正在删除摄像头软件...</span></span><br><span class="line"><span class="string">ECHO 卸载位置 %dir%</span></span><br><span class="line"><span class="string">RMDIR /S /Q %dir%</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ▁▂▃▄▅▆▇█ 清理注册表 █▇▆▅▄▃▂▁</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">:: 删除注册表</span></span><br><span class="line"><span class="string">REM ECHO 正在清理注册表残留...</span></span><br><span class="line"><span class="string">REM ECHO Windows Registry Editor Version 5.00 &gt; %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string">REM ECHO [-HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;] &gt;&gt; %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string">REM ECHO. &gt;&gt; %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string">REM ECHO [-HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125;] &gt;&gt; %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REM :: 导入注册表文件</span></span><br><span class="line"><span class="string">REM regedit /s %TEMP%\\%T%\\remove.reg</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">REG DELETE HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; /f</span></span><br><span class="line"><span class="string">REG DELETE HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\MyComputer\\NameSpace\\&#123;AC000000-AC00-AC00-AC00-100000000008&#125; /f</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 判断执行状态</span></span><br><span class="line"><span class="string">REM IF /I %errorlevel% EQU 0 (</span></span><br><span class="line"><span class="string">	REM ECHO 操作已成功完成..</span></span><br><span class="line"><span class="string">REM ) ELSE (</span></span><br><span class="line"><span class="string">	REM IF /I %errorlevel% EQU 1 (</span></span><br><span class="line"><span class="string">		REM ECHO 请尝试使用管理员身份运行脚本程序.</span></span><br><span class="line"><span class="string">	REM ) ELSE (</span></span><br><span class="line"><span class="string">		REM IF /I %errorlevel% EQU 3 (</span></span><br><span class="line"><span class="string">			REM ECHO 注册表文件 没有找到.</span></span><br><span class="line"><span class="string">		REM ) ELSE (</span></span><br><span class="line"><span class="string">			REM ECHO 出现未知错误.)</span></span><br><span class="line"><span class="string">	REM )</span></span><br><span class="line"><span class="string">REM )</span></span><br><span class="line"><span class="string">ECHO.</span></span><br><span class="line"><span class="string">ECHO ━━━━━━━━━━━━━━━━━━━━━━</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">:: 结束标签</span></span><br><span class="line"><span class="string">:END</span></span><br><span class="line"><span class="string">:: 等待按键继续</span></span><br><span class="line"><span class="string">ECHO .......................................................................</span></span><br><span class="line"><span class="string">echo 操作完毕.</span></span><br><span class="line"><span class="string">pause&gt;nul</span></span><br></pre></td></tr></table></figure>
<p><a href="https://cdn.fesugar.com/2019/03/2019-03-31-01060131.zip" target="_blank" rel="noopener">第三方摄像头_脚本.zip</a></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>Windows_bash</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 脚本带参数运行</title>
    <url>/zh-CN/2019/01/13/CMD%20%E8%84%9A%E6%9C%AC%E5%B8%A6%E5%8F%82%E6%95%B0%E8%BF%90%E8%A1%8C.html</url>
    <content><![CDATA[<p>CMD 脚本加参数运行示例</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">SET DIR=%~dp0%</span><br><span class="line">SET ARGS=%*</span><br><span class="line"><span class="keyword">if</span> NOT <span class="string">'%1'</span>==<span class="string">''</span> SET ARGS=%ARGS:<span class="string">"=\\"</span>%</span><br><span class="line"><span class="keyword">if</span> <span class="string">'%1'</span>==<span class="string">'/?'</span> goto usage</span><br><span class="line"><span class="keyword">if</span> <span class="string">'%1'</span>==<span class="string">'-?'</span> goto usage</span><br><span class="line"><span class="keyword">if</span> <span class="string">'%1'</span>==<span class="string">'?'</span> goto usage</span><br><span class="line"><span class="keyword">if</span> <span class="string">'%1'</span>==<span class="string">'/help'</span> goto usage</span><br><span class="line"><span class="keyword">if</span> <span class="string">'%1'</span>==<span class="string">'help'</span> goto usage</span><br><span class="line"></span><br><span class="line">@PowerShell -NonInteractive -NoProfile -ExecutionPolicy Bypass -Command ^</span><br><span class="line"> <span class="string">"&amp; Import-Module '%DIR%..\\Pester.psm1';  &amp; &#123; Invoke-Pester -EnableExit %ARGS%&#125;"</span></span><br><span class="line"></span><br><span class="line">goto finish</span><br><span class="line">:usage</span><br><span class="line"><span class="keyword">if</span> NOT <span class="string">'%2'</span>==<span class="string">''</span> goto <span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> To run pester <span class="keyword">for</span> tests, just call pester or runtests with no arguments</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> Example: pester</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> For Detailed <span class="built_in">help</span> information, call pester <span class="built_in">help</span> with a <span class="built_in">help</span> topic. See</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">help</span> topic about_Pester <span class="keyword">for</span> a list of all topics at the end</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line"><span class="built_in">echo</span> Example: pester <span class="built_in">help</span> about_Pester</span><br><span class="line"><span class="built_in">echo</span>.</span><br><span class="line">goto finish</span><br><span class="line"></span><br><span class="line">:<span class="built_in">help</span></span><br><span class="line">@PowerShell -NonInteractive -NoProfile -ExecutionPolicy Bypass -Command ^</span><br><span class="line">  <span class="string">"&amp; Import-Module '%DIR%..\\Pester.psm1'; &amp; &#123; Get-Help %2&#125;"</span></span><br><span class="line"></span><br><span class="line">:finish</span><br><span class="line"><span class="built_in">exit</span> /B %errorlevel%</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
        <category>Windows_bash</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>CMD 获取 WinRE 状态</title>
    <url>/zh-CN/2019/01/13/CMD%20%E8%8E%B7%E5%8F%96%20WinRE%20%E7%8A%B6%E6%80%81.html</url>
    <content><![CDATA[<p>查询 bcdedit /enum 启动项的 ‘recoveryenabled’ 字段判断 Windows RE 开启状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"> <span class="keyword">for</span> /f <span class="string">"tokens=1,2 delims= "</span> %%i <span class="keyword">in</span> (<span class="string">'bcdedit /enum'</span>) <span class="keyword">do</span> (</span><br><span class="line">  <span class="keyword">if</span> /i <span class="string">'%%i'</span>==<span class="string">'recoveryenabled'</span> (</span><br><span class="line">    <span class="keyword">if</span> /i <span class="string">'%%j'</span>==<span class="string">'yes'</span> (<span class="built_in">echo</span> [%time%][%~n0] WinRE is Enabled&amp; <span class="built_in">exit</span> /b 0)</span><br><span class="line">  )</span><br><span class="line"> )</span><br><span class="line"> <span class="built_in">echo</span> [%time%][%~n0] WinRE is Disabled</span><br><span class="line"> <span class="built_in">exit</span> /b 1</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
        <category>Windows_bash</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>工具</tag>
        <tag>CMD</tag>
      </tags>
  </entry>
  <entry>
    <title>ajax jsonp跨域请求数据出错 Uncaught SyntaxError: Unexpected token :</title>
    <url>/zh-CN/2016/10/12/ajax-jsonp%E8%B7%A8%E5%9F%9F%E8%AF%B7%E6%B1%82%E6%95%B0%E6%8D%AE%E5%87%BA%E9%94%99-Uncaught-SyntaxError-Unexpected-token.html</url>
    <content><![CDATA[<p>解决使用 ajax 的 jsonp 出现 Uncaught SyntaxError: Unexpected token :   偶然使用 ajax 处理 jsonp 时居然提示“Uncaught SyntaxError: Unexpected token :“ 检查了json数据没有问题，搜集了一番发现使用回掉的方式可以解决  </p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">$.ajax(&#123;</span><br><span class="line">    type: <span class="string">"get"</span>,</span><br><span class="line">    url: <span class="string">"xxxxxx"</span>,</span><br><span class="line">    dataType: <span class="string">"jsonp"</span>,</span><br><span class="line">    jsonp: <span class="string">"callback"</span>,</span><br><span class="line">    jsonpCallback: <span class="string">"success"</span>,</span><br><span class="line">    success: <span class="function"><span class="keyword">function</span>(<span class="params">json</span>) </span>&#123;</span><br><span class="line">        $(<span class="string">"msg"</span>).html(json.data);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>  需要注意服务端这样写 php</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$_GET[<span class="string">'callback'</span>].<span class="string">"("</span>.json_encode($json).<span class="string">")"</span>;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
      </categories>
      <tags>
        <tag>AJAX</tag>
        <tag>JSON</tag>
      </tags>
  </entry>
  <entry>
    <title>DataGridView和BindingSource复合控件</title>
    <url>/zh-CN/2019/09/10/DataGridView%E5%92%8CBindingSource%E5%A4%8D%E5%90%88%E6%8E%A7%E4%BB%B6.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="DataGridView和BindingSource复合控件"><a href="#DataGridView和BindingSource复合控件" class="headerlink" title="DataGridView和BindingSource复合控件"></a>DataGridView和BindingSource复合控件</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>复合控件是封装在公共容器内的 Windows 窗体控件的集合，这种控件通常称为用户控件，其中包含的子控件称为构成控件。复合控件包含与每个构成控件相关联的所有固有功能，允许程序设计人员有选择地公开和绑定它们的属性。本实例将使用DataGridView控件和BindingSource控件制作复合控件来显示学生档案信息，实例运行效果如图1所示。</p>
<p><img data-src="https://cdn.fesugar.com/2019/09/091019_1532_DataGridVie1.png" alt=""></p>
<p>图1 DataGridView和BindingSource复合控件</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例实现时主要用到了DataGridView控件和BindingSource组件，下面分别对它们进行详细讲解。<br>（1）DataGridView控件<br>DataGridView控件，又称为数据表格控件，它提供一种强大而灵活的以表格形式显示数据的方式，可以使用DataGridView控件来显示少量数据的只读视图，也可以对其进行缩放以显示特大数据集的可编辑视图。使用DataGridView控件，可以显示和编辑来自多种不同类型的数据源的表格数据。将数据绑定到DataGridView控件非常简单和直观，在大多数情况下，只需设置DataSource属性即可。另外，DataGridView控件具有极高的可配置性和可扩展性，它提供有大量的属性、方法和事件，可以用来对该控件的外观和行为进行自定义。当需要在Windows窗体应用程序中显示表格数据时，首先考虑使用DataGridView控件。若要以小型网格显示只读值或者使用户能够编辑具有数百万条记录的表，DataGridView控件将提供可以方便地进行编程以及有效地利用内存的解决方案。</p>
<p>DataGridView控件的常用属性及说明如表1所示。 </p>
<p>表1 DataGridView控件的常用属性及说明</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>AllowUserToAddRows</td>
<td>获取或设置一个值，该值指示是否向用户显示添加行的选项</td>
</tr>
<tr>
<td>AllowUserToDeleteRows</td>
<td>获取或设置一个值，该值指示是否允许用户从DataGridView中删除行</td>
</tr>
<tr>
<td>AlternatingRowsDefaultCellStyle</td>
<td>获取或设置应用于DataGridView的奇数行的默认单元格样式</td>
</tr>
<tr>
<td>ColumnCount</td>
<td>获取或设置DataGridView中显示的列数</td>
</tr>
<tr>
<td>Columns</td>
<td>获取一个包含控件中所有列的集合</td>
</tr>
<tr>
<td>CurrentCell</td>
<td>获取或设置当前处于活动状态的单元格</td>
</tr>
<tr>
<td>CurrentRow</td>
<td>获取包含当前单元格的行</td>
</tr>
<tr>
<td>DataMember</td>
<td>获取或设置数据源中DataGridView显示其数据的列表或表的名称</td>
</tr>
<tr>
<td>DataSource</td>
<td>获取或设置DataGridView所显示数据的数据源</td>
</tr>
<tr>
<td>MultiSelect</td>
<td>获取或设置一个值，该值指示是否允许用户一次选择DataGridView的多个单元格、行或列</td>
</tr>
<tr>
<td>NewRowIndex</td>
<td>获取新记录所在行的索引</td>
</tr>
<tr>
<td>RowCount</td>
<td>获取或设置DataGridView中显示的行数</td>
</tr>
<tr>
<td>Rows</td>
<td>获取一个集合，该集合包含DataGridView控件中的所有行</td>
</tr>
<tr>
<td>SortOrder</td>
<td>获取一个值，该值指示是按升序或降序对DataGridView控件中的项进行排序，还是不排序</td>
</tr>
</tbody></table>
<p>DataGridView控件的常用事件及说明如表2所示。</p>
<p>表2 DataGridView控件的常用事件及说明</p>
<table>
<thead>
<tr>
<th>事件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>CellClick</td>
<td>在单元格的任何部分被单击时发生</td>
</tr>
<tr>
<td>CellContentClick</td>
<td>在单元格中的内容被单击时发生</td>
</tr>
<tr>
<td>CellContentDoubleClick</td>
<td>在用户双击单元格的内容时发生</td>
</tr>
<tr>
<td>CellDoubleClick</td>
<td>在用户双击单元格中的任何位置时发生</td>
</tr>
<tr>
<td>CellMouseClick</td>
<td>在用户用鼠标单击单元格中的任何位置时发生</td>
</tr>
<tr>
<td>CellMouseDoubleClick</td>
<td>在双击DataGridView中的单元格时发生</td>
</tr>
<tr>
<td>Sorted</td>
<td>在DataGridView控件完成排序操作时发生</td>
</tr>
</tbody></table>
<p>（2）BindingSource组件</p>
<p>BindingSource组件，又称为数据源绑定组件，它主要用于封装窗体的数据源。<br>BindingSource组件的常用属性及说明如表3所示。</p>
<p>表3 BindingSource组件的常用属性及说明</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>AllowNew</td>
<td>获取或设置一个值，该值指示是否可以使用AddNew方法向列表中添加项</td>
</tr>
<tr>
<td>AllowRemove</td>
<td>获取一个值，它指示是否可从基础列表中移除项</td>
</tr>
<tr>
<td>Count</td>
<td>获取基础列表中的总项数</td>
</tr>
<tr>
<td>Current</td>
<td>获取列表中的当前项</td>
</tr>
<tr>
<td>DataMember</td>
<td>获取或设置连接器当前绑定到的数据源中的特定列表</td>
</tr>
<tr>
<td>DataSource</td>
<td>获取或设置连接器绑定到的数据源</td>
</tr>
<tr>
<td>Item</td>
<td>获取或设置指定索引处的列表元素</td>
</tr>
<tr>
<td>List</td>
<td>获取连接器绑定到的列表</td>
</tr>
<tr>
<td>Position</td>
<td>获取或设置基础列表中当前项的索引</td>
</tr>
<tr>
<td>Sort</td>
<td>获取或设置用于排序的列名称以及用于查看数据源中的行的排序顺序</td>
</tr>
<tr>
<td>SortDirection</td>
<td>获取列表中项的排序方向</td>
</tr>
<tr>
<td>SupportsSearching</td>
<td>获取一个值，它指示数据源是否支持使用Find方法进行搜索</td>
</tr>
<tr>
<td>SupportsSorting</td>
<td>获取一个值，它指示数据源是否支持排序</td>
</tr>
</tbody></table>
<p>BindingSource组件的常用方法及说明如表4所示。</p>
<p>表4 BindingSource组件的常用方法及说明</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Add</td>
<td>将现有项添加到内部列表中</td>
</tr>
<tr>
<td>AddNew</td>
<td>向基础列表添加新项</td>
</tr>
<tr>
<td>ApplySort</td>
<td>使用指定的排序说明对数据源进行排序</td>
</tr>
<tr>
<td>Clear</td>
<td>从列表中移除所有元素</td>
</tr>
<tr>
<td>CopyTo</td>
<td>将List中的内容复制到指定数组，从指定索引值处开始</td>
</tr>
<tr>
<td>Find</td>
<td>在数据源中查找指定的项</td>
</tr>
<tr>
<td>GetEnumerator</td>
<td>检索List的一个枚举数</td>
</tr>
<tr>
<td>IndexOf</td>
<td>搜索指定的对象，并返回整个列表中第一个匹配项的索引</td>
</tr>
<tr>
<td>Insert</td>
<td>将一项插入列表中指定的索引处</td>
</tr>
<tr>
<td>MoveFirst</td>
<td>移至列表中的第一项</td>
</tr>
<tr>
<td>MoveLast</td>
<td>移至列表中的最后一项</td>
</tr>
<tr>
<td>MoveNext</td>
<td>移至列表中的下一项</td>
</tr>
<tr>
<td>MovePrevious</td>
<td>移至列表中的上一项</td>
</tr>
<tr>
<td>Remove</td>
<td>从列表中移除指定的项</td>
</tr>
<tr>
<td>RemoveAt</td>
<td>移除此列表中指定索引处的项</td>
</tr>
<tr>
<td>RemoveCurrent</td>
<td>从列表中移除当前项</td>
</tr>
</tbody></table>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为ComplexControl。<br>（2）在当前项目中添加一个用户控件，将其命名为UserControl1。在用户控件中添加一个DataGridView 控件和一个BindingSource组件，并在DataGridView 控件的Columns属性中添加描述学生信息的字段。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">BindData</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//创建数据库连接对象</span></span><br><span class="line">    SqlConnection con = <span class="keyword">new</span> SqlConnection(<span class="string">"server=mrwxk\\\wangxiaoke;uid=sa;pwd=;database=db_TomeOne;"</span>);</span><br><span class="line">    con.Open();                                            <span class="comment">//打开数据库连接</span></span><br><span class="line">    SqlDataAdapter sda = <span class="keyword">new</span> SqlDataAdapter(<span class="string">"Select * From tb_Student"</span>, con);        <span class="comment">//创建桥接器对象</span></span><br><span class="line">    DataTable dt = <span class="keyword">new</span> DataTable();                                <span class="comment">//创建DataTable对象</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        sda.Fill(dt);                                        <span class="comment">//填充DataTable</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> ex;                                            <span class="comment">//抛出异常</span></span><br><span class="line">    &#125;</span><br><span class="line">    bindingSource1.DataSource = dt;                                <span class="comment">//指定BindingSource数据源</span></span><br><span class="line">    dataGridView1.DataSource = bindingSource1;                        <span class="comment">//将BindingSource指定给DataGridView</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟010：使DataGridView单元格中的内容换行！<br>通过设置DataGridView控件的DefaultCellStyle属性的WrapMode属性可以实现单元格文本换行功能，代码如下：</p>
<p>dataGridView1.DefaultCellStyle.WrapMode = DataGridViewTriState.True;</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# MySqlHelper 类</title>
    <url>/zh-CN/2016/10/18/csharp%20MySqlHelper%20%E7%B1%BB.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://www.cnblogs.com/lzrabbit/p/3287155.html" target="_blank" rel="external nofollow">懒惰的肥兔</a></li>
</div>


<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">using System;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.IO;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using MySql.Data.MySqlClient;</span><br><span class="line"></span><br><span class="line">namespace Helpers</span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">    &#x2F;&#x2F;&#x2F; MySqlHelper操作类</span><br><span class="line">    &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">    public sealed partial class MySqlHelper</span><br><span class="line">    &#123;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 批量操作每批次记录数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        public static int BatchSize &#x3D; 2000;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 超时时间</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        public static int CommandTimeOut &#x3D; 600;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;初始化MySqlHelper实例</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        public MySqlHelper(string connectionString)</span><br><span class="line">        &#123;</span><br><span class="line">            this.ConnectionString &#x3D; connectionString;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 数据库连接字符串</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        public string ConnectionString &#123; get; set; &#125;</span><br><span class="line"></span><br><span class="line">        #region 实例方法</span><br><span class="line"></span><br><span class="line">        #region ExecuteNonQuery</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public int ExecuteNonQuery(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteNonQuery(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public int ExecuteNonQuery(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteNonQuery(ConnectionString, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteNonQuery</span><br><span class="line"></span><br><span class="line">        #region ExecuteScalar</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;typeparam name&#x3D;&quot;T&quot;&gt;返回对象类型&lt;&#x2F;typeparam&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public T ExecuteScalar&lt;T&gt;(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteScalar&lt;T&gt;(ConnectionString, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public object ExecuteScalar(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteScalar(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public object ExecuteScalar(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteScalar(ConnectionString, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteScalar</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataReader</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private MySqlDataReader ExecuteDataReader(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataReader(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private MySqlDataReader ExecuteDataReader(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataReader(ConnectionString, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line">        #endregion</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataRow</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataRow ExecuteDataRow(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataRow(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataRow ExecuteDataRow(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataRow(ConnectionString, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataRow</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataTable</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataTable ExecuteDataTable(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataTable(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataTable ExecuteDataTable(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(ConnectionString, commandType, commandText, parms).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataTable</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataSet</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataSet ExecuteDataSet(string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(ConnectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public DataSet ExecuteDataSet(CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(ConnectionString, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataSet</span><br><span class="line"></span><br><span class="line">        #region 批量操作</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 使用MySqlDataAdapter批量更新数据</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;table&quot;&gt;数据表&lt;&#x2F;param&gt;</span><br><span class="line">        public void BatchUpdate(DataTable table)</span><br><span class="line">        &#123;</span><br><span class="line">            BatchUpdate(ConnectionString, table);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;大批量数据插入,返回成功插入行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;table&quot;&gt;数据表&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回成功插入行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public int BulkInsert(DataTable table)</span><br><span class="line">        &#123;</span><br><span class="line">            return BulkInsert(ConnectionString, table);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion 批量操作</span><br><span class="line"></span><br><span class="line">        #endregion 实例方法</span><br><span class="line"></span><br><span class="line">        #region 静态方法</span><br><span class="line"></span><br><span class="line">        private static void PrepareCommand(MySqlCommand command, MySqlConnection connection, MySqlTransaction transaction, CommandType commandType, string commandText, MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            if (connection.State !&#x3D; ConnectionState.Open) connection.Open();</span><br><span class="line"></span><br><span class="line">            command.Connection &#x3D; connection;</span><br><span class="line">            command.CommandTimeout &#x3D; CommandTimeOut;</span><br><span class="line">            &#x2F;&#x2F; 设置命令文本(存储过程名或SQL语句)</span><br><span class="line">            command.CommandText &#x3D; commandText;</span><br><span class="line">            &#x2F;&#x2F; 分配事务</span><br><span class="line">            if (transaction !&#x3D; null)</span><br><span class="line">            &#123;</span><br><span class="line">                command.Transaction &#x3D; transaction;</span><br><span class="line">            &#125;</span><br><span class="line">            &#x2F;&#x2F; 设置命令类型.</span><br><span class="line">            command.CommandType &#x3D; commandType;</span><br><span class="line">            if (parms !&#x3D; null &amp;&amp; parms.Length &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                &#x2F;&#x2F;预处理MySqlParameter参数数组，将为NULL的参数赋值为DBNull.Value;</span><br><span class="line">                foreach (MySqlParameter parameter in parms)</span><br><span class="line">                &#123;</span><br><span class="line">                    if ((parameter.Direction &#x3D;&#x3D; ParameterDirection.InputOutput || parameter.Direction &#x3D;&#x3D; ParameterDirection.Input) &amp;&amp; (parameter.Value &#x3D;&#x3D; null))</span><br><span class="line">                    &#123;</span><br><span class="line">                        parameter.Value &#x3D; DBNull.Value;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                command.Parameters.AddRange(parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #region ExecuteNonQuery</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public static int ExecuteNonQuery(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            using (MySqlConnection connection &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                return ExecuteNonQuery(connection, CommandType.Text, commandText, parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public static int ExecuteNonQuery(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            using (MySqlConnection connection &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                return ExecuteNonQuery(connection, commandType, commandText, parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public static int ExecuteNonQuery(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteNonQuery(connection, null, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public static int ExecuteNonQuery(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteNonQuery(transaction.Connection, transaction, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回影响的行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回影响的行数&lt;&#x2F;returns&gt;</span><br><span class="line">        private static int ExecuteNonQuery(MySqlConnection connection, MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlCommand command &#x3D; new MySqlCommand();</span><br><span class="line">            PrepareCommand(command, connection, transaction, commandType, commandText, parms);</span><br><span class="line">            int retval &#x3D; command.ExecuteNonQuery();</span><br><span class="line">            command.Parameters.Clear();</span><br><span class="line">            return retval;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteNonQuery</span><br><span class="line"></span><br><span class="line">        #region ExecuteScalar</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;typeparam name&#x3D;&quot;T&quot;&gt;返回对象类型&lt;&#x2F;typeparam&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public static T ExecuteScalar&lt;T&gt;(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            object result &#x3D; ExecuteScalar(connectionString, commandText, parms);</span><br><span class="line">            if (result !&#x3D; null)</span><br><span class="line">            &#123;</span><br><span class="line">                return (T)Convert.ChangeType(result, typeof(T)); ;</span><br><span class="line">            &#125;</span><br><span class="line">            return default(T);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public static object ExecuteScalar(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            using (MySqlConnection connection &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                return ExecuteScalar(connection, CommandType.Text, commandText, parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public static object ExecuteScalar(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            using (MySqlConnection connection &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                return ExecuteScalar(connection, commandType, commandText, parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public static object ExecuteScalar(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteScalar(connection, null, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        public static object ExecuteScalar(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteScalar(transaction.Connection, transaction, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行第一列</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一行第一列&lt;&#x2F;returns&gt;</span><br><span class="line">        private static object ExecuteScalar(MySqlConnection connection, MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlCommand command &#x3D; new MySqlCommand();</span><br><span class="line">            PrepareCommand(command, connection, transaction, commandType, commandText, parms);</span><br><span class="line">            object retval &#x3D; command.ExecuteScalar();</span><br><span class="line">            command.Parameters.Clear();</span><br><span class="line">            return retval;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteScalar</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataReader</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static MySqlDataReader ExecuteDataReader(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlConnection connection &#x3D; new MySqlConnection(connectionString);</span><br><span class="line">            return ExecuteDataReader(connection, null, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static MySqlDataReader ExecuteDataReader(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlConnection connection &#x3D; new MySqlConnection(connectionString);</span><br><span class="line">            return ExecuteDataReader(connection, null, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static MySqlDataReader ExecuteDataReader(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataReader(connection, null, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static MySqlDataReader ExecuteDataReader(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataReader(transaction.Connection, transaction, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回只读数据集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回只读数据集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static MySqlDataReader ExecuteDataReader(MySqlConnection connection, MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlCommand command &#x3D; new MySqlCommand();</span><br><span class="line">            PrepareCommand(command, connection, transaction, commandType, commandText, parms);</span><br><span class="line">            return command.ExecuteReader(CommandBehavior.CloseConnection);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataRow</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;,返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataRow ExecuteDataRow(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable dt &#x3D; ExecuteDataTable(connectionString, CommandType.Text, commandText, parms);</span><br><span class="line">            return dt.Rows.Count &gt; 0 ? dt.Rows[0] : null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;,返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataRow ExecuteDataRow(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable dt &#x3D; ExecuteDataTable(connectionString, commandType, commandText, parms);</span><br><span class="line">            return dt.Rows.Count &gt; 0 ? dt.Rows[0] : null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;,返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataRow ExecuteDataRow(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable dt &#x3D; ExecuteDataTable(connection, commandType, commandText, parms);</span><br><span class="line">            return dt.Rows.Count &gt; 0 ? dt.Rows[0] : null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一行</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;,返回结果集中的第一行&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataRow ExecuteDataRow(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            DataTable dt &#x3D; ExecuteDataTable(transaction, commandType, commandText, parms);</span><br><span class="line">            return dt.Rows.Count &gt; 0 ? dt.Rows[0] : null;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataRow</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataTable</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataTable ExecuteDataTable(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connectionString, CommandType.Text, commandText, parms).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataTable ExecuteDataTable(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connectionString, commandType, commandText, parms).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataTable ExecuteDataTable(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connection, commandType, commandText, parms).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataTable ExecuteDataTable(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(transaction, commandType, commandText, parms).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集中的第一个数据表</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;tableName&quot;&gt;数据表名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集中的第一个数据表&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataTable ExecuteEmptyDataTable(string connectionString, string tableName)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connectionString, CommandType.Text, string.Format(&quot;select * from &#123;0&#125; where 1&#x3D;-1&quot;, tableName)).Tables[0];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataTable</span><br><span class="line"></span><br><span class="line">        #region ExecuteDataSet</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataSet ExecuteDataSet(string connectionString, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connectionString, CommandType.Text, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataSet ExecuteDataSet(string connectionString, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            using (MySqlConnection connection &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                return ExecuteDataSet(connection, commandType, commandText, parms);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataSet ExecuteDataSet(MySqlConnection connection, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(connection, null, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        public static DataSet ExecuteDataSet(MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            return ExecuteDataSet(transaction.Connection, transaction, commandType, commandText, parms);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; 执行SQL语句,返回结果集</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connection&quot;&gt;数据库连接&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;transaction&quot;&gt;事务&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandType&quot;&gt;命令类型(存储过程,命令文本, 其它.)&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;commandText&quot;&gt;SQL语句或存储过程名称&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;parms&quot;&gt;查询参数&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回结果集&lt;&#x2F;returns&gt;</span><br><span class="line">        private static DataSet ExecuteDataSet(MySqlConnection connection, MySqlTransaction transaction, CommandType commandType, string commandText, params MySqlParameter[] parms)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlCommand command &#x3D; new MySqlCommand();</span><br><span class="line"></span><br><span class="line">            PrepareCommand(command, connection, transaction, commandType, commandText, parms);</span><br><span class="line">            MySqlDataAdapter adapter &#x3D; new MySqlDataAdapter(command);</span><br><span class="line"></span><br><span class="line">            DataSet ds &#x3D; new DataSet();</span><br><span class="line">            adapter.Fill(ds);</span><br><span class="line">            if (commandText.IndexOf(&quot;@&quot;) &gt; 0)</span><br><span class="line">            &#123;</span><br><span class="line">                commandText &#x3D; commandText.ToLower();</span><br><span class="line">                int index &#x3D; commandText.IndexOf(&quot;where &quot;);</span><br><span class="line">                if (index &lt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    index &#x3D; commandText.IndexOf(&quot;\\nwhere&quot;);</span><br><span class="line">                &#125;</span><br><span class="line">                if (index &gt; 0)</span><br><span class="line">                &#123;</span><br><span class="line">                    ds.ExtendedProperties.Add(&quot;SQL&quot;, commandText.Substring(0, index - 1));  &#x2F;&#x2F;将获取的语句保存在表的一个附属数组里，方便更新时生成CommandBuilder</span><br><span class="line">                &#125;</span><br><span class="line">                else</span><br><span class="line">                &#123;</span><br><span class="line">                    ds.ExtendedProperties.Add(&quot;SQL&quot;, commandText);  &#x2F;&#x2F;将获取的语句保存在表的一个附属数组里，方便更新时生成CommandBuilder</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            else</span><br><span class="line">            &#123;</span><br><span class="line">                ds.ExtendedProperties.Add(&quot;SQL&quot;, commandText);  &#x2F;&#x2F;将获取的语句保存在表的一个附属数组里，方便更新时生成CommandBuilder</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            foreach (DataTable dt in ds.Tables)</span><br><span class="line">            &#123;</span><br><span class="line">                dt.ExtendedProperties.Add(&quot;SQL&quot;, ds.ExtendedProperties[&quot;SQL&quot;]);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            command.Parameters.Clear();</span><br><span class="line">            return ds;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion ExecuteDataSet</span><br><span class="line"></span><br><span class="line">        #region 批量操作</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;使用MySqlDataAdapter批量更新数据</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;table&quot;&gt;数据表&lt;&#x2F;param&gt;</span><br><span class="line">        public static void BatchUpdate(string connectionString, DataTable table)</span><br><span class="line">        &#123;</span><br><span class="line">            MySqlConnection connection &#x3D; new MySqlConnection(connectionString);</span><br><span class="line"></span><br><span class="line">            MySqlCommand command &#x3D; connection.CreateCommand();</span><br><span class="line">            command.CommandTimeout &#x3D; CommandTimeOut;</span><br><span class="line">            command.CommandType &#x3D; CommandType.Text;</span><br><span class="line">            MySqlDataAdapter adapter &#x3D; new MySqlDataAdapter(command);</span><br><span class="line">            MySqlCommandBuilder commandBulider &#x3D; new MySqlCommandBuilder(adapter);</span><br><span class="line">            commandBulider.ConflictOption &#x3D; ConflictOption.OverwriteChanges;</span><br><span class="line"></span><br><span class="line">            MySqlTransaction transaction &#x3D; null;</span><br><span class="line">            try</span><br><span class="line">            &#123;</span><br><span class="line">                connection.Open();</span><br><span class="line">                transaction &#x3D; connection.BeginTransaction();</span><br><span class="line">                &#x2F;&#x2F;设置批量更新的每次处理条数</span><br><span class="line">                adapter.UpdateBatchSize &#x3D; BatchSize;</span><br><span class="line">                &#x2F;&#x2F;设置事物</span><br><span class="line">                adapter.SelectCommand.Transaction &#x3D; transaction;</span><br><span class="line"></span><br><span class="line">                if (table.ExtendedProperties[&quot;SQL&quot;] !&#x3D; null)</span><br><span class="line">                &#123;</span><br><span class="line">                    adapter.SelectCommand.CommandText &#x3D; table.ExtendedProperties[&quot;SQL&quot;].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                adapter.Update(table);</span><br><span class="line">                transaction.Commit();&#x2F;&#x2F;&#x2F;&#x2F;&#x2F;提交事务</span><br><span class="line">            &#125;</span><br><span class="line">            catch (MySqlException ex)</span><br><span class="line">            &#123;</span><br><span class="line">                if (transaction !&#x3D; null) transaction.Rollback();</span><br><span class="line">                throw ex;</span><br><span class="line">            &#125;</span><br><span class="line">            finally</span><br><span class="line">            &#123;</span><br><span class="line">                connection.Close();</span><br><span class="line">                connection.Dispose();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;大批量数据插入,返回成功插入行数</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;connectionString&quot;&gt;数据库连接字符串&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;table&quot;&gt;数据表&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回成功插入行数&lt;&#x2F;returns&gt;</span><br><span class="line">        public static int BulkInsert(string connectionString, DataTable table)</span><br><span class="line">        &#123;</span><br><span class="line">            if (string.IsNullOrEmpty(table.TableName)) throw new Exception(&quot;请给DataTable的TableName属性附上表名称&quot;);</span><br><span class="line">            if (table.Rows.Count &#x3D;&#x3D; 0) return 0;</span><br><span class="line">            int insertCount &#x3D; 0;</span><br><span class="line">            string tmpPath &#x3D; Path.GetTempFileName();</span><br><span class="line">            string csv &#x3D; DataTableToCsv(table);</span><br><span class="line">            File.WriteAllText(tmpPath, csv);</span><br><span class="line">            using (MySqlConnection conn &#x3D; new MySqlConnection(connectionString))</span><br><span class="line">            &#123;</span><br><span class="line">                MySqlTransaction tran &#x3D; null;</span><br><span class="line">                try</span><br><span class="line">                &#123;</span><br><span class="line">                    conn.Open();</span><br><span class="line">                    tran &#x3D; conn.BeginTransaction();</span><br><span class="line">                    MySqlBulkLoader bulk &#x3D; new MySqlBulkLoader(conn)</span><br><span class="line">                    &#123;</span><br><span class="line">                        FieldTerminator &#x3D; &quot;,&quot;,</span><br><span class="line">                        FieldQuotationCharacter &#x3D; &#39;&quot;&#39;,</span><br><span class="line">                        EscapeCharacter &#x3D; &#39;&quot;&#39;,</span><br><span class="line">                        LineTerminator &#x3D; &quot;\\r\\n&quot;,</span><br><span class="line">                        FileName &#x3D; tmpPath,</span><br><span class="line">                        NumberOfLinesToSkip &#x3D; 0,</span><br><span class="line">                        TableName &#x3D; table.TableName,</span><br><span class="line">                    &#125;;</span><br><span class="line">                    bulk.Columns.AddRange(table.Columns.Cast&lt;DataColumn&gt;().Select(colum &#x3D;&gt; colum.ColumnName).ToList());</span><br><span class="line">                    insertCount &#x3D; bulk.Load();</span><br><span class="line">                    tran.Commit();</span><br><span class="line">                &#125;</span><br><span class="line">                catch (MySqlException ex)</span><br><span class="line">                &#123;</span><br><span class="line">                    if (tran !&#x3D; null) tran.Rollback();</span><br><span class="line">                    throw ex;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            File.Delete(tmpPath);</span><br><span class="line">            return insertCount;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F;将DataTable转换为标准的CSV</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;&#x2F;summary&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;param name&#x3D;&quot;table&quot;&gt;数据表&lt;&#x2F;param&gt;</span><br><span class="line">        &#x2F;&#x2F;&#x2F; &lt;returns&gt;返回标准的CSV&lt;&#x2F;returns&gt;</span><br><span class="line">        private static string DataTableToCsv(DataTable table)</span><br><span class="line">        &#123;</span><br><span class="line">            &#x2F;&#x2F;以半角逗号（即,）作分隔符，列为空也要表达其存在。</span><br><span class="line">            &#x2F;&#x2F;列内容如存在半角逗号（即,）则用半角引号（即&quot;&quot;）将该字段值包含起来。</span><br><span class="line">            &#x2F;&#x2F;列内容如存在半角引号（即&quot;）则应替换成半角双引号（&quot;&quot;）转义，并用半角引号（即&quot;&quot;）将该字段值包含起来。</span><br><span class="line">            StringBuilder sb &#x3D; new StringBuilder();</span><br><span class="line">            DataColumn colum;</span><br><span class="line">            foreach (DataRow row in table.Rows)</span><br><span class="line">            &#123;</span><br><span class="line">                for (int i &#x3D; 0; i &lt; table.Columns.Count; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    colum &#x3D; table.Columns[i];</span><br><span class="line">                    if (i !&#x3D; 0) sb.Append(&quot;,&quot;);</span><br><span class="line">                    if (colum.DataType &#x3D;&#x3D; typeof(string) &amp;&amp; row[colum].ToString().Contains(&quot;,&quot;))</span><br><span class="line">                    &#123;</span><br><span class="line">                        sb.Append(&quot;\\&quot;&quot; + row[colum].ToString().Replace(&quot;\\&quot;&quot;, &quot;\\&quot;\\&quot;&quot;) + &quot;\\&quot;&quot;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    else sb.Append(row[colum].ToString());</span><br><span class="line">                &#125;</span><br><span class="line">                sb.AppendLine();</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            return sb.ToString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #endregion 批量操作</span><br><span class="line"></span><br><span class="line">        #endregion 静态方法</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>MySqlHelper.cs</p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# VB .NET 解析 JSON</title>
    <url>/zh-CN/2016/10/10/csharp%20VB.NET%20%E8%A7%A3%E6%9E%90%20JSON.html</url>
    <content><![CDATA[<p>如何在 .NET 程序中解析 JSON 使用 Newtonsoft.Json 第三方类来操纵 Newtonsoft.Json 是.NET 下开源的json格式序列号和反序列化的类库 官方网站: <a href="http://json.codeplex.com/" target="_blank" rel="noopener">http://json.codeplex.com/</a></p>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="keyword">Imports</span> System.<span class="keyword">Text</span>.RegularExpressions</span><br><span class="line"><span class="keyword">Imports</span> Newtonsoft.Json</span><br><span class="line"><span class="keyword">Imports</span> Newtonsoft.Json.Linq</span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> json序列化</span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Class</span> json</span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> 解析JSON数据</span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="empData"&gt;</span>源数据<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="key"&gt;</span>指定值下的数据，可省略。<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;returns&gt;</span>0 非 json 数据<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> JsonDecode(<span class="keyword">ByVal</span> empData, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> key1 = <span class="literal">Nothing</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> key2 = <span class="literal">Nothing</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> arry_i = <span class="literal">Nothing</span>) <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">        <span class="keyword">Try</span></span><br><span class="line">            <span class="keyword">If</span> IsJson(empData) = <span class="literal">False</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">If</span> arry_i <span class="keyword">IsNot</span> <span class="literal">Nothing</span> <span class="keyword">Then</span></span><br><span class="line">                <span class="comment">'http://blog.csdn.net/goodelephant/article/details/24769421</span></span><br><span class="line">                <span class="keyword">Return</span> <span class="built_in">CType</span>(JsonConvert.DeserializeObject(empData), JObject)(key1)(arry_i)(key2).ToString()   <span class="comment">'这个是解析数组  下标。。</span></span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="keyword">If</span> key1 = <span class="literal">Nothing</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="built_in">CType</span>(JsonConvert.DeserializeObject(empData), JObject).ToString</span><br><span class="line"></span><br><span class="line">            <span class="keyword">If</span> key2 = <span class="literal">Nothing</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="built_in">CType</span>(JsonConvert.DeserializeObject(empData), JObject)(key1).ToString()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">Return</span> <span class="built_in">CType</span>(JsonConvert.DeserializeObject(empData), JObject)(key1)(key2).ToString()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">Catch</span> ex <span class="keyword">As</span> Exception</span><br><span class="line">            <span class="keyword">Return</span> ex.Message</span><br><span class="line">        <span class="keyword">End</span> <span class="keyword">Try</span></span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> 序列化 json</span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="str"&gt;</span>对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;remarks&gt;</span><span class="doctag">&lt;/remarks&gt;</span></span></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> JsonEncode(<span class="keyword">ByVal</span> str <span class="keyword">As</span> <span class="built_in">Object</span>) <span class="keyword">As</span> <span class="built_in">String</span></span><br><span class="line">    <span class="keyword">Try</span></span><br><span class="line">        <span class="keyword">Return</span> JsonConvert.SerializeObject(str)</span><br><span class="line">    <span class="keyword">Catch</span> ex <span class="keyword">As</span> Exception</span><br><span class="line">        <span class="keyword">Return</span> ex.Message</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Try</span></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>
<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> JsonSerializeMore_HttpJson(<span class="keyword">ByVal</span> code <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">ByVal</span> msg <span class="keyword">As</span> <span class="built_in">String</span>, <span class="keyword">Optional</span> <span class="keyword">ByVal</span> data <span class="keyword">As</span> <span class="built_in">Object</span> = <span class="literal">Nothing</span>)</span><br><span class="line">    <span class="comment">'http://bbs.csdn.net/topics/390910345</span></span><br><span class="line">    <span class="comment">'http://www.cnblogs.com/08shiyan/p/3464028.html</span></span><br><span class="line">    <span class="comment">'  Dim cusList As New List(Of httpjson)()</span></span><br><span class="line">    <span class="comment">'Dim cusList As New List(Of HttpJson)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">'cusList.Add(New HttpJson("6902083881405", "娃哈哈饮用纯净水", ""))</span></span><br><span class="line">    <span class="comment">'cusList.Add(New HttpJson("6902083893736", "娃哈哈营养快线原味"))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">'Dim dic As Dictionary(Of String, HttpJson) = New Dictionary(Of String, HttpJson)</span></span><br><span class="line">    <span class="comment">'dic.Add("1", New HttpJson("1", "2", 1.1))</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">''dic.Add("2222", New HttpJson("1", "2", 1.1))</span></span><br><span class="line">    <span class="comment">'' dic.Add("3333", New HttpJson("1", "2", 1.1))</span></span><br><span class="line">    <span class="comment">'Dim jsonStr As String = Newtonsoft.Json.JsonConvert.SerializeObject(dic)</span></span><br><span class="line">    <span class="comment">'MsgBox(jsonStr)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">'MsgBox(JsonConvert.SerializeObject(cusList))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> JsonEncode(<span class="keyword">New</span> HttpJson(code, data))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Function</span></span><br></pre></td></tr></table></figure>

<figure class="highlight vb"><table><tr><td class="code"><pre><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> json转换datatable</span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="strJson"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;returns&gt;</span>返回 0  非json 数据<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> JsonToDataTable(<span class="keyword">ByVal</span> strJson <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> DataTable</span><br><span class="line"></span><br><span class="line">        <span class="keyword">Dim</span> rg <span class="keyword">As</span> <span class="keyword">New</span> Regex(<span class="string">"(?&lt;=&#123;)[^:]+(?=:\\[)"</span>, RegexOptions.IgnoreCase)</span><br><span class="line">        <span class="keyword">Dim</span> strName <span class="keyword">As</span> <span class="built_in">String</span> = rg.Match(strJson).Value</span><br><span class="line">        <span class="keyword">Dim</span> dt <span class="keyword">As</span> DataTable = <span class="literal">Nothing</span></span><br><span class="line">        strJson = strJson.Substring((strJson.IndexOf(<span class="string">"["</span>) + <span class="number">1</span>))</span><br><span class="line">        strJson = strJson.Substring(<span class="number">0</span>, strJson.IndexOf(<span class="string">"]"</span>))</span><br><span class="line">        <span class="keyword">Dim</span> matchs <span class="keyword">As</span> MatchCollection = <span class="keyword">New</span> Regex(<span class="string">"(?&lt;=&#123;)[^&#125;]+(?=&#125;)"</span>).Matches(strJson)</span><br><span class="line">        <span class="keyword">Dim</span> i <span class="keyword">As</span> <span class="built_in">Integer</span></span><br><span class="line">        <span class="keyword">For</span> i = <span class="number">0</span> <span class="keyword">To</span> matchs.Count - <span class="number">1</span></span><br><span class="line">            <span class="keyword">Dim</span> strRow <span class="keyword">As</span> <span class="built_in">String</span> = matchs(i).Value</span><br><span class="line">            <span class="keyword">Dim</span> strRows <span class="keyword">As</span> <span class="built_in">String</span>() = Split(strRow, <span class="string">","</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">If</span> (dt <span class="keyword">Is</span> <span class="literal">Nothing</span>) <span class="keyword">Then</span></span><br><span class="line">                dt = <span class="keyword">New</span> DataTable</span><br><span class="line">                dt.TableName = strName</span><br><span class="line">                <span class="keyword">For</span> <span class="keyword">Each</span> str <span class="keyword">As</span> <span class="built_in">String</span> <span class="keyword">In</span> strRows</span><br><span class="line">                    <span class="keyword">Dim</span> dc <span class="keyword">As</span> <span class="keyword">New</span> DataColumn</span><br><span class="line">                    <span class="keyword">Dim</span> strCell <span class="keyword">As</span> <span class="built_in">String</span>() = Split(str, <span class="string">":"</span>)</span><br><span class="line">                    dc.ColumnName = strCell(<span class="number">0</span>).Replace(<span class="string">""""</span>, <span class="string">""</span>)</span><br><span class="line">                    dc.ColumnName = Trim(dc.ColumnName.Replace(Chr(<span class="number">13</span>), <span class="string">""</span>))</span><br><span class="line">                    dc.ColumnName = Trim(dc.ColumnName.Replace(Chr(<span class="number">10</span>), <span class="string">""</span>))</span><br><span class="line">                    dt.Columns.Add(dc)</span><br><span class="line">                <span class="keyword">Next</span></span><br><span class="line">                dt.AcceptChanges()</span><br><span class="line">            <span class="keyword">End</span> <span class="keyword">If</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">Dim</span> dr <span class="keyword">As</span> DataRow = dt.NewRow()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">For</span> j <span class="keyword">As</span> <span class="built_in">Integer</span> = <span class="number">0</span> <span class="keyword">To</span> strRows.Length - <span class="number">1</span></span><br><span class="line">                dr(j) = Trim(strRows(j).Split(<span class="string">":"</span>)(<span class="number">1</span>).Replace(<span class="string">""""</span>, <span class="string">""</span>))</span><br><span class="line">            <span class="keyword">Next</span> j</span><br><span class="line">            dt.Rows.Add(dr)</span><br><span class="line">            dt.AcceptChanges()</span><br><span class="line">        <span class="keyword">Next</span> i</span><br><span class="line">        <span class="keyword">Return</span> dt</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> 验证是否 JSON 数据</span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;param name="input"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">'''</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="keyword">Public</span> <span class="keyword">Shared</span> <span class="keyword">Function</span> IsJson(<span class="keyword">ByVal</span> input <span class="keyword">As</span> <span class="built_in">String</span>) <span class="keyword">As</span> <span class="built_in">Boolean</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">If</span> input = <span class="string">""</span> <span class="keyword">Then</span> <span class="keyword">Return</span> <span class="literal">False</span> <span class="comment">'为空字符时会出现异常，这里直接返回，不进行检测</span></span><br><span class="line">        input = input.Trim</span><br><span class="line">        <span class="keyword">Return</span> ((input.StartsWith(<span class="string">"&#123;"</span>) <span class="keyword">AndAlso</span> input.EndsWith(<span class="string">"&#125;"</span>)) <span class="keyword">OrElse</span> (input.StartsWith(<span class="string">"["</span>) <span class="keyword">AndAlso</span> input.EndsWith(<span class="string">"]"</span>)))</span><br><span class="line">    <span class="keyword">End</span> <span class="keyword">Function</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">End</span> <span class="keyword">Class</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">using System;</span><br><span class="line">using System.Collections.Generic;</span><br><span class="line">using System.ComponentModel;</span><br><span class="line">using System.Data;</span><br><span class="line">using System.Drawing;</span><br><span class="line">using System.Linq;</span><br><span class="line">using System.Text;</span><br><span class="line">using System.Windows.Forms;</span><br><span class="line"></span><br><span class="line">namespace test</span><br><span class="line">&#123;</span><br><span class="line">    public partial class Form1 : Form</span><br><span class="line">    &#123;</span><br><span class="line">        public Form1()</span><br><span class="line">        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        private void button1_Click(object sender, EventArgs e)</span><br><span class="line">        &#123;</span><br><span class="line">            string jsonstr &#x3D; &quot;json 待解析的字符&quot;;</span><br><span class="line"></span><br><span class="line">            MessageBox.Show(</span><br><span class="line"></span><br><span class="line">                ((Newtonsoft.Json.Linq.JObject)Newtonsoft.Json.JsonConvert.DeserializeObject(jsonstr))[&quot;data&quot;][&quot;name&quot;].ToString()</span><br><span class="line"></span><br><span class="line">                );</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>Visual Studio</tag>
        <tag>VB.NET</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# MySql “Parameter &#39;@??&#39; must be defined”</title>
    <url>/zh-CN/2016/10/18/csharp%20mysql%20parameter%20must%20be%20defined.html</url>
    <content><![CDATA[<p>C# 一段程序如下，执行出错，错误信息是</p>
<figure class="highlight plain"><figcaption><span>'@rowNum' must be defined”~~~</span></figcaption><table><tr><td class="code"><pre><span class="line">但是直接在 mySql workbatch 中运行是正确的！！ 原因何在？</span><br><span class="line">搜索一下， 看到老外的网站说 连接串要加上 ： ~~~“Allow User Variables&#x3D;True”,</span><br><span class="line">再试验一次，发现可以了！！</span><br><span class="line">string mySqlConnString &#x3D; @&quot;Database&#x3D;testDB ; User Id &#x3D; root; Password &#x3D;password;Data source&#x3D;10.10.10.107;&quot;;</span><br><span class="line">MySql.Data.MySqlClient.MySqlConnection mySqlConn &#x3D; new MySql.Data.MySqlClient.MySqlConnection();</span><br><span class="line">mySqlConn.ConnectionString &#x3D; mySqlConnString;</span><br><span class="line">mySqlConn.Open();</span><br><span class="line">MySql.Data.MySqlClient.MySqlCommand mySqlCmd &#x3D; new MySql.Data.MySqlClient.MySqlCommand(); &#x2F;&#x2F;declare @rowNumber as integer; mySqlCmd.Connection &#x3D; mySqlConn;</span><br><span class="line">mySqlCmd.CommandText &#x3D; &quot;set @rowNum:&#x3D;0;</span><br><span class="line">create temporary table T_729540255 as ( Select @rowNum:&#x3D;ifnull(@rowNum,0)+1 as Temp_id, A.employee_id,A.employee_no From employee A)&quot;;</span><br><span class="line">mySqlCmd.ExecuteNonQuery();</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 不出现在任务栏上的程序</title>
    <url>/zh-CN/2019/04/14/csharp%20%E4%B8%8D%E5%87%BA%E7%8E%B0%E5%9C%A8%E4%BB%BB%E5%8A%A1%E6%A0%8F%E4%B8%8A%E7%9A%84%E7%A8%8B%E5%BA%8F.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="不出现在任务栏上的程序"><a href="#不出现在任务栏上的程序" class="headerlink" title="不出现在任务栏上的程序"></a>不出现在任务栏上的程序</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>一般的Windows应用程序启动后，系统会在任务栏中添加一个工具按钮，表示程序正在运行，该按钮中的文字就是程序或窗口的标题名称。但是一些黑客程序和一些系统程序在启动后，任务栏中不会出现这些程序的按钮，这样的程序通常在后台运行，有时用户根本不会察觉，那么这是怎么实现的呢？本实例将介绍如何控制程序是否显示在任务栏中。运行结果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-14-14112010.png" alt=""> 图1 不出现在任务栏上的程序</p>
<h3 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h3><p>本实例通过使用Form类的ShowInTaskbar属性来控制程序是否显示在任务栏中。ShowInTaskbar属性用来获取或设置一个值，该值指示是否在Windows任务栏中显示窗体。其语法格式如下：<br>public bool ShowInTaskbar { get; set; }<br>属性值：如果为True，则运行时在Windows任务栏中显示窗体，否则为False。默认为True。</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>（1）新建一个Windows应用程序，将其命名为“不出现在任务栏上的程序”，默认主窗体为Form1。<br>（2）在Form1窗体中添加两个RadioButton控件，用来控制程序图标是否出现在任务栏中。<br>（3）主要程序代码。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (radioButton1.Checked)							<span class="comment">//如果选中radioButton1</span></span><br><span class="line">        <span class="keyword">this</span>.ShowInTaskbar = <span class="literal">true</span>;						<span class="comment">//将ShowInTaskbar属性设为true，在任务栏显示</span></span><br><span class="line">    <span class="keyword">else</span>												<span class="comment">//否则</span></span><br><span class="line">        <span class="keyword">this</span>.ShowInTaskbar = <span class="literal">false</span>;						<span class="comment">//将ShowInTaskbar属性设为false，不在任务栏显示</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 利用图片对文件进行加密与解密</title>
    <url>/zh-CN/2019/04/16/csharp%20%E5%88%A9%E7%94%A8%E5%9B%BE%E7%89%87%E5%AF%B9%E6%96%87%E4%BB%B6%E8%BF%9B%E8%A1%8C%E5%8A%A0%E5%AF%86%E4%B8%8E%E8%A7%A3%E5%AF%86.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="利用图片对文件进行加密与解密"><a href="#利用图片对文件进行加密与解密" class="headerlink" title="利用图片对文件进行加密与解密"></a>利用图片对文件进行加密与解密</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>本实例在加密时，使用指定的图片生成加密密钥，然后对文本文件进行加密；在解密时，使用加密时的图片生成解密密钥，然后对加密的文本文件进行解密。在本实例的窗体中，首先打开一个图片，用来生成加密或解密的密钥，然后选择要加密或解密的文本文件，最后点击“加密”或“解密”按钮，实现对文本文件的加密或解密。实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-16-02535056.png" alt=""> 图1 利用图片对文件进行加密与解密</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>实现本实例，主要用到了RC2CryptoServiceProvider类、BinaryWriter类的Write方法、File类的Delete方法和Copy方法分别进行介绍。<br>（1）RC2CryptoServiceProvider类 该类定义访问RC2算法的加密服务提供程序（CSP）实现的包装对象，无法继承此类。<br>（2）BinaryWriter类 该类以二进制形式将基元类型写入流，并支持用特定的编码写入字符串。它的构造器语法格式如下： public BinaryWriter (Streamoutput) 参数说明 output：表示输出流。<br>（3）BinaryWriter类的Write方法 该方法将一个无符号字节写入当前流，并将流的位置提升一个字节。其语法格式如下： public virtual void Write (byte value) 参数说明 value：表示要写入的无符号字节。<br>（4）File类 该类提供用于创建、复制、删除、移动和打开文件的静态方法，并协助创建FileStream对象，该类是个静态类。<br>（5）File类的Delete方法 该方法删除指定的文件。如果指定的文件不存在，则引发异常。其语法格式如下： public static void Delete (string path) 参数说明 path：表示要删除的文件的名称。<br>（6）File类的Copy方法 该方法将现有文件复制到新文件，不允许改写同名的文件。其语法格式如下：<br>public static void Copy (string sourceFileName,string destFileName) 参数说明<br>sourceFileName：要复制的文件。<br>destFileName：目标文件的名称，不能是一个目录或现有文件。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为EncryptTextFileTwo。<br>（2）在Form1窗体中，主要添加一个TextBox控件，用来显示加密或解密文件的路径；添加一个OpenFileDialog控件，用来选择要加密或解密的文件和打开密钥的图片；添加4个Button控件，用来执行加密、解密、打开文件和打开图片操作；添加一个PictureBox控件，用于显示密钥图片。<br>（3）程序主要代码如下： 单击“加密”按钮实现利用图片对文本文件进行加密，“加密”按钮的Click事件代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button3_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (pictureBox1.ImageLocation==<span class="literal">null</span>)							<span class="comment">//判断是否选择了图片</span></span><br><span class="line">        &#123; MessageBox.Show(<span class="string">"请选择一幅图片用于加密"</span>); <span class="keyword">return</span>; &#125;			<span class="comment">//如果没有选择则弹出提示</span></span><br><span class="line">        <span class="keyword">if</span> (textBox1.Text == <span class="string">""</span>)									<span class="comment">//若未选择需要加密的文件</span></span><br><span class="line">        &#123; MessageBox.Show(<span class="string">"请选择加密文件路径"</span>); <span class="keyword">return</span>; &#125;				<span class="comment">//如果没有选择则弹出提示</span></span><br><span class="line">        <span class="comment">//图片流</span></span><br><span class="line">        FileStream fsPic = <span class="keyword">new</span> FileStream(pictureBox1.ImageLocation, FileMode.Open, FileAccess.Read);</span><br><span class="line">        <span class="comment">//加密文件流</span></span><br><span class="line">        FileStream fsText = <span class="keyword">new</span> FileStream(textBox1.Text, FileMode.Open, FileAccess.Read);</span><br><span class="line">        <span class="comment">//初始化对称算法的密钥和向量</span></span><br><span class="line">        <span class="keyword">byte</span>[] bykey = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];								<span class="comment">//定义存储密钥的字节数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] byIv = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>];								<span class="comment">//定义存储向量的字节数组</span></span><br><span class="line">        fsPic.Read(bykey, <span class="number">0</span>, <span class="number">16</span>);								<span class="comment">//把图片流写入密钥缓冲区</span></span><br><span class="line">        fsPic.Read(byIv, <span class="number">0</span>, <span class="number">8</span>);									<span class="comment">//把图片流写入向量缓冲区</span></span><br><span class="line">        <span class="comment">//临时加密文件</span></span><br><span class="line">        <span class="keyword">string</span> strPath = textBox1.Text;								<span class="comment">//加密文件的路径</span></span><br><span class="line">        <span class="keyword">int</span> intLent = strPath.LastIndexOf(<span class="string">"\\\") + 1;</span></span><br><span class="line"><span class="string">        int intLong = strPath.Length;</span></span><br><span class="line"><span class="string">        string strName = strPath.Substring(intLent, intLong - intLent);			//要加密的文件名称</span></span><br><span class="line"><span class="string">        string strLinPath = "</span>C:\\\<span class="string">" + strName;							//临时加密文件路径</span></span><br><span class="line"><span class="string">        FileStream fsOut = File.Open(strLinPath, FileMode.Create, FileAccess.Write);</span></span><br><span class="line"><span class="string">        //开始加密，首先创建RC2CryptoServiceProvider对象</span></span><br><span class="line"><span class="string">        RC2CryptoServiceProvider desc = new RC2CryptoServiceProvider();</span></span><br><span class="line"><span class="string">        BinaryReader br = new BinaryReader(fsText);					//创建BinaryReader对象</span></span><br><span class="line"><span class="string">        //创建CryptoStream对象，用于写入临时加密文件</span></span><br><span class="line"><span class="string">        CryptoStream cs = new CryptoStream(fsOut, desc.CreateEncryptor(bykey, byIv), CryptoStreamMode.Write); </span></span><br><span class="line"><span class="string">        cs.Write(br.ReadBytes((int)fsText.Length), 0, (int)fsText.Length);			//写入加密流</span></span><br><span class="line"><span class="string">        cs.FlushFinalBlock();</span></span><br><span class="line"><span class="string">        cs.Flush();</span></span><br><span class="line"><span class="string">        cs.Close();</span></span><br><span class="line"><span class="string">        fsPic.Close();</span></span><br><span class="line"><span class="string">        fsText.Close();</span></span><br><span class="line"><span class="string">        fsOut.Close();</span></span><br><span class="line"><span class="string">        File.Delete(textBox1.Text.TrimEnd());							//删除原文件</span></span><br><span class="line"><span class="string">        File.Copy(strLinPath, textBox1.Text);							//复制加密文件</span></span><br><span class="line"><span class="string">        File.Delete(strLinPath);									//删除临时文件</span></span><br><span class="line"><span class="string">        MessageBox.Show("</span>加密成功<span class="string">");</span></span><br><span class="line"><span class="string">        pictureBox1.ImageLocation = null;</span></span><br><span class="line"><span class="string">        textBox1.Text = "</span><span class="string">";</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch (Exception ee)</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        MessageBox.Show(ee.Message);</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>单击“解密”按钮实现利用图片对加密的文本文件进行解密，“解密”按钮的Click事件代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button4_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//图片流</span></span><br><span class="line">        FileStream fsPic = <span class="keyword">new</span> FileStream(pictureBox1.ImageLocation, FileMode.Open, FileAccess.Read);</span><br><span class="line">        <span class="comment">//解密文件流</span></span><br><span class="line">        FileStream fsOut = File.Open(textBox1.Text, FileMode.Open, FileAccess.Read);</span><br><span class="line">        <span class="comment">//初始化对称算法的密钥和向量</span></span><br><span class="line">        <span class="keyword">byte</span>[] bykey = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">16</span>];								<span class="comment">//定义存储密钥的字节数组</span></span><br><span class="line">        <span class="keyword">byte</span>[] byIv = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">8</span>];								<span class="comment">//定义存储向量的字节数组</span></span><br><span class="line">        fsPic.Read(bykey, <span class="number">0</span>, <span class="number">16</span>);								<span class="comment">//把图片流写入密钥缓冲区</span></span><br><span class="line">        fsPic.Read(byIv, <span class="number">0</span>, <span class="number">8</span>);									<span class="comment">//把图片流写入向量缓冲区</span></span><br><span class="line">        <span class="comment">//创建临时解密文件</span></span><br><span class="line">        <span class="keyword">string</span> strPath = textBox1.Text;								<span class="comment">//加密文件的路径</span></span><br><span class="line">        <span class="keyword">int</span> intLent = strPath.LastIndexOf(<span class="string">"\\\") + 1;						//获取不含文件名的路径长度</span></span><br><span class="line"><span class="string">        int intLong = strPath.Length;								//获取含文件名的路径长度</span></span><br><span class="line"><span class="string">        //获取要解密文件的名称，即加密文件的名称</span></span><br><span class="line"><span class="string">        string strName = strPath.Substring(intLent, intLong - intLent);</span></span><br><span class="line"><span class="string">        string strLinPath = "</span>C:\\\<span class="string">" + strName;							//临时解密文件路径</span></span><br><span class="line"><span class="string">        FileStream fs = new FileStream(strLinPath, FileMode.Create, FileAccess.Write);</span></span><br><span class="line"><span class="string">        //开始解密，首先创建RC2CryptoServiceProvider对象</span></span><br><span class="line"><span class="string">        RC2CryptoServiceProvider desc = new RC2CryptoServiceProvider();</span></span><br><span class="line"><span class="string">        //创建CryptoStream对象，用于读取加密文件</span></span><br><span class="line"><span class="string">        CryptoStream csDecrypt = new CryptoStream(fsOut, desc.CreateDecryptor(bykey, byIv), CryptoStreamMode.Read);</span></span><br><span class="line"><span class="string">        BinaryReader sr = new BinaryReader(csDecrypt);					//创建BinaryReader对象</span></span><br><span class="line"><span class="string">        BinaryWriter sw = new BinaryWriter(fs);						//创建BinaryWriter对象</span></span><br><span class="line"><span class="string">        sw.Write(sr.ReadBytes(Convert.ToInt32(fsOut.Length)));				//写入解密流</span></span><br><span class="line"><span class="string">        sw.Flush();</span></span><br><span class="line"><span class="string">        sw.Close();</span></span><br><span class="line"><span class="string">        sr.Close();</span></span><br><span class="line"><span class="string">        fs.Close();</span></span><br><span class="line"><span class="string">        fsOut.Close();</span></span><br><span class="line"><span class="string">        fsPic.Close();</span></span><br><span class="line"><span class="string">        csDecrypt.Flush();</span></span><br><span class="line"><span class="string">        File.Delete(textBox1.Text.TrimEnd());							//删除原文件</span></span><br><span class="line"><span class="string">        File.Copy(strLinPath, textBox1.Text);							//复制加密文件</span></span><br><span class="line"><span class="string">        File.Delete(strLinPath);									//删除临时文件</span></span><br><span class="line"><span class="string">        MessageBox.Show("</span>解密成功<span class="string">");							//弹出提示信息</span></span><br><span class="line"><span class="string">        pictureBox1.ImageLocation = null;							//清空图片</span></span><br><span class="line"><span class="string">        textBox1.Text = "</span><span class="string">";									//清空文本框</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    catch (Exception ee)										//如果出现异常</span></span><br><span class="line"><span class="string">    &#123;</span></span><br><span class="line"><span class="string">        MessageBox.Show(ee.Message);							//输出异常</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟002：使用CryptoStream类的FlushFinalBlock方法。<br>在调用CryptoStream类的Write方法写入加密或解密流之后，需要调用该类的FlushFinalBlock方法，该方法实现用缓冲区的当前状态更新基础数据源或储存库，随后清除缓冲区。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 使用正则表达式验证URL</title>
    <url>/zh-CN/2019/04/14/csharp%20%E4%BD%BF%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E9%AA%8C%E8%AF%81URL.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="使用正则表达式验证URL"><a href="#使用正则表达式验证URL" class="headerlink" title="使用正则表达式验证URL"></a>使用正则表达式验证URL</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>在浏览网页时，可以在浏览器的地址栏中输入网址信息并按下<Enter>键跳转到指定网页，如果用户输入的网址不正确，则无法显示网页信息。实例中使用了正则表达式判断用户输入的网址信息是否正确。实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-14-13582411.png" alt=""> 图1 使用正则表达式验证URL  </p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例重点在于向读者介绍怎样使用正则表达式验证URL，下面对其进行详细讲解。 实例中主要用到了Regex类的IsMatch方法，此方法的使用已经在实例“使用正则表达式验证电话号码”中进行了详细讲解。下面对实例中使用的正则表达式进行详细讲解。 从图2中可以看到，详细的描述了”http(s)?://([\w-]+\.)+[\w-]+(/[\w- ./?%&amp;=]<em>)?”正则表达式，其中http(s)?表示匹配字符串“http”或“https”；[\w-]+\.表示匹配一个或多个以单词字符和连接符号“-”组成的字符串开头的，以字符“.”结尾的字符串；(/[\w- ./?%&amp;=]</em>)?表示匹配出现零次或一次由单词字符“-”、“/”、“.”、“?”、“%”、“&amp;”、“=”组成的长度至少为1的字符串。 图2 正则表达式</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为ValidateURL。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，向窗体中添加一个TextBox控件，用于输入网址；添加一个Button按钮，用于验证网址格式是否正确。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">bool</span> <span class="title">IsUrl</span>(<span class="params"><span class="keyword">string</span> str_url</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> System.Text.RegularExpressions.Regex.IsMatch(str_url,                                                  <span class="comment">//使用正则表达式判断是否匹配</span></span><br><span class="line"></span><br><span class="line"><span class="string">@"http(s)?://([\\w-]+\\.)+[\\w-]+(/[\\w- ./?%&amp;=]*)?"</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title=" 秘笈心法"></a><img data-src="https://cdn.fesugar.com/2019/04/2019-04-14-13584214.png" alt=""> 秘笈心法</h3><p>心法领悟058：使用正则表达式验证用户名格式是否正确！<br>程序运行过程中，经常需要用户注册信息，以得到相应的操作权限，如果在用户注册的过程中，用户添写的用户名格式不正确，有可能会带来不必要的麻烦，使用正则表达式验证用户名格式将是一种不错的选择！</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 利用多饼型图分析企业人力资源情况</title>
    <url>/zh-CN/2019/04/16/csharp%20%E5%88%A9%E7%94%A8%E5%A4%9A%E9%A5%BC%E5%9E%8B%E5%9B%BE%E5%88%86%E6%9E%90%E4%BC%81%E4%B8%9A%E4%BA%BA%E5%8A%9B%E8%B5%84%E6%BA%90%E6%83%85%E5%86%B5.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="利用多饼型图分析企业人力资源情况"><a href="#利用多饼型图分析企业人力资源情况" class="headerlink" title="利用多饼型图分析企业人力资源情况"></a>利用多饼型图分析企业人力资源情况</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>开发企业人力资源管理系统时，经常使用饼型图分析企业中各个阶层的人员情况，为了让用户更清晰地认识，本实例采用了多饼图表示法实现分析功能。实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-16-02594662.png" alt=""> 图1 利用多饼型图分析企业人力资源情况  </p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例在实现时，首先通过SQL语句分别统计企业总人数和各个阶层人数，然后通过统计的比例绘制饼型图，实现过程中主要用到Graphics类的DrawLine方法、DrawString方法和FillPie方法。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为MultiCAnalyseHR。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加一个Panel控件，用来显示绘制的多个饼型图。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowPic</span>(<span class="params"><span class="keyword">int</span> Sum</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> (cmd = <span class="keyword">new</span> SqlCommand(<span class="string">"select t_Point,sum(t_Num) from tb_manpower group by t_Point order by sum(t_Num) desc"</span>, con))</span><br><span class="line">    &#123;</span><br><span class="line">        Bitmap bmp = <span class="keyword">new</span> Bitmap(<span class="keyword">this</span>.panel1.Width, <span class="keyword">this</span>.panel1.Height);					<span class="comment">//创建画布</span></span><br><span class="line">        Graphics g = Graphics.FromImage(bmp);								<span class="comment">//创建Graphics对象</span></span><br><span class="line">        cmd.Connection.Open();</span><br><span class="line">        SqlDataReader dr = cmd.ExecuteReader();								<span class="comment">//创建SqlDataReader对象</span></span><br><span class="line">        <span class="keyword">while</span> (dr.Read())												<span class="comment">//开始读取记录</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">float</span> f = Convert.ToSingle(dr[<span class="number">1</span>]) / Sum;</span><br><span class="line">            <span class="keyword">string</span> str = dr[<span class="number">0</span>].ToString();</span><br><span class="line">            drowPic(g, f, str);											<span class="comment">//调用drowPic方法绘制饼图</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//绘制线条</span></span><br><span class="line">        g.DrawLine(<span class="keyword">new</span> Pen(Color.Black), <span class="number">0</span>, <span class="keyword">this</span>.panel1.Height / <span class="number">2</span>, <span class="keyword">this</span>.panel1.Width, <span class="keyword">this</span>.panel1.Height / <span class="number">2</span>);</span><br><span class="line">        g.DrawLine(<span class="keyword">new</span> Pen(Color.Black), <span class="keyword">this</span>.panel1.Width / <span class="number">2</span>, <span class="number">0</span>, <span class="keyword">this</span>.panel1.Width / <span class="number">2</span>, <span class="keyword">this</span>.panel1.Height);</span><br><span class="line">        <span class="keyword">this</span>.panel1.BackgroundImage = bmp;									<span class="comment">//显示绘制的图形</span></span><br><span class="line">        dr.Close();													<span class="comment">//关闭SqlDataReader对象</span></span><br><span class="line">        con.Close();												<span class="comment">//关闭数据库连接</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drowPic</span>(<span class="params">Graphics g, <span class="keyword">float</span> f, <span class="keyword">string</span> str</span>) 								<span class="comment">//根据要求绘制饼图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ConutNum == <span class="number">0</span>)												<span class="comment">//如果ConutNum为0时执行</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//绘制扇形</span></span><br><span class="line">        g.FillPie(<span class="keyword">new</span> SolidBrush(Color.Black), <span class="number">0</span>, <span class="number">0</span>, (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span>, <span class="number">0</span>, <span class="number">360</span> * f); </span><br><span class="line"><span class="comment">//绘制文本</span></span><br><span class="line">        g.DrawString(str, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Black), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> - <span class="number">70</span>, <span class="number">10</span>);</span><br><span class="line">        g.DrawString(Convert.ToString(f * <span class="number">100</span>).Substring(<span class="number">0</span>, <span class="number">5</span>) + <span class="string">"%"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Black), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> - <span class="number">70</span>, <span class="number">25</span>);											<span class="comment">//绘制文本</span></span><br><span class="line">       floatNum = <span class="number">360</span> * f;											<span class="comment">//计算角度</span></span><br><span class="line">       ConutNum += <span class="number">1</span>;												<span class="comment">//使ConutNum为1</span></span><br><span class="line">   &#125;</span><br><span class="line">   <span class="keyword">else</span> <span class="keyword">if</span> (Conu tNum == <span class="number">1</span>)											<span class="comment">//如果ConutNum为1时执行</span></span><br><span class="line">   &#123;</span><br><span class="line"><span class="comment">//绘制扇形</span></span><br><span class="line">g.FillPie(<span class="keyword">new</span> SolidBrush(Color.DarkOrange), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span>, <span class="number">0</span>, (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span>, floatNum, <span class="number">360</span> * f);</span><br><span class="line"><span class="comment">//绘制文本</span></span><br><span class="line">       g.DrawString(str, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.DarkOrange), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> + <span class="number">10</span>, <span class="number">10</span>);</span><br><span class="line">       g.DrawString(Convert.ToString(f * <span class="number">100</span>).Substring(<span class="number">0</span>, <span class="number">5</span>) + <span class="string">"%"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.DarkOrange), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> + <span class="number">10</span>, <span class="number">25</span>);											<span class="comment">//绘制文本</span></span><br><span class="line">        floatNum += <span class="number">360</span> * f;											<span class="comment">//计算角度</span></span><br><span class="line">        ConutNum += <span class="number">1</span>;												<span class="comment">// ConutNum为2</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ConutNum == <span class="number">2</span>)											<span class="comment">// ConutNum为2时执行</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.FillPie(<span class="keyword">new</span> SolidBrush(Color.Red), <span class="number">0</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span>, floatNum, <span class="number">360</span> * f);															<span class="comment">//绘制扇形</span></span><br><span class="line"><span class="comment">//绘制文本</span></span><br><span class="line">        g.DrawString(str, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Red), <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">20</span>);</span><br><span class="line">        g.DrawString(Convert.ToString(f * <span class="number">100</span>).Substring(<span class="number">0</span>, <span class="number">5</span>) + <span class="string">"%"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Red), <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">35</span>);											<span class="comment">//绘制文本</span></span><br><span class="line">        floatNum += <span class="number">360</span> * f;											<span class="comment">//计算角度</span></span><br><span class="line">        ConutNum += <span class="number">1</span>;												<span class="comment">// ConutNum为3</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (ConutNum == <span class="number">3</span>)											<span class="comment">// ConutNum为3时执行</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.FillPie(<span class="keyword">new</span> SolidBrush(Color.Blue), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> - <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span>, floatNum, <span class="number">360</span> * f);											<span class="comment">//绘制扇形</span></span><br><span class="line">        g.DrawString(str, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Blue), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> + <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">20</span>);															<span class="comment">//绘制文本</span></span><br><span class="line">        g.DrawString(Convert.ToString(f * <span class="number">100</span>).Substring(<span class="number">0</span>, <span class="number">5</span>) + <span class="string">"%"</span>, <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Bold), <span class="keyword">new</span> SolidBrush(Color.Blue), (<span class="keyword">this</span>.panel1.Width) / <span class="number">2</span> + <span class="number">10</span>, (<span class="keyword">this</span>.panel1.Height - <span class="number">10</span>) / <span class="number">2</span> + <span class="number">35</span>); 						<span class="comment">//绘制文本</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟014：绘制多饼型图的实现原理！<br>绘制多饼型图时，首先需要计算各个部分所占的比例，然后依次绘制各个部分在饼型图中所占的比例，在绘制过程中，从第一部分首先开始绘制，绘制结束后，记录其绘制的扇形结束位置，并以该位置为起点，开始绘制第二部分，依次类推，直到绘制完最后一部分，这样就实现了绘制多饼型图的功能。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 利用饼型图分析产品市场占有率</title>
    <url>/zh-CN/2019/04/16/csharp%20%E5%88%A9%E7%94%A8%E9%A5%BC%E5%9E%8B%E5%9B%BE%E5%88%86%E6%9E%90%E4%BA%A7%E5%93%81%E5%B8%82%E5%9C%BA%E5%8D%A0%E6%9C%89%E7%8E%87.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="利用饼型图分析产品市场占有率"><a href="#利用饼型图分析产品市场占有率" class="headerlink" title="利用饼型图分析产品市场占有率"></a>利用饼型图分析产品市场占有率</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>开发商品销售管理系统过程中，为了清晰了解产品在市场上的占有率，使用饼图分析产品市场占有率是最佳的选择。本实例通过利用饼型图分析某电子产品市场占有率，实例运行效果如图1所示。<br>图1 利用饼型图分析产品市场占有率</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例在实现时，首先通过SQL语句统计商品在市场的占有率，并将其字段名与数量存放于Hashtable哈希表中，然后遍历“哈希表”计算出每种商品所占的比例，最后通过Graphics类的FillPie方法绘制饼型图。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为CAnalyseGoodsScale。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加两个Panel控件，分别用来显示绘制的饼型图和说明信息。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">showPic</span>(<span class="params"><span class="keyword">float</span> f,Brush B</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Graphics g = <span class="keyword">this</span>.panel1.CreateGraphics();						<span class="comment">//通过panel1控件创建一个Graphics对象</span></span><br><span class="line">    <span class="keyword">if</span> (TimeNum == <span class="number">0.0f</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        g.FillPie(B, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.panel1.Width, <span class="keyword">this</span>.panel1.Height, <span class="number">0</span>, f * <span class="number">360</span>);<span class="comment">//绘制扇形</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.FillPie(B, <span class="number">0</span>, <span class="number">0</span>, <span class="keyword">this</span>.panel1.Width, <span class="keyword">this</span>.panel1.Height, TimeNum, f * <span class="number">360</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    TimeNum += f * <span class="number">360</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Paint</span>(<span class="params"><span class="keyword">object</span> sender, PaintEventArgs e</span>)				<span class="comment">//在Paint事件中绘制窗体</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ht.Clear();</span><br><span class="line">    Conn();											<span class="comment">//连接数据库</span></span><br><span class="line">    Random rnd = <span class="keyword">new</span> Random();							<span class="comment">//生成随机数</span></span><br><span class="line">    <span class="keyword">using</span> (cmd = <span class="keyword">new</span> SqlCommand(<span class="string">"select t_Name,sum(t_Num) as Num  from tb_14 group by t_Name"</span>, con))</span><br><span class="line">    &#123;</span><br><span class="line">        Graphics g2 = <span class="keyword">this</span>.panel2.CreateGraphics();					<span class="comment">//通过panel2控件创建一个Graphics对象</span></span><br><span class="line">        SqlDataReader dr = cmd.ExecuteReader();					<span class="comment">//创建SqlDataReader对象</span></span><br><span class="line">        <span class="keyword">while</span> (dr.Read())									<span class="comment">//读取数据</span></span><br><span class="line">        &#123;</span><br><span class="line">            ht.Add(dr[<span class="number">0</span>],Convert.ToInt32(dr[<span class="number">1</span>]));					<span class="comment">//将数据添加到Hashtable中</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span>[] flo = <span class="keyword">new</span> <span class="keyword">float</span>[ht.Count];</span><br><span class="line">        <span class="keyword">int</span> T = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (DictionaryEntry de <span class="keyword">in</span> ht)						<span class="comment">//遍历Hashtable</span></span><br><span class="line">        &#123;</span><br><span class="line">            flo[T] = Convert.ToSingle((Convert.ToDouble(de.Value) / SumNum).ToString().Substring(<span class="number">0</span>, <span class="number">6</span>));</span><br><span class="line">Brush Bru = <span class="keyword">new</span> SolidBrush(Color.FromArgb(rnd.Next(<span class="number">255</span>), rnd.Next(<span class="number">255</span>), rnd.Next(<span class="number">255</span>))); </span><br><span class="line"><span class="comment">//绘制商品及百分比</span></span><br><span class="line">            g2.DrawString(de.Key + <span class="string">"  "</span> + flo[T] * <span class="number">100</span> + <span class="string">"%"</span>, <span class="keyword">new</span> Font(<span class="string">"Arial"</span>, <span class="number">8</span>, FontStyle.Regular), Bru, <span class="number">7</span>, <span class="number">5</span> + T * <span class="number">18</span>);</span><br><span class="line">            showPic(flo[T], Bru);							<span class="comment">//调用showPic方法绘制饼型图</span></span><br><span class="line">            T++;</span><br><span class="line">        &#125;  </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟013：使用Paint事件实现窗体或控件的重绘！<br>当重绘窗体或控件时会引发其Paint事件，该事件将PaintEventArgs的实例传递给用来处理Paint事件的方法，从而实现窗体或控件的重绘。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 利用饼型图分析公司男女比率</title>
    <url>/zh-CN/2019/04/16/csharp%20%E5%88%A9%E7%94%A8%E9%A5%BC%E5%9E%8B%E5%9B%BE%E5%88%86%E6%9E%90%E5%85%AC%E5%8F%B8%E7%94%B7%E5%A5%B3%E6%AF%94%E7%8E%87.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="利用饼型图分析公司男女比率"><a href="#利用饼型图分析公司男女比率" class="headerlink" title="利用饼型图分析公司男女比率"></a>利用饼型图分析公司男女比率</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>开发人力资源管理系统时，利用饼图分析公司男女比例是最佳的选择。本实例对某公司的男女比例使用饼型图进行分析，实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-16-03064288.png" alt=""><br>图1 利用饼型图分析公司男女比率</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例实现时主要用到了Graphics类的FillEllipse方法和FillPie方法，下面分别对它们进行详细讲解。<br>（1）FillEllipse方法 该方法用于填充Rectangle结构指定的边框所定义的椭圆的内部，其语法格式如下：<br>public void FillEllipse(Brush brush,Rectangle rect)<br>参数说明 brush：确定填充特性的 Brush。 rect：Rectangle结构，它表示定义椭圆的边框。<br>（2）FillPie方法 该方法用于填充椭圆所定义的扇形区的内部，该椭圆由Rectangle结构和两条射线指定，其语法格式如下：<br>public void FillPie(Brush brush,Rectangle rect,float startAngle,float sweepAngle) FillPie方法语法中的参数及说明如表1所示。<br>表1 FillPie方法语法中的参数及说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>brush</td>
<td>确定填充特性的Brush</td>
</tr>
<tr>
<td>rect</td>
<td>Rectangle结构，它表示定义该扇形区所属的椭圆的边框</td>
</tr>
<tr>
<td>startAngle</td>
<td>从x轴沿顺时针方向旋转到扇形区第一个边所测得的角度（以度为单位）</td>
</tr>
<tr>
<td>sweepAngle</td>
<td>从startAngle参数沿顺时针方向旋转到扇形区第二个边所测得的角度（以度为单位）</td>
</tr>
</tbody></table>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为CAnalyseSex。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加两个Panel控件，分别用来显示绘制的饼型图和说明信息。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowPic</span>(<span class="params"><span class="keyword">string</span> SexCode,<span class="keyword">float</span> f</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Graphics g = <span class="keyword">this</span>.panel1.CreateGraphics();					<span class="comment">//通过panel1控件创建一个Graphics对象</span></span><br><span class="line">    Pen p=<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(Color.Blue));				<span class="comment">//创建画笔</span></span><br><span class="line">    Point p1=<span class="keyword">new</span> Point(<span class="number">0</span>,<span class="number">0</span>);							<span class="comment">//创建Point对象</span></span><br><span class="line">    Size s=<span class="keyword">new</span> Size(<span class="keyword">this</span>.panel1.Width,<span class="keyword">this</span>.panel1.Height);			<span class="comment">//创建Size对象</span></span><br><span class="line">    Rectangle trct = <span class="keyword">new</span> Rectangle(p1, s);					<span class="comment">//创建Rectangle对象</span></span><br><span class="line">    g.FillEllipse(<span class="keyword">new</span> SolidBrush(Color.Red), trct);				<span class="comment">//绘制椭圆</span></span><br><span class="line">    g.FillPie(<span class="keyword">new</span> SolidBrush(Color.Blue), trct, <span class="number">180</span>, f*<span class="number">360</span>);			<span class="comment">//绘制扇形</span></span><br><span class="line">    Graphics ginfo = <span class="keyword">this</span>.panel2.CreateGraphics();				<span class="comment">//通过panel2控件创建一个Graphics对象</span></span><br><span class="line">    Font font=<span class="keyword">new</span> Font(<span class="string">"宋体"</span>,<span class="number">10</span>,FontStyle.Regular);			<span class="comment">//设置字体</span></span><br><span class="line"><span class="comment">//绘制性别</span></span><br><span class="line">    ginfo.DrawString(SexCode +<span class="string">" "</span>+f.ToString().Substring(<span class="number">0</span>,<span class="number">4</span>), font, <span class="keyword">new</span> SolidBrush(Color.Blue), <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">    ginfo.DrawString(<span class="string">"女"</span> + <span class="string">" "</span> + (<span class="number">1.0</span> - Convert.ToDouble(f.ToString().Substring(<span class="number">0</span>, <span class="number">4</span>))).ToString().Substring(<span class="number">0</span>, <span class="number">4</span>), font, <span class="keyword">new</span> SolidBrush(Color.Red), <span class="number">0</span>, <span class="number">25</span>);											<span class="comment">//绘制比例</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟012：使用Color结构获取颜色。<br>Color结构表示一种ARGB颜色（alpha、红色、绿色、蓝色），现在已经命名的颜色都可以使用Color结构的属性来表示，例如，蓝色可以用Color.Blue来表示。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>CSharp 制作一个可以旋转的饼型图</title>
    <url>/zh-CN/2019/04/14/csharp%20%E5%88%B6%E4%BD%9C%E4%B8%80%E4%B8%AA%E5%8F%AF%E4%BB%A5%E6%97%8B%E8%BD%AC%E7%9A%84%E9%A5%BC%E5%9E%8B%E5%9B%BE.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="制作一个可以旋转的饼型图"><a href="#制作一个可以旋转的饼型图" class="headerlink" title="制作一个可以旋转的饼型图"></a>制作一个可以旋转的饼型图</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>通过本实例绘制的饼型图可以直观的显示公司员工的性别比例，而且还可以通过单击“旋转”按钮使饼型图旋转起来。<br>实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-14-13334715.png" alt=""> 图1 制作一个可以旋转的饼型图  </p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例在实现时，首先通过Graphics类的FillEllipse方法和FillPie方法绘制饼型图，然后通过使用Timer组件控制饼型图的旋转。<br>下面对本实例中用到的关键技术进行详细讲解。<br>Timer组件表示一个计时器，它可以按用户定义的时间间隔来引发事件，引发的事件一般为周期性的，每隔若干秒或若干毫秒执行一次，其常用的属性、方法及事件如表1所示。<br>表1 Timer组件的常用属性、方法及事件</p>
<table>
<thead>
<tr>
<th>属性、方法及事件</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>Enabled属性</td>
<td>获取或设置计时器是否正在运行</td>
</tr>
<tr>
<td>Interval属性</td>
<td>获取或设置在相对于上一次发生的Tick事件引发Tick事件之前的时间（以毫秒为单位）</td>
</tr>
<tr>
<td>Start方法</td>
<td>启动计时器</td>
</tr>
<tr>
<td>Stop方法</td>
<td>停止计时器</td>
</tr>
<tr>
<td>Tick事件</td>
<td>当指定的计时器间隔已过去而且计时器处于启用状态时发生</td>
</tr>
</tbody></table>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为RoundCaky。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加两个Panel控件，分别用来显示表示男女比例的饼型图和说明信息；添加两个Button控件，分别用来执行绘制饼型图和旋转饼型图操作；添加一个Timer组件，用来控制饼型图的旋转与停止。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">ShowPic</span>(<span class="params"><span class="keyword">string</span> SexCode, <span class="keyword">float</span> f</span>)<span class="comment">// ShowPic方法用来绘制饼图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.Controls.Add(panel1);<span class="comment">//将Panel控件添加到窗体中</span></span><br><span class="line">    panel1.Width = <span class="number">230</span>;<span class="comment">//设置Panel控件的宽度</span></span><br><span class="line">    panel1.Height = <span class="number">230</span>;<span class="comment">//设置Panel控件的高度</span></span><br><span class="line">    bt = <span class="keyword">new</span> Bitmap(panel1.Width,panel1.Height);<span class="comment">//创建画布</span></span><br><span class="line">    Graphics g = Graphics.FromImage(bt);<span class="comment">//创建Graphics对象</span></span><br><span class="line">    Pen p = <span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(Color.Blue));<span class="comment">//创建画笔</span></span><br><span class="line">    Point p1 = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);<span class="comment">//创建一个Point对象</span></span><br><span class="line">    Size s = <span class="keyword">new</span> Size(<span class="keyword">this</span>.panel1.Width, <span class="keyword">this</span>.panel1.Height);<span class="comment">//创建Size对象</span></span><br><span class="line">    Rectangle trct = <span class="keyword">new</span> Rectangle(p1, s);<span class="comment">//创建Rectangle对象</span></span><br><span class="line">    g.FillEllipse(<span class="keyword">new</span> SolidBrush(Color.Red), trct);<span class="comment">//绘制椭圆</span></span><br><span class="line">    g.FillPie(<span class="keyword">new</span> SolidBrush(Color.Blue), trct, flag, f * <span class="number">360</span>);<span class="comment">//绘制扇形</span></span><br><span class="line">    bt1 = <span class="keyword">new</span> Bitmap(panel2.Width,panel2.Height);<span class="comment">//创建画布</span></span><br><span class="line">    Graphics ginfo = Graphics.FromImage(bt1);<span class="comment">//创建Graphics对象</span></span><br><span class="line">    Font font = <span class="keyword">new</span> Font(<span class="string">"宋体"</span>, <span class="number">10</span>, FontStyle.Regular);<span class="comment">//设置字体</span></span><br><span class="line">    ginfo.DrawString(SexCode + <span class="string">" "</span> + f.ToString().Substring(<span class="number">0</span>, <span class="number">4</span>), font, <span class="keyword">new</span> SolidBrush(Color.Blue), <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">    ginfo.DrawString(<span class="string">"女"</span> + <span class="string">" "</span> + (<span class="number">1.0</span> - Convert.ToDouble(f.ToString().Substring(<span class="number">0</span>, <span class="number">4</span>))).ToString().Substring(<span class="number">0</span>, <span class="number">4</span>), font, <span class="keyword">new</span> SolidBrush(Color.Red), <span class="number">0</span>, <span class="number">25</span>);                                                                                                                                                                                                                  <span class="comment">//绘制性别及比率</span></span><br><span class="line">    panel1.BackgroundImage = bt;<span class="comment">//显示饼图</span></span><br><span class="line">    panel2.BackgroundImage = bt1;<span class="comment">//显示性别及比率</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)<span class="comment">//单击“显示”按钮显示饼图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Conn();<span class="comment">//连接数据库</span></span><br><span class="line">    <span class="keyword">using</span> (cmd = <span class="keyword">new</span> SqlCommand(<span class="string">"SELECT sex,COUNT(sex) num FROM tb_sex group by sex"</span>, con))</span><br><span class="line">    &#123;</span><br><span class="line">        SqlDataReader dr = cmd.ExecuteReader();<span class="comment">//创建SqlDataReader对象</span></span><br><span class="line">        <span class="keyword">string</span>[] str = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (dr.Read())<span class="comment">//读取记录</span></span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = dr[<span class="number">0</span>].ToString() + <span class="string">","</span> + dr[<span class="number">1</span>].ToString();<span class="comment">//获取数据库中存储的性别及比例</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> N = Convert.ToInt16(str[<span class="number">0</span>].Substring(<span class="number">2</span>)) + Convert.ToInt16(str[<span class="number">1</span>].Substring(<span class="number">2</span>));              <span class="comment">//男女性别比例之和</span></span><br><span class="line">        <span class="keyword">float</span> f = Convert.ToInt16(str[<span class="number">0</span>].Substring(<span class="number">2</span>)) / N;<span class="comment">//男性的比例</span></span><br><span class="line">        flag = <span class="number">180</span>;<span class="comment">//开始绘制的起始角度</span></span><br><span class="line">        ShowPic(str[<span class="number">0</span>].Substring(<span class="number">0</span>, <span class="number">1</span>), f);<span class="comment">//调用ShowPic方法绘制饼图</span></span><br><span class="line">    &#125;</span><br><span class="line">    con.Close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)<span class="comment">//当单击“旋转”按钮时开始旋转饼图</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    flag += <span class="number">1</span>;<span class="comment">//每次转动一度</span></span><br><span class="line">    Conn();<span class="comment">//连接数据库</span></span><br><span class="line">    <span class="keyword">using</span> (cmd = <span class="keyword">new</span> SqlCommand(<span class="string">"SELECT sex,COUNT(sex) num FROM tb_sex group by sex"</span>, con))</span><br><span class="line">    &#123;</span><br><span class="line">        SqlDataReader dr = cmd.ExecuteReader();<span class="comment">//创建SqlDataReader对象</span></span><br><span class="line">        <span class="keyword">string</span>[] str = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">2</span>];<span class="comment">//声明数组存储性别及比例</span></span><br><span class="line">        <span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (dr.Read())</span><br><span class="line">        &#123;</span><br><span class="line">            str[i] = dr[<span class="number">0</span>].ToString() + <span class="string">","</span> + dr[<span class="number">1</span>].ToString();<span class="comment">//获取数据库中存储的性别及比例</span></span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">float</span> N = Convert.ToInt16(str[<span class="number">0</span>].Substring(<span class="number">2</span>)) + Convert.ToInt16(str[<span class="number">1</span>].Substring(<span class="number">2</span>));               <span class="comment">//男女性别比例之和</span></span><br><span class="line">        <span class="keyword">float</span> f = Convert.ToInt16(str[<span class="number">0</span>].Substring(<span class="number">2</span>)) / N;<span class="comment">//男性的比例</span></span><br><span class="line">        ShowPic(str[<span class="number">0</span>].Substring(<span class="number">0</span>, <span class="number">1</span>), f);<span class="comment">//调用ShowPic方法绘制饼图</span></span><br><span class="line">    &#125;</span><br><span class="line">    con.Close();<span class="comment">//关闭连接</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)<span class="comment">//“旋转”按钮</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (button2.Text ==<span class="string">"旋转"</span>)<span class="comment">//如果按钮显示“旋转”文本</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer1.Start();<span class="comment">//开始Timer控件</span></span><br><span class="line">        button2.Text = <span class="string">"停止"</span>;<span class="comment">//将按钮的文本设为“停止”</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span><span class="comment">//如果按钮的文本为“停止”</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer1.Stop();<span class="comment">//停止Timer控件</span></span><br><span class="line">        button2.Text = <span class="string">"旋转"</span>;<span class="comment">//将按钮的文本设为“旋转”</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟016：Timer计时器组件的使用。<br>Timer组件是一个计时器组件，它主要用来按用户定义的时间间隔来引发事件，引发的事件一般为周期性的，每隔若干秒或若干毫秒执行一次。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>异步加载并播放声音文件</title>
    <url>/zh-CN/2019/07/18/csharp%20%E5%BC%82%E6%AD%A5%E5%8A%A0%E8%BD%BD%E5%B9%B6%E6%92%AD%E6%94%BE%E5%A3%B0%E9%9F%B3%E6%96%87%E4%BB%B6.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="异步加载并播放声音文件"><a href="#异步加载并播放声音文件" class="headerlink" title="异步加载并播放声音文件"></a>异步加载并播放声音文件</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>一般情况下，在加载某些文件时，如果都进行同步加载，那么将浪费很多不必要的时间，因为有些文件并不是用户想要的，因此应该实现异步加载，只加载需要的文件。本实例实现了异步加载并播放声音的功能，实例运行结果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/07/2019-07-18-15094990.png" alt=""> 图1 异步加载并播放声音文件</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例实现时主要用到SoundPlayer类，该类用来控制.wav文件中的声音播放。在播放.wav文件前，首先定位该文件的位置，此时用到该类的SoundLocation属性，该属性的功能是获取或设置要加载的.wav文件的文件路径或URL。然后用到该类的LoadAsync方法，该方法的作用是使用新线程从流或Web资源中加载.wav文件。下面对本实例中用到的关键技术进行详细的讲解。<br>（1）SoundLocation属性 该属性值的类型是System.String，它的作用是从中加载.wav文件的文件路径或URL，如果不存在文件路径，则为String.Empty。默认为String.Empty。其语法格式如下： public string SoundLocation { get; set; }<br>（2）LoadAsync方法 该方法用来从流中或者Web资源中异步加载文件，其语法格式如下： public void LoadAsync() <img data-src="https://cdn.fesugar.com/2019/07/2019-07-18-15095149.jpeg" alt="提示"> 说明：程序中使用SoundPlayer类时，首先需要在命名空间区域添加System.Media命名空间。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为AsynchronismLoadPlayVoice。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加一个TextBox控件，用来显示所要播放的文件路径；添加两个Button控件，分别用来打开.wav文件和播放音乐文件。<br>（3）程序主要代码如下：</p>
<pre><code class="chsarp">private void play_Click(object sender,EventArgs e)
{
    try
    {
        SoundPlayer player = new SoundPlayer();                //声明一个控制WAV文件的声音播放文件对象
        player.SoundLocation = path.Text;                    //指定声音文件的路径
        player.LoadAsync();                            //设置播放的方法
        player.Play();                                //播放声音文件
    }
    catch (Exception ex)
    {
        MessageBox.Show(ex.Message);
    }
}
</code></pre>
<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟008：使用Exception类捕捉异常。<br>所有.NET里的异常都可被称为Exception。虽然说异常多种多样，但基本上它们都是Exception。这个说法可以打一个简单比喻，就像是无论黑猫、白猫、花猫，它们都是“猫”一样。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 在饼型图的外围显示说明文字</title>
    <url>/zh-CN/2019/04/14/csharp%20%E5%9C%A8%E9%A5%BC%E5%9E%8B%E5%9B%BE%E7%9A%84%E5%A4%96%E5%9B%B4%E6%98%BE%E7%A4%BA%E8%AF%B4%E6%98%8E%E6%96%87%E5%AD%97.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="在饼型图的外围显示说明文字"><a href="#在饼型图的外围显示说明文字" class="headerlink" title="在饼型图的外围显示说明文字"></a>在饼型图的外围显示说明文字</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>饼型图可以很直观的显示一些信息的比例，如果信息过多则需要在饼型图上绘制说明文字，这样，才可以更好的了解饼型图所代表的含义。本实例使用C#实现了在饼型图的外围绘制说明文字的功能，实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-14-13433265.png" alt=""> 图1 在饼型图的外围显示说明文字  </p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例实现时主要使用Graphics 类的FillPie方法绘制饼型图，使用FillRectangle方法和DrawRectangle方法绘制说明文字的矩形框及矩形框的边，使用DrawString方法绘制说明文字。下面对本实例中用到的关键技术进行详细讲解。<br>DrawRectangle方法用于绘制由坐标对、宽度和高度指定的矩形，其语法格式如下：<br>public void DrawRectangle(Pen pen,int x,int y,int width,int height)<br>DrawRectangle方法语法中的参数及说明如表1所示。 表1<br>DrawRectangle方法语法中的参数及说明</p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td>pen</td>
<td>Pen，它确定矩形的颜色、宽度和样式</td>
</tr>
<tr>
<td>x</td>
<td>要绘制的矩形的左上角的x坐标</td>
</tr>
<tr>
<td>y</td>
<td>要绘制的矩形的左上角的y坐标</td>
</tr>
<tr>
<td>width</td>
<td>要绘制的矩形的宽度</td>
</tr>
<tr>
<td>height</td>
<td>要绘制的矩形的高度</td>
</tr>
</tbody></table>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为TextInCaky。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加一个Panel控件，用来显示带有说明文字的饼型图。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ProtractArea</span>(<span class="params">Graphics g</span>)                                              <span class="comment">//绘制饼型图表</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    AreaValue();                                                                  <span class="comment">//计算最长说明文字的大小</span></span><br><span class="line"></span><br><span class="line">    mypen = <span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>);                                                        <span class="comment">//设置画笔的颜色及大小</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> f = <span class="number">0</span>;                                                              <span class="comment">//记录百分比</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TimeNum = <span class="number">0</span>;                                                        <span class="comment">//扇形的绘制度数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AXLeft = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AYUp = <span class="number">0</span>;                                                       <span class="comment">//设置饼型图的Y坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AXSize = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AYSize = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Atop = <span class="number">0</span>;                                                               <span class="comment">//记录饼型的高度为长和宽的最小值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Aleft = <span class="number">0</span>;                                                               <span class="comment">//记录饼型的高度为长和宽的最小值</span></span><br><span class="line"></span><br><span class="line">    TimeNum = AreaAngle;                                                  <span class="comment">//设置饼型图的起始度数</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算饼型图的初始位置</span></span><br><span class="line"></span><br><span class="line">    XLeft = panel1.Width - (panel1.Width - <span class="number">5</span>);                                            <span class="comment">//去了边框后饼型图的X位置</span></span><br><span class="line"></span><br><span class="line">    XSize = panel1.Width - <span class="number">10</span>;                                                     <span class="comment">//设置饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    temXLeft = AXLeft;                                                              <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    AXLeft = XLeft;                                                            <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    AXSize = XSize;                                                            <span class="comment">//记录饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过说明文字的大小计算饼型图的位置</span></span><br><span class="line"></span><br><span class="line">    AXLeft = AXLeft + AreaXMaxWidth + Aline;                                        <span class="comment">//设置去除说明文字后的饼型图X坐标</span></span><br><span class="line"></span><br><span class="line">    AYUp = AYUp + AreaXMaxHeight;                                                <span class="comment">//设置去除说明文字后的饼型图Y坐标</span></span><br><span class="line"></span><br><span class="line">    AXSize = XSize - AreaXMaxWidth * <span class="number">2</span> - Aline * <span class="number">2</span>;                                 <span class="comment">//设置去除说明文字后的饼型图宽度</span></span><br><span class="line"></span><br><span class="line">    AYSize = YSize - AreaXMaxHeight * <span class="number">2</span>;                                                 <span class="comment">//设置去除说明文字后的饼型图高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (AXSize &gt;= AYSize)                                                    <span class="comment">//如果饼型图的宽度大于等于高度</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Aleft = AXSize - AYSize;                                                <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">        AXSize = AYSize;                                                   <span class="comment">//将高度设为宽度</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Atop = AYSize - AXSize;                                                <span class="comment">//记录饼型图的Y坐标</span></span><br><span class="line"></span><br><span class="line">        AYSize = AXSize;                                                   <span class="comment">//将宽度设为高度</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Aleft != <span class="number">0</span>)                                                                 <span class="comment">//如果宽大于高</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        AXLeft = AXLeft + Aleft / <span class="number">2</span>;                                                  <span class="comment">//设置饼型图横向局中</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Atop != <span class="number">0</span>)                                                                 <span class="comment">//如果高大于宽</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        AYUp = AYUp + Atop / <span class="number">2</span>;                                               <span class="comment">//设置饼型图纵向局中</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    temXLeft = XLeft;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制饼型图</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (AXSize &gt; <span class="number">0</span> &amp;&amp; AYSize &gt; <span class="number">0</span>)                                              <span class="comment">//如果饼型图的宽和高大于0</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SzData.Length; i++)                                             <span class="comment">//遍历数据</span></span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            f = SzData[i] / ASum;                                              <span class="comment">//获取当前数据的百分比</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">//设置当前扇形图的填充颜色</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (i &gt;= WearColor.Length)                                              <span class="comment">//如果没有超出颜色数组</span></span><br><span class="line"></span><br><span class="line">                mybrush = <span class="keyword">new</span> SolidBrush(WearColor[i - WearColor.Length]);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">                mybrush = <span class="keyword">new</span> SolidBrush(WearColor[i]);</span><br><span class="line"></span><br><span class="line">            g.FillPie(mybrush, AXLeft, AYUp, AXSize, AYSize, TimeNum, f * <span class="number">360</span>);  <span class="comment">//绘制扇形图</span></span><br><span class="line"></span><br><span class="line">            TimeNum += f * <span class="number">360</span>;                                              <span class="comment">//设置下一个扇形图的度数</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ProAreaSign(g);                                                             <span class="comment">//绘制饼型图的说明文字</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">region</span> 绘制饼型图标识(Area)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">ProAreaSign</span>(<span class="params">Graphics g</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    AreaValue();                                                                  <span class="comment">//存储最长的名称</span></span><br><span class="line"></span><br><span class="line">    mypen = <span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>);                                                        <span class="comment">//设置画笔的颜色及大小</span></span><br><span class="line"></span><br><span class="line">    Font LSfont = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"宋体"</span>, <span class="number">8</span>);                             <span class="comment">//设置说明文字的字体样式</span></span><br><span class="line"></span><br><span class="line">    SolidBrush Zbrush = <span class="keyword">new</span> SolidBrush(Color.Black);                                 <span class="comment">//设置存放说明文字边框的画刷</span></span><br><span class="line"></span><br><span class="line">    SolidBrush ATbrush = <span class="keyword">new</span> SolidBrush(Color.Khaki);                              <span class="comment">//设置存放说明文字方块的背景画刷</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> f = <span class="number">0</span>;                                                              <span class="comment">//记录百分比</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TimeNum = <span class="number">0</span>;                                                        <span class="comment">//扇形的绘制度数</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AXLeft = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AYUp = <span class="number">0</span>;                                                       <span class="comment">//设置饼型图的Y坐标</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AXSize = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> AYSize = <span class="number">0</span>;                                                            <span class="comment">//设置饼型图的高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Atop = <span class="number">0</span>;                                                               <span class="comment">//记录饼型的高度为长和宽的最小值</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Aleft = <span class="number">0</span>;                                                               <span class="comment">//记录饼型的高度为长和宽的最小值</span></span><br><span class="line"></span><br><span class="line">    Graphics TitG = panel1.CreateGraphics();                                              <span class="comment">//创建Graphics对象</span></span><br><span class="line"></span><br><span class="line">    SizeF XMaxSize = TitG.MeasureString(<span class="string">""</span>, LSfont);                                <span class="comment">//将绘制的字符串进行格式化</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> SWidth = <span class="number">0</span>;                                                            <span class="comment">//获取字符串的宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> SHeight = <span class="number">0</span>;                                                           <span class="comment">//获取字符串的高度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//计算饼型图的初始位置</span></span><br><span class="line"></span><br><span class="line">    XLeft = panel1.Width - (panel1.Width - <span class="number">5</span>);                                            <span class="comment">//去了边框后饼型图的X位置</span></span><br><span class="line"></span><br><span class="line">    XSize = panel1.Width - <span class="number">10</span>;                                                     <span class="comment">//设置饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    temXLeft = AXLeft;                                                              <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    AXLeft = XLeft;                                                            <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">    AXSize = XSize;                                                            <span class="comment">//记录饼型图的宽度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//通过说明文字的大小计算饼型图的位置</span></span><br><span class="line"></span><br><span class="line">    AXLeft = AXLeft + AreaXMaxWidth + Aline;                                        <span class="comment">//设置去除说明文字后的饼型图X坐标</span></span><br><span class="line"></span><br><span class="line">    AYUp = AYUp + AreaXMaxHeight;                                                <span class="comment">//设置去除说明文字后的饼型图Y坐标</span></span><br><span class="line"></span><br><span class="line">    AXSize = XSize - AreaXMaxWidth * <span class="number">2</span> - Aline * <span class="number">2</span>;                                 <span class="comment">//设置去除说明文字后的饼型图宽度</span></span><br><span class="line"></span><br><span class="line">    AYSize = YSize - AreaXMaxHeight * <span class="number">2</span>;                                                 <span class="comment">//设置去除说明文字后的饼型图高度</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (AXSize &gt;= AYSize)                                                    <span class="comment">//如果饼型图的宽度大于等于高度</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Aleft = AXSize - AYSize;                                                <span class="comment">//记录饼型图的X坐标</span></span><br><span class="line"></span><br><span class="line">        AXSize = AYSize;                                                   <span class="comment">//将高度设为宽度</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        Atop = AYSize - AXSize;                                                <span class="comment">//记录饼型图的Y坐标</span></span><br><span class="line"></span><br><span class="line">        AYSize = AXSize;                                                   <span class="comment">//将宽度设为高度</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Aleft != <span class="number">0</span>)                                                                 <span class="comment">//如果宽大于高</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        AXLeft = AXLeft + Aleft / <span class="number">2</span>;                                                  <span class="comment">//设置饼型图横向局中</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (Atop != <span class="number">0</span>)                                                                 <span class="comment">//如果高大于宽</span></span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        AYUp = AYUp + Atop / <span class="number">2</span>;                                               <span class="comment">//设置饼型图纵向局中</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    temXLeft = XLeft;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化说明文字前横线的变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> X1 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Y1 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> X2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> Y2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化说明文字位置的变量</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TX1 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TY1 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TX2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> TY2 = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">float</span> temf = <span class="number">0</span>;                                                                <span class="comment">//记录百分比</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">double</span> radians = <span class="number">0</span>;                                                         <span class="comment">//记录扇形的角度</span></span><br><span class="line"></span><br><span class="line">    temf = (<span class="keyword">this</span>.AreaAngle * (ASum / <span class="number">360</span>) / ASum);                                    <span class="comment">//记录起始位置的度数</span></span><br><span class="line"></span><br><span class="line">    TimeNum = <span class="keyword">this</span>.AreaAngle;                                                   <span class="comment">//记录扇形的起始角度</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//绘制说明文字</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (AXSize &gt; <span class="number">0</span> &amp;&amp; AYSize &gt; <span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; SzData.Length; i++)                                             <span class="comment">//遍历所有说明文字</span></span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            f = SzData[i] / ASum;                                              <span class="comment">//获取当前记录的百分比</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (f == <span class="number">0</span>)                                                        <span class="comment">//如果当前值为0</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">continue</span>;                                                  <span class="comment">//执行下一次循环</span></span><br><span class="line"></span><br><span class="line">            radians = ((<span class="keyword">double</span>)((temf + f / <span class="number">2</span>) * <span class="number">360</span>) * Math.PI) / (<span class="keyword">double</span>)<span class="number">180</span>;</span><br><span class="line"></span><br><span class="line">            X1 = Convert.ToSingle(AXLeft + (AXSize / <span class="number">2.0</span> + (<span class="keyword">int</span>)((<span class="keyword">float</span>)(AXSize / <span class="number">2.0</span>) * Math.Cos(radians))));</span><br><span class="line"></span><br><span class="line">            Y1 = Convert.ToSingle(AYUp + (AYSize / <span class="number">2.0</span> + (<span class="keyword">int</span>)((<span class="keyword">float</span>)(AYSize / <span class="number">2.0</span>) * Math.Sin(radians))));</span><br><span class="line"></span><br><span class="line">            XMaxSize = TitG.MeasureString(AreaText[i].Trim(), LSfont);          <span class="comment">//将绘制的字符串进行格式化</span></span><br><span class="line"></span><br><span class="line">            SWidth = XMaxSize.Width;                                             <span class="comment">//获取字符串的宽度</span></span><br><span class="line"></span><br><span class="line">            SHeight = XMaxSize.Height;                                            <span class="comment">//获取字符串的高度</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> ((temf + f / <span class="number">2</span>) * <span class="number">360</span> &gt; <span class="number">90</span> &amp;&amp; (temf + f / <span class="number">2</span>) * <span class="number">360</span> &lt;= <span class="number">270</span>)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                X2 = X1 - Aline;</span><br><span class="line"></span><br><span class="line">                TX1 = X2 - <span class="number">1</span> - SWidth;</span><br><span class="line"></span><br><span class="line">                TY1 = Y1 - SHeight / <span class="number">2</span> - Asash;</span><br><span class="line"></span><br><span class="line">                TX2 = SWidth;</span><br><span class="line"></span><br><span class="line">                TY2 = SHeight + Asash * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">                g.FillRectangle(ATbrush, TX1, TY1, TX2, TY2);                            <span class="comment">//绘制内矩形</span></span><br><span class="line"></span><br><span class="line">                g.DrawRectangle(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), TX1, TY1, TX2, TY2);  <span class="comment">//绘制矩形</span></span><br><span class="line"></span><br><span class="line">                g.DrawString(AreaText[i].Trim(), LSfont, Zbrush, <span class="keyword">new</span> PointF(X2 - SWidth + Asash - <span class="number">1</span>, Y1 - SHeight / <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">           &#123;</span><br><span class="line"></span><br><span class="line">               X2 = X1 + Aline;</span><br><span class="line"></span><br><span class="line">               TX1 = X2 + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">               TY1 = Y1 - SHeight / <span class="number">2</span> - Asash;</span><br><span class="line"></span><br><span class="line">               TX2 = SWidth;</span><br><span class="line"></span><br><span class="line">               TY2 = SHeight + Asash * <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">               g.FillRectangle(ATbrush, TX1, TY1, TX2, TY2);                       <span class="comment">//绘制内矩形</span></span><br><span class="line"></span><br><span class="line">               g.DrawRectangle(<span class="keyword">new</span> Pen(Color.Black, <span class="number">1</span>), TX1, TY1, TX2, TY2);   <span class="comment">//绘制矩形</span></span><br><span class="line"></span><br><span class="line">               g.DrawString(AreaText[i].Trim(), LSfont, Zbrush, <span class="keyword">new</span> PointF(X2 + Asash + <span class="number">1</span>, Y1 - SHeight / <span class="number">2</span>));</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Y2 = Y1;</span><br><span class="line"></span><br><span class="line">            g.DrawLine(<span class="keyword">new</span> Pen(<span class="keyword">new</span> SolidBrush(Color.Black), <span class="number">1</span>), X1, Y1, X2, Y2);</span><br><span class="line"></span><br><span class="line">            TimeNum += f * <span class="number">360</span>;</span><br><span class="line"></span><br><span class="line">            temf = temf + f;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endregion</span></span></span><br></pre></td></tr></table></figure>

<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟015：使用DrawString方法实现水印文字。<br>对于一些有可能侵权的图片，或者要作为宣传的图片，可以通过使用DrawString方法将用到的文字绘制到图片上，从而得到所谓的“水印文字”。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 多曲线数据分析</title>
    <url>/zh-CN/2019/04/16/csharp%20%E5%A4%9A%E6%9B%B2%E7%BA%BF%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="多曲线数据分析"><a href="#多曲线数据分析" class="headerlink" title="多曲线数据分析"></a>多曲线数据分析</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>在人事管理系统中经常会用到统计功能，如统计员工、工资、性别比例等。本实例使用多曲线对员工进行统计，分析公司内正式员工和试用员工的流动情况。<br>实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-16-03153936.png" alt=""> 图1 多曲线数据分析</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例实现时，首先需要通过SQL语句从数据库中检索出相关数据，然后将这些数据信息以适当的比例绘制成多曲线图，实现过程中主要使用Graphics类的DrawLines方法来绘制多曲线。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为MultiCurve。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加一个ComboBox控件，用来显示年度列表；添加一个Panel控件，用来显示绘制的多曲线图；添加一个Button控件，用来从数据库中查询信息，并根据查询的信息绘制多曲线图。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">CreateImage</span>(<span class="params"><span class="keyword">int</span> ID</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> height = <span class="number">440</span>, width = <span class="number">600</span>;										<span class="comment">//设置画布宽和高</span></span><br><span class="line">    System.Drawing.Bitmap image = <span class="keyword">new</span> System.Drawing.Bitmap(width, height);	<span class="comment">//创建画布</span></span><br><span class="line">    Graphics g = Graphics.FromImage(image);								<span class="comment">//创建Graphics对象</span></span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.Clear(Color.White);										<span class="comment">//清空图片背景色</span></span><br><span class="line">        Font font = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"Arial"</span>, <span class="number">9</span>, FontStyle.Regular);			<span class="comment">//设置字体</span></span><br><span class="line">        Font font1 = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"宋体"</span>, <span class="number">12</span>, FontStyle.Regular);			<span class="comment">//设置字体</span></span><br><span class="line">        Font font2 = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"Arial"</span>, <span class="number">8</span>, FontStyle.Regular);			<span class="comment">//设置字体</span></span><br><span class="line">        System.Drawing.Drawing2D.LinearGradientBrush brush = <span class="keyword">new</span> System.Drawing.Drawing2D.LinearGradientBrush(<span class="keyword">new</span> Rectangle(<span class="number">0</span>, <span class="number">0</span>, image.Width, image.Height), Color.Blue, Color.Blue, <span class="number">1.2f</span>, <span class="literal">true</span>);					<span class="comment">//创建LinearGradientBrush对象</span></span><br><span class="line">        g.FillRectangle(Brushes.AliceBlue, <span class="number">0</span>, <span class="number">0</span>, width, height);					<span class="comment">//绘制矩形框</span></span><br><span class="line">        Brush brush1 = <span class="keyword">new</span> SolidBrush(Color.Blue);							<span class="comment">//创建笔刷</span></span><br><span class="line">        Brush brush2 = <span class="keyword">new</span> SolidBrush(Color.SaddleBrown);					<span class="comment">//创建笔刷</span></span><br><span class="line">        <span class="keyword">string</span> str = <span class="string">"SELECT * FROM tb_curve WHERE Years="</span> + ID + <span class="string">""</span>;			<span class="comment">//声明SQL语句</span></span><br><span class="line"><span class="comment">//建立数据库连接</span></span><br><span class="line">        SqlConnection Con = <span class="keyword">new</span> SqlConnection(<span class="string">"server=mrwxk\\\wangxiaoke;pwd=;uid=sa;database=db_TomeOne"</span>); </span><br><span class="line">        Con.Open();											<span class="comment">//打开数据库连接</span></span><br><span class="line">        SqlCommand Com = <span class="keyword">new</span> SqlCommand(str, Con);						<span class="comment">//创建SqlCommand对象</span></span><br><span class="line">        SqlDataReader dr = Com.ExecuteReader();							<span class="comment">//创建SqlDataReader对象</span></span><br><span class="line">        dr.Read();												<span class="comment">//开始读取记录</span></span><br><span class="line">        <span class="keyword">if</span> (dr.HasRows)											<span class="comment">//如果有记录</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//绘制标题</span></span><br><span class="line">            g.DrawString(<span class="string">""</span> + ID + <span class="string">"年公司内部人员统计表"</span>, font1, brush1, <span class="keyword">new</span> PointF(<span class="number">160</span>, <span class="number">30</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        dr.Close();												<span class="comment">//关闭SqlDataReader对象</span></span><br><span class="line">        <span class="comment">//画图片的边框线</span></span><br><span class="line">        g.DrawRectangle(<span class="keyword">new</span> Pen(Color.Blue), <span class="number">0</span>, <span class="number">0</span>, image.Width - <span class="number">1</span>, image.Height - <span class="number">1</span>);</span><br><span class="line">        Pen mypen = <span class="keyword">new</span> Pen(brush, <span class="number">1</span>);								<span class="comment">//创建画笔</span></span><br><span class="line">        Pen mypen2 = <span class="keyword">new</span> Pen(Color.Red, <span class="number">2</span>);								<span class="comment">//创建画笔 </span></span><br><span class="line">        <span class="keyword">int</span> x = <span class="number">60</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g.DrawLine(mypen, x, <span class="number">80</span>, x, <span class="number">340</span>);							<span class="comment">//绘制纵向线条</span></span><br><span class="line">            x = x + <span class="number">40</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        Pen mypen1 = <span class="keyword">new</span> Pen(Color.Blue, <span class="number">2</span>);							<span class="comment">//创建画笔</span></span><br><span class="line">        g.DrawLine(mypen1, x - <span class="number">480</span>, <span class="number">80</span>, x - <span class="number">480</span>, <span class="number">340</span>);						<span class="comment">//绘制线条</span></span><br><span class="line">        <span class="keyword">int</span> y = <span class="number">106</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g.DrawLine(mypen, <span class="number">60</span>, y, <span class="number">540</span>, y);							<span class="comment">//绘制横向线条</span></span><br><span class="line">            y = y + <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        g.DrawLine(mypen1, <span class="number">60</span>, y, <span class="number">540</span>, y);</span><br><span class="line">        <span class="comment">//x轴</span></span><br><span class="line">        String[] n = &#123;<span class="string">"  一月"</span>, <span class="string">"  二月"</span>, <span class="string">"  三月"</span>, <span class="string">"  四月"</span>, <span class="string">"  五月"</span>, <span class="string">"  六月"</span>, <span class="string">"  七月"</span>,</span><br><span class="line">             <span class="string">"  八月"</span>, <span class="string">"  九月"</span>, <span class="string">"  十月"</span>, <span class="string">"十一月"</span>, <span class="string">"十二月"</span>&#125;;				<span class="comment">//绘制月份</span></span><br><span class="line">        x = <span class="number">35</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g.DrawString(n[i].ToString(), font, Brushes.Red, x, <span class="number">348</span>);				<span class="comment">//设置文字内容及输出位置</span></span><br><span class="line">            x = x + <span class="number">40</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//y轴</span></span><br><span class="line">        String[] m = &#123;<span class="string">"900人"</span>, <span class="string">" 800人"</span>, <span class="string">" 700人"</span>, <span class="string">"600人"</span>, <span class="string">" 565人"</span>, <span class="string">" 400人"</span>, <span class="string">" 300人"</span>, <span class="string">" 200人"</span>,</span><br><span class="line">             <span class="string">" 100人"</span>&#125;;											<span class="comment">//绘制人数</span></span><br><span class="line">        y = <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            g.DrawString(m[i].ToString(), font, Brushes.Red, <span class="number">10</span>, y); 				<span class="comment">//设置文字内容及输出位置</span></span><br><span class="line">            y = y + <span class="number">26</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] Count1 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">12</span>];</span><br><span class="line">        <span class="keyword">int</span>[] Count2 = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">12</span>];</span><br><span class="line">        <span class="keyword">string</span>[] NumChr = <span class="keyword">new</span> <span class="keyword">string</span>[<span class="number">12</span>];</span><br><span class="line">        <span class="keyword">string</span> cmdtxt2 = <span class="string">"SELECT * FROM tb_curve WHERE Years="</span> + ID + <span class="string">""</span>;		<span class="comment">//声明SQL语句</span></span><br><span class="line">        SqlCommand Com1 = <span class="keyword">new</span> SqlCommand(cmdtxt2, Con);					<span class="comment">//创建SqlCommand对象</span></span><br><span class="line">        SqlDataAdapter da = <span class="keyword">new</span> SqlDataAdapter();							<span class="comment">//创建SqlDataAdapter对象</span></span><br><span class="line">        da.SelectCommand = Com1;</span><br><span class="line">        DataSet ds = <span class="keyword">new</span> DataSet();									<span class="comment">//创建DataSet对象</span></span><br><span class="line">        da.Fill(ds);												<span class="comment">//Fill方法填充DataSet</span></span><br><span class="line">        <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            NumChr[i] = ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][i + <span class="number">1</span>].ToString();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            Count1[j] = Convert.ToInt32(NumChr[j].Split(<span class="string">'|'</span>)[<span class="number">0</span>].ToString()) * <span class="number">26</span> / <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; <span class="number">12</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            Count2[k] = Convert.ToInt32(NumChr[k].Split(<span class="string">'|'</span>)[<span class="number">1</span>].ToString()) * <span class="number">26</span> / <span class="number">100</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//显示折线效果</span></span><br><span class="line">        SolidBrush mybrush = <span class="keyword">new</span> SolidBrush(Color.Red);						<span class="comment">//创建SolidBrush对象</span></span><br><span class="line">        Point[] points1 = <span class="keyword">new</span> Point[<span class="number">12</span>];</span><br><span class="line">        points1[<span class="number">0</span>].X = <span class="number">60</span>; points1[<span class="number">0</span>].Y = <span class="number">340</span> - Count1[<span class="number">0</span>];</span><br><span class="line">        points1[<span class="number">1</span>].X = <span class="number">100</span>; points1[<span class="number">1</span>].Y = <span class="number">340</span> - Count1[<span class="number">1</span>];</span><br><span class="line">        points1[<span class="number">2</span>].X = <span class="number">140</span>; points1[<span class="number">2</span>].Y = <span class="number">340</span> - Count1[<span class="number">2</span>];</span><br><span class="line">        points1[<span class="number">3</span>].X = <span class="number">180</span>; points1[<span class="number">3</span>].Y = <span class="number">340</span> - Count1[<span class="number">3</span>];</span><br><span class="line">        points1[<span class="number">4</span>].X = <span class="number">220</span>; points1[<span class="number">4</span>].Y = <span class="number">340</span> - Count1[<span class="number">4</span>];</span><br><span class="line">        points1[<span class="number">5</span>].X = <span class="number">260</span>; points1[<span class="number">5</span>].Y = <span class="number">340</span> - Count1[<span class="number">5</span>];</span><br><span class="line">        points1[<span class="number">6</span>].X = <span class="number">300</span>; points1[<span class="number">6</span>].Y = <span class="number">340</span> - Count1[<span class="number">6</span>];</span><br><span class="line">        points1[<span class="number">7</span>].X = <span class="number">340</span>; points1[<span class="number">7</span>].Y = <span class="number">340</span> - Count1[<span class="number">7</span>];</span><br><span class="line">        points1[<span class="number">8</span>].X = <span class="number">380</span>; points1[<span class="number">8</span>].Y = <span class="number">340</span> - Count1[<span class="number">8</span>];</span><br><span class="line">        points1[<span class="number">9</span>].X = <span class="number">420</span>; points1[<span class="number">9</span>].Y = <span class="number">340</span> - Count1[<span class="number">9</span>];</span><br><span class="line">        points1[<span class="number">10</span>].X = <span class="number">460</span>; points1[<span class="number">10</span>].Y = <span class="number">340</span> - Count1[<span class="number">10</span>];</span><br><span class="line">        points1[<span class="number">11</span>].X = <span class="number">565</span>; points1[<span class="number">11</span>].Y = <span class="number">340</span> - Count1[<span class="number">11</span>];</span><br><span class="line">        g.DrawLines(mypen2, points1);									<span class="comment">//绘制折线</span></span><br><span class="line">        Pen mypen3 = <span class="keyword">new</span> Pen(Color.Black, <span class="number">2</span>);							<span class="comment">//创建画笔</span></span><br><span class="line">        Point[] points2 = <span class="keyword">new</span> Point[<span class="number">12</span>];</span><br><span class="line">        points2[<span class="number">0</span>].X = <span class="number">60</span>; points2[<span class="number">0</span>].Y = <span class="number">340</span> - Count2[<span class="number">0</span>];</span><br><span class="line">        points2[<span class="number">1</span>].X = <span class="number">100</span>; points2[<span class="number">1</span>].Y = <span class="number">340</span> - Count2[<span class="number">1</span>];</span><br><span class="line">        points2[<span class="number">2</span>].X = <span class="number">140</span>; points2[<span class="number">2</span>].Y = <span class="number">340</span> - Count2[<span class="number">2</span>];</span><br><span class="line">        points2[<span class="number">3</span>].X = <span class="number">180</span>; points2[<span class="number">3</span>].Y = <span class="number">340</span> - Count2[<span class="number">3</span>];</span><br><span class="line">        points2[<span class="number">4</span>].X = <span class="number">220</span>; points2[<span class="number">4</span>].Y = <span class="number">340</span> - Count2[<span class="number">4</span>];</span><br><span class="line">        points2[<span class="number">5</span>].X = <span class="number">260</span>; points2[<span class="number">5</span>].Y = <span class="number">340</span> - Count2[<span class="number">5</span>];</span><br><span class="line">        points2[<span class="number">6</span>].X = <span class="number">300</span>; points2[<span class="number">6</span>].Y = <span class="number">340</span> - Count2[<span class="number">6</span>];</span><br><span class="line">        points2[<span class="number">7</span>].X = <span class="number">340</span>; points2[<span class="number">7</span>].Y = <span class="number">340</span> - Count2[<span class="number">7</span>];</span><br><span class="line">        points2[<span class="number">8</span>].X = <span class="number">380</span>; points2[<span class="number">8</span>].Y = <span class="number">340</span> - Count2[<span class="number">8</span>];</span><br><span class="line">        points2[<span class="number">9</span>].X = <span class="number">420</span>; points2[<span class="number">9</span>].Y = <span class="number">340</span> - Count2[<span class="number">9</span>];</span><br><span class="line">        points2[<span class="number">10</span>].X = <span class="number">460</span>; points2[<span class="number">10</span>].Y = <span class="number">340</span> - Count2[<span class="number">10</span>];</span><br><span class="line">        points2[<span class="number">11</span>].X = <span class="number">565</span>; points2[<span class="number">11</span>].Y = <span class="number">340</span> - Count2[<span class="number">11</span>];</span><br><span class="line">        g.DrawLines(mypen3, points2);									<span class="comment">//绘制折线</span></span><br><span class="line">        <span class="comment">//绘制标识</span></span><br><span class="line">        g.DrawRectangle(<span class="keyword">new</span> Pen(Brushes.Red), <span class="number">150</span>, <span class="number">370</span>, <span class="number">250</span>, <span class="number">50</span>);				<span class="comment">//绘制范围框</span></span><br><span class="line">        g.FillRectangle(Brushes.Red, <span class="number">250</span>, <span class="number">380</span>, <span class="number">20</span>, <span class="number">10</span>);						<span class="comment">//绘制小矩形</span></span><br><span class="line">        g.DrawString(<span class="string">"试用员工人数"</span>, font2, Brushes.Red, <span class="number">270</span>, <span class="number">380</span>);				<span class="comment">//绘制试用员工人数</span></span><br><span class="line">        g.FillRectangle(Brushes.Black, <span class="number">250</span>, <span class="number">400</span>, <span class="number">20</span>, <span class="number">10</span>);						<span class="comment">//绘制小矩形</span></span><br><span class="line">        g.DrawString(<span class="string">"正式员工人数"</span>, font2, Brushes.Black, <span class="number">270</span>, <span class="number">400</span>);				<span class="comment">//绘制正式员工人数</span></span><br><span class="line">        <span class="keyword">this</span>.panel1.BackgroundImage = image;							<span class="comment">//显示绘制的图像</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span></span><br><span class="line">    &#123; &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟010：使用try…catch语句捕获异常。<br>在大部分情况下，开发人员不希望异常状况发生导致程序结束，因此，可以使用try…catch程序语句块捕捉程序中的Exception对象，再使用自定义的程序逻辑处理异常状况。如果有需要，用户也可以使用多重try…catch语句块（如一个try块后跟一个或多个catch子句构成）。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>抓取鼠标形状</title>
    <url>/zh-CN/2019/07/15/csharp%20%E6%8A%93%E5%8F%96%E9%BC%A0%E6%A0%87%E5%BD%A2%E7%8A%B6.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="抓取鼠标形状"><a href="#抓取鼠标形状" class="headerlink" title="抓取鼠标形状"></a>抓取鼠标形状</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>在Windows系统中，用户利用Print Screen SysRq键抓取窗口时，不能够抓取鼠标形状。但在一些抓图软件中，却能够抓取鼠标形状，该功能是如何实现的呢？本实例中实现了抓取鼠标形状的功能，实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/07/2019-07-15-03273151.png" alt=""> 图1 抓取鼠标形状</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例在实现抓取鼠标形状功能时，使用了Cursor类的Draw方法，该方法用来在指定边界内和指定的表面上绘制光标，其语法格式如下：<br>public void Draw ( Graphics g, Rectangle targetRect)<br>参数说明<br>g：要在其上绘制Cursor的Graphics表面。<br>targetRect：代表Cursor限定范围的Rectangle。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为SnatchAtMouse。<br>（2）更改默认窗体Form1的Name属性为Frm_Main。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Main_MouseUp</span>(<span class="params"><span class="keyword">object</span> sender, MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Graphics myGraphics = <span class="keyword">this</span>.CreateGraphics();				<span class="comment">//创建窗体的Graphics对象</span></span><br><span class="line">    Cursor.Draw(myGraphics, <span class="keyword">new</span> Rectangle(e.X, e.Y, <span class="number">10</span>, <span class="number">10</span>));		<span class="comment">//调用Cursor类的Draw方法抓取鼠标形状</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟003：用窗体的CreateGraphics方法创建Graphics对象。<br>在程序中绘图时，可以调用窗体的CreateGraphics方法来获取对Graphics对象的引用，该对象表示窗体的绘图画面。<br>例如，本实例中创建Graphics对象的代码如下：<br>~ Graphics graphics = this.CreateGraphics( ); //创建窗体的Graphics对象~</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>提取网页标题</title>
    <url>/zh-CN/2019/10/03/csharp%20%E6%8F%90%E5%8F%96%E7%BD%91%E9%A1%B5%E6%A0%87%E9%A2%98.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="提取网页标题"><a href="#提取网页标题" class="headerlink" title="提取网页标题"></a>提取网页标题</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>本实例实现了根据网址提取HTML网页标题的功能。运行程序，在文本框中输入正确的网址，单击”提取”按钮，即可将网页的标题显示在下面的文本框中。运行结果如图1所示。</p>
<p><img data-src="https://cdn.fesugar.com/2019/10/100319_0839_1-1.png" alt=""></p>
<p>图1 提取网页标题</p>
<h3 id="技术要点"><a href="#技术要点" class="headerlink" title="技术要点"></a>技术要点</h3><p>实现本实例功能主要用到了<br>System.Net命名空间下的<br>WebRequest类的Create方法、GetResponse方法、<br>WebResponse类的GetResponseStream方法、<br>StreamReader System.Text.RegularExpressions命名空间下的Regex类的IsMatch方法、Match方法、<br>System.IO命名空间下的StreamReader类的ReadLine方法和Stream类。<br>System.Net命名空间下的类和方法、system.Text.RegularExpressions命名空间下类和方法在前面已经做过介绍，详细说明请参见实例515。<br>这里主要讲解一下Regex类的Match方法、System.IO命名空间下的StreamReader类和Stream类。 </p>
<a id="more"></a>
<p>（1）Match方法 此方法在指定的输入字符串中搜索pattern参数中提供的正则表达式的匹配项。其语法格式如下：</p>
<p>public static Match Match (string input,string pattern)</p>
<p>参数说明如下。</p>
<p>l input：要搜索匹配项的字符串。</p>
<p>l pattern：要匹配的正则表达式模式。</p>
<p>l 返回值：一个正则表达式的Match对象。</p>
<p>（2）System.IO命名空间 System.IO命名空间包含允许读写文件和数据流的类型以及提供基本文件和目录支持的类型。<br>（3）StreamReader类 此类实现一个TextReader，使其以一种特定的编码从字节流中读取字符。<br>（4）ReadLine方法  此方法从当前流中读取一行字符并将数据作为字符串返回。其语法格式如下：</p>
<p>public override string ReadLine ()</p>
<p>l 返回值：输入流中的下一行；如果到达了输入流的末尾，则为空引用。</p>
<p>（5）Stream类  此类提供字节序列的一般视图。</p>
<h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><p>（1）新建一个Windows应用程序，将其命名为”提取网页标题”，默认窗体为Form1。 （2）在Form1窗体中主要添加两个TextBox控件，用于输入网址和显示网页标题信息；添加一个Button控件，用来执行提取网页标题信息的操作。<br>（3）主要程序代码。 提取网页标题的实现代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (textBox1.Text == <span class="string">""</span>)                                        <span class="comment">//如果文本框为空</span></span><br><span class="line"></span><br><span class="line">    &#123; MessageBox.Show(<span class="string">"请输入网址"</span>); <span class="keyword">return</span>; &#125;                        <span class="comment">//提示输入网址</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (ValidateDate1(textBox1.Text.TrimEnd()))</span><br><span class="line"></span><br><span class="line">        &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">string</span> strl;                                        <span class="comment">//存储编码</span></span><br><span class="line"></span><br><span class="line">            WebRequest wb = WebRequest.Create(textBox1.Text.Trim());    <span class="comment">//请求资源</span></span><br><span class="line"></span><br><span class="line">            WebResponse webRed = wb.GetResponse();                <span class="comment">//响应请求</span></span><br><span class="line"></span><br><span class="line">            Stream redweb = webRed.GetResponseStream();            <span class="comment">//返回数据存入流中</span></span><br><span class="line"></span><br><span class="line">            StreamReader sr = <span class="keyword">new</span> StreamReader(redweb, Encoding.Default);     <span class="comment">//从流中读出数据</span></span><br><span class="line"></span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();                    <span class="comment">//可变字符</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">while</span> ((strl = sr.ReadLine()) != <span class="literal">null</span>)</span><br><span class="line"></span><br><span class="line">            &#123;</span><br><span class="line"></span><br><span class="line">                sb.Append(strl);                                <span class="comment">//读出数据存入可变字符中</span></span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            Getstr(sb.ToString());                                <span class="comment">//调用正则表达式方法读出标题</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> &#123; MessageBox.Show(<span class="string">"请输入正确的网址"</span>); <span class="keyword">return</span>; &#125;;            <span class="comment">//网址不合法则提示输入正确网址</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>自定义方法Getstr用来实现提取网页标题功能。代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Getstr</span>(<span class="params"><span class="keyword">string</span> strUrl</span>)                                    <span class="comment">//自定义方法用于获取网页标题</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">string</span> d = <span class="string">@"&lt;title&gt;(?&lt;title&gt;[^&lt;]*)&lt;/title&gt;"</span>;                         <span class="comment">//设置提取的类型</span></span><br><span class="line"></span><br><span class="line">    textBox2.Text = Regex.Match(strUrl, d).ToString();                <span class="comment">//获取网页标题</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
  </entry>
  <entry>
    <title>C# 数组转为 Table</title>
    <url>/zh-CN/2016/07/01/csharp%20%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BA%20Table.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<p>C# 数组转为table的实例。</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WindowsFormsApplication1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//http://www.cnblogs.com/Holmes-Jin/archive/2012/04/25/2470671.html</span></span><br><span class="line"> </span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Form1</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click_1</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            dataGridView1.DataSource = ArrayToDataTable.Convert(<span class="string">"haha"</span>, <span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"1"</span>, <span class="string">"2"</span>, <span class="string">"3"</span>, <span class="string">"4"</span>, <span class="string">"5"</span>, <span class="string">"6"</span> &#125;);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button2_Click_1</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span>[,] array3D = &#123;   </span><br><span class="line">                                        &#123; <span class="string">"1"</span>, <span class="string">"数组转DataTable 1"</span>, <span class="string">"0"</span>&#125;,   </span><br><span class="line">                                        &#123; <span class="string">"2"</span>, <span class="string">"数组转DataTable 2"</span>, <span class="string">"1"</span>&#125;,   </span><br><span class="line">                                        &#123; <span class="string">"3"</span>, <span class="string">"数组转DataTable 3"</span>, <span class="string">"1"</span>&#125;,   </span><br><span class="line">                                        &#123; <span class="string">"4"</span>, <span class="string">"数组转DataTable 4"</span>, <span class="string">"2"</span>&#125;,   </span><br><span class="line">                                        &#123; <span class="string">"5"</span>, <span class="string">"数组转DataTable 5"</span>, <span class="string">"2"</span>&#125;,   </span><br><span class="line">                                        &#123; <span class="string">"6"</span>, <span class="string">"数组转DataTable 6"</span>, <span class="string">"5"</span>&#125;,   </span><br><span class="line">                                        &#125;;</span><br><span class="line">            dataGridView1.DataSource = ArrayToDataTable.Convert(<span class="keyword">new</span> <span class="keyword">string</span>[] &#123; <span class="string">"haha1"</span>, <span class="string">"haha2"</span>, <span class="string">"haha3"</span> &#125;, array3D);</span><br><span class="line">        &#125;  </span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title">ArrayToDataTable</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 把一个一维数组转换为DataTable  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="ColumnName"&gt;</span>列名<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Array"&gt;</span>一维数组<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回DataTable<span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;remarks&gt;</span>柳永法 http://www.yongfa365.com/ <span class="doctag">&lt;/remarks&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">Convert</span>(<span class="params"><span class="keyword">string</span> ColumnName, <span class="keyword">string</span>[] Array</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line">            dt.Columns.Add(ColumnName, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Array.Length; i++)</span><br><span class="line">            &#123;</span><br><span class="line">                DataRow dr = dt.NewRow();</span><br><span class="line">                dr[ColumnName] = Array[i].ToString();</span><br><span class="line">                dt.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dt;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 反一个M行N列的二维数组转换为DataTable  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="ColumnNames"&gt;</span>一维数组，代表列名，不能有重复值<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Arrays"&gt;</span>M行N列的二维数组<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回DataTable<span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;remarks&gt;</span>柳永法 http://www.yongfa365.com/ <span class="doctag">&lt;/remarks&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">Convert</span>(<span class="params"><span class="keyword">string</span>[] ColumnNames, <span class="keyword">string</span>[,] Arrays</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">string</span> ColumnName <span class="keyword">in</span> ColumnNames)</span><br><span class="line">            &#123;</span><br><span class="line">                dt.Columns.Add(ColumnName, <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">0</span>; i1 &lt; Arrays.GetLength(<span class="number">0</span>); i1++)</span><br><span class="line">            &#123;</span><br><span class="line">                DataRow dr = dt.NewRow();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ColumnNames.Length; i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    dr[i] = Arrays[i1, i].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                dt.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dt;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 反一个M行N列的二维数组转换为DataTable  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="Arrays"&gt;</span>M行N列的二维数组<span class="doctag">&lt;/param&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>返回DataTable<span class="doctag">&lt;/returns&gt;</span>  </span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;remarks&gt;</span>柳永法 http://www.yongfa365.com/ <span class="doctag">&lt;/remarks&gt;</span>  </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> DataTable <span class="title">Convert</span>(<span class="params"><span class="keyword">string</span>[,] Arrays</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            DataTable dt = <span class="keyword">new</span> DataTable();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> a = Arrays.GetLength(<span class="number">0</span>);</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Arrays.GetLength(<span class="number">1</span>); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                dt.Columns.Add(<span class="string">"col"</span> + i.ToString(), <span class="keyword">typeof</span>(<span class="keyword">string</span>));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i1 = <span class="number">0</span>; i1 &lt; Arrays.GetLength(<span class="number">0</span>); i1++)</span><br><span class="line">            &#123;</span><br><span class="line">                DataRow dr = dt.NewRow();</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; Arrays.GetLength(<span class="number">1</span>); i++)</span><br><span class="line">                &#123;</span><br><span class="line">                    dr[i] = Arrays[i1, i].ToString();</span><br><span class="line">                &#125;</span><br><span class="line">                dt.Rows.Add(dr);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> dt;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 无边框窗体的移动</title>
    <url>/zh-CN/2016/07/04/csharp%20%E6%97%A0%E8%BE%B9%E6%A1%86%E7%AA%97%E4%BD%93%E7%9A%84%E7%A7%BB%E5%8A%A8.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<p>实现无边框窗体的移动</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;  </span><br><span class="line"></span><br><span class="line">namespace Example013_无标题窗体的拖动</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">            <span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="comment">// Form1</span></span><br><span class="line">            <span class="comment">// </span></span><br><span class="line">            <span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">            <span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">273</span>);</span><br><span class="line">            <span class="keyword">this</span>.FormBorderStyle = System.Windows.Forms.FormBorderStyle.None;</span><br><span class="line">            <span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">            <span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">            <span class="keyword">this</span>.MouseDown += <span class="keyword">new</span> System.Windows.Forms.MouseEventHandler(<span class="keyword">this</span>.Form1_MouseDown);</span><br><span class="line">            <span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">ReleaseCapture</span>(<span class="params"></span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">SendMessage</span>(<span class="params">IntPtr hwnd,<span class="keyword">int</span> wMsg,<span class="keyword">int</span> wParam,<span class="keyword">int</span> lParam</span>)</span>;</span><br><span class="line">																																						 </span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> WM_SYSCOMMAND=<span class="number">0x0112</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> SC_MOVE=<span class="number">0xF010</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> HTCAPTION=<span class="number">0x0002</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_MouseDown</span>(<span class="params"><span class="keyword">object</span> sender, System.Windows.Forms.MouseEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			ReleaseCapture();</span><br><span class="line">			SendMessage(<span class="keyword">this</span>.Handle,WM_SYSCOMMAND,SC_MOVE+HTCAPTION, <span class="number">0</span>); </span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-07511010.png" alt="QQ图片20160704154934"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 显示空心文字效果</title>
    <url>/zh-CN/2016/07/04/csharp%20%E6%98%BE%E7%A4%BA%E7%A9%BA%E5%BF%83%E6%96%87%E5%AD%97%E6%95%88%E6%9E%9C.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<p>显示空心字的实现方法</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line">namespace Example040_空心字体效果演示</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.Button button1;</span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.TextBox textBox1;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.button1 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line">			<span class="keyword">this</span>.textBox1 = <span class="keyword">new</span> System.Windows.Forms.TextBox();</span><br><span class="line">			<span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// button1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.button1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">24</span>, <span class="number">104</span>);</span><br><span class="line">			<span class="keyword">this</span>.button1.Name = <span class="string">"button1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">97</span>, <span class="number">23</span>);</span><br><span class="line">			<span class="keyword">this</span>.button1.TabIndex = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Text = <span class="string">"View"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.button1_Click);</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// textBox1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.textBox1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">24</span>, <span class="number">80</span>);</span><br><span class="line">			<span class="keyword">this</span>.textBox1.Name = <span class="string">"textBox1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.textBox1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">96</span>, <span class="number">21</span>);</span><br><span class="line">			<span class="keyword">this</span>.textBox1.TabIndex = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">this</span>.textBox1.Text = <span class="string">"textBox1"</span>;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">152</span>, <span class="number">141</span>);</span><br><span class="line">			<span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> System.Windows.Forms.Control[] &#123;</span><br><span class="line">																		  <span class="keyword">this</span>.textBox1,</span><br><span class="line">																		  <span class="keyword">this</span>.button1&#125;);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateFont</span>(<span class="params"><span class="keyword">int</span> H,<span class="keyword">int</span> W,<span class="keyword">int</span> E,<span class="keyword">int</span> O,<span class="keyword">int</span> FW,<span class="keyword">int</span> I,<span class="keyword">int</span> u,<span class="keyword">int</span> S,<span class="keyword">int</span> C,<span class="keyword">int</span> OP,<span class="keyword">int</span> CP,<span class="keyword">int</span> Q,<span class="keyword">int</span> PAF,<span class="keyword">string</span> F</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">BeginPath</span>(<span class="params">IntPtr hdc</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">EndPath</span>(<span class="params">IntPtr hdc</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">SetBkMode</span>(<span class="params">IntPtr hdc,<span class="keyword">int</span> nBkMode</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">StrokePath</span>(<span class="params">IntPtr hdc</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">TextOut</span>(<span class="params">IntPtr hdc,<span class="keyword">int</span> x,<span class="keyword">int</span> y,<span class="keyword">string</span> lpString,<span class="keyword">int</span> nCount</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"gdi32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">SelectObject</span>(<span class="params">IntPtr hdc,IntPtr hObject</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"user32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">GetDC</span>(<span class="params">IntPtr hwnd</span>)</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> FW_HEAVY = <span class="number">900</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> ANSI_CHARSET = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> OUT_DEFAULT_PRECIS = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> CLIP_DEFAULT_PRECIS = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> DEFAULT_QUALITY = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> DEFAULT_PITCH = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> FF_SWISS = <span class="number">32</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> TRANSPARENT = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			IntPtr dc=GetDC(<span class="keyword">this</span>.Handle);</span><br><span class="line">			IntPtr m_Font=CreateFont(<span class="number">50</span>, <span class="number">20</span>, <span class="number">0</span>, <span class="number">0</span>, FW_HEAVY, <span class="number">1</span>, <span class="number">0</span>,</span><br><span class="line">				<span class="number">0</span>, ANSI_CHARSET, OUT_DEFAULT_PRECIS,</span><br><span class="line">				CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY,</span><br><span class="line">				DEFAULT_PITCH | FF_SWISS, <span class="string">"Times New Roman"</span>);</span><br><span class="line">			<span class="comment">//创建字体</span></span><br><span class="line">			<span class="comment">//这里的字体一定要是TrueType Font</span></span><br><span class="line"></span><br><span class="line">			BeginPath(dc);</span><br><span class="line">			<span class="comment">//开始捕获轮廓</span></span><br><span class="line">			SetBkMode(dc, TRANSPARENT );</span><br><span class="line">			IntPtr m_OldFont=SelectObject(dc,m_Font);</span><br><span class="line">			TextOut(dc,<span class="number">10</span>,<span class="number">0</span>,<span class="keyword">this</span>.textBox1.Text,<span class="keyword">this</span>.textBox1.Text.Length);</span><br><span class="line">			SelectObject(dc,m_OldFont);</span><br><span class="line">			EndPath(dc);</span><br><span class="line">			<span class="comment">//结束捕获</span></span><br><span class="line">			StrokePath(dc);</span><br><span class="line">			<span class="comment">//将捕获的轮廓用当前的Pen画到Canvas上		</span></span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-08485247.png" alt="QQ图片20160704164551"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 显示阴影效果文字</title>
    <url>/zh-CN/2016/07/04/csharp%20%E6%98%BE%E7%A4%BA%E9%98%B4%E5%BD%B1%E6%95%88%E6%9E%9C%E6%96%87%E5%AD%97.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<p>阴影文字实现方法</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line">namespace Example037_阴影效果的文字</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">273</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Paint += <span class="keyword">new</span> System.Windows.Forms.PaintEventHandler(<span class="keyword">this</span>.Form1_Paint);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Paint</span>(<span class="params"><span class="keyword">object</span> sender, System.Windows.Forms.PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Graphics g=e.Graphics; </span><br><span class="line">			Font myFont;</span><br><span class="line">			myFont=<span class="keyword">new</span> Font(<span class="string">"SansSerif"</span>,<span class="number">40</span>); </span><br><span class="line">			</span><br><span class="line">			SolidBrush textShadowBrush = <span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">70</span>, Color.Blue));</span><br><span class="line"></span><br><span class="line">			g.DrawString(<span class="string">"Hello C#"</span>,myFont,Brushes.Blue, <span class="number">25</span>, <span class="number">25</span> );</span><br><span class="line">			g.DrawString(<span class="string">"Hello C#"</span>,myFont,textShadowBrush, <span class="number">30</span>, <span class="number">30</span>);</span><br><span class="line">			<span class="comment">//显示带阴影的文字</span></span><br><span class="line">		</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-0823584.png" alt="QQ图片20160704162322"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 模拟按键操作</title>
    <url>/zh-CN/2016/07/05/csharp%20%E6%A8%A1%E6%8B%9F%E6%8C%89%E9%94%AE%E6%93%8D%E4%BD%9C.html</url>
    <content><![CDATA[<p>在控件获取焦点的情况下模拟按键操作</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line">namespace Example108_模拟键盘操作</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.RichTextBox richTextBox1;</span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.Button button1;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1 = <span class="keyword">new</span> System.Windows.Forms.RichTextBox();</span><br><span class="line">			<span class="keyword">this</span>.button1 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line">			<span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// richTextBox1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">8</span>, <span class="number">8</span>);</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.Name = <span class="string">"richTextBox1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.Size = <span class="keyword">new</span> System.Drawing.Size(<span class="number">248</span>, <span class="number">160</span>);</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.TabIndex = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.Text = <span class="string">"richTextBox1"</span>;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// button1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.button1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">184</span>, <span class="number">176</span>);</span><br><span class="line">			<span class="keyword">this</span>.button1.Name = <span class="string">"button1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.TabIndex = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Text = <span class="string">"Key"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.button1_Click);</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">264</span>, <span class="number">205</span>);</span><br><span class="line">			<span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> System.Windows.Forms.Control[] &#123;</span><br><span class="line">																		  <span class="keyword">this</span>.button1,</span><br><span class="line">																		  <span class="keyword">this</span>.richTextBox1&#125;);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.richTextBox1.Focus();</span><br><span class="line">			SendKeys.Send(<span class="string">"^a"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"&#123;DEL&#125;"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"+(ec)"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"&#123;ENTER&#125;"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"+ec"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"&#123;ENTER&#125;"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"&#123;h 10&#125;"</span>);</span><br><span class="line">			SendKeys.Send(<span class="string">"&#123;ENTER&#125;"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-05-01284473.png" alt="C# 模拟按键操作"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 模拟鼠标</title>
    <url>/zh-CN/2016/07/04/csharp%20%E6%A8%A1%E6%8B%9F%E9%BC%A0%E6%A0%87.html</url>
    <content><![CDATA[<p>模拟鼠标进行操作</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line">namespace Example107_模拟鼠标</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.button1 = <span class="keyword">new</span> System.Windows.Forms.Button();</span><br><span class="line">			<span class="keyword">this</span>.SuspendLayout();</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// button1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.button1.Location = <span class="keyword">new</span> System.Drawing.Point(<span class="number">144</span>, <span class="number">176</span>);</span><br><span class="line">			<span class="keyword">this</span>.button1.Name = <span class="string">"button1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.TabIndex = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Text = <span class="string">"Mouse"</span>;</span><br><span class="line">			<span class="keyword">this</span>.button1.Click += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.button1_Click);</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">280</span>, <span class="number">237</span>);</span><br><span class="line">			<span class="keyword">this</span>.Controls.AddRange(<span class="keyword">new</span> System.Windows.Forms.Control[] &#123;</span><br><span class="line">																		  <span class="keyword">this</span>.button1&#125;);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.DoubleClick += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_DoubleClick);</span><br><span class="line">			<span class="keyword">this</span>.ResumeLayout(<span class="literal">false</span>);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.Button button1;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"user32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">mouse_event</span>(<span class="params"><span class="keyword">int</span> dwFlags,<span class="keyword">int</span> dx,<span class="keyword">int</span> dy, <span class="keyword">int</span> cButtons, <span class="keyword">int</span> dwExtraInfo</span>)</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_MOVE = <span class="number">0x0001</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_LEFTDOWN = <span class="number">0x0002</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_LEFTUP = <span class="number">0x0004</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_RIGHTDOWN = <span class="number">0x0008</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_RIGHTUP = <span class="number">0x0010</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_MIDDLEDOWN = <span class="number">0x0020</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_MIDDLEUP = <span class="number">0x0040</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> MOUSEEVENTF_ABSOLUTE = <span class="number">0x8000</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_DoubleClick</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			MessageBox.Show(<span class="string">"Double Click"</span>);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">button1_Click</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			mouse_event(MOUSEEVENTF_MOVE,<span class="number">-10</span>,<span class="number">-10</span>,<span class="number">0</span>,<span class="number">0</span>);		</span><br><span class="line">			mouse_event(MOUSEEVENTF_LEFTDOWN,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">			mouse_event(MOUSEEVENTF_LEFTUP,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);		</span><br><span class="line">			mouse_event(MOUSEEVENTF_LEFTDOWN,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">			mouse_event(MOUSEEVENTF_LEFTUP,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);				</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-09002511.png" alt="QQ图片20160704165622"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 渐变的窗体背景</title>
    <url>/zh-CN/2016/07/04/csharp%20%E6%B8%90%E5%8F%98%E7%9A%84%E7%AA%97%E4%BD%93%E8%83%8C%E6%99%AF.html</url>
    <content><![CDATA[<p>窗体渐变背景代码实例</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Drawing.Drawing2D; </span><br><span class="line"></span><br><span class="line">namespace Example010_渐变的窗口背景</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">273</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Resize += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Resize);</span><br><span class="line">			<span class="keyword">this</span>.Paint += <span class="keyword">new</span> System.Windows.Forms.PaintEventHandler(<span class="keyword">this</span>.Form1_Paint);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Paint</span>(<span class="params"><span class="keyword">object</span> sender, System.Windows.Forms.PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Graphics g=e.Graphics;</span><br><span class="line">			Color FColor=Color.Blue;</span><br><span class="line">			Color TColor=Color.Yellow;</span><br><span class="line">			Brush b =<span class="keyword">new</span> LinearGradientBrush(<span class="keyword">this</span>.ClientRectangle, FColor, TColor, LinearGradientMode.ForwardDiagonal);</span><br><span class="line">			g.FillRectangle(b,<span class="keyword">this</span>.ClientRectangle);</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Resize</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.Invalidate();</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-07420661.png" alt="QQ图片20160704154023"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>csharp 网站人气指数曲线分析</title>
    <url>/zh-CN/2019/04/16/csharp%20%E7%BD%91%E7%AB%99%E4%BA%BA%E6%B0%94%E6%8C%87%E6%95%B0%E6%9B%B2%E7%BA%BF%E5%88%86%E6%9E%90.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="网站人气指数曲线分析"><a href="#网站人气指数曲线分析" class="headerlink" title="网站人气指数曲线分析"></a>网站人气指数曲线分析</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>网站访问量可以决定网站的人气，那么对网站月访问量的统计分析，可以让网站管理员准确地判断网民上网的需求周期，从而调整网站的内容，更好地为广大网民服务。本实例通过对数据库中的数据进行分析，将每月份网站访问量以折线形式反映给用户。<br>实例运行效果如图1所示。<br><img data-src="https://cdn.fesugar.com/2019/04/2019-04-16-03090799.png" alt=""> 图1 网站人气指数曲线分析</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例主要使用Graphics类的DrawLines方法来绘制网站人气指数曲线图。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为SiteVisterAnalyse。<br>（2）更改默认窗体Form1的Name属性为Frm_Main，在该窗体中添加一个Panel控件，用于显示绘制的网站人气指数折线图。<br>（3）程序主要代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">drowPic</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Graphics g = <span class="keyword">this</span>.CreateGraphics();								<span class="comment">//创建Graphics对象</span></span><br><span class="line">    g.Clear(Color.WhiteSmoke);									<span class="comment">//设置背景色</span></span><br><span class="line">    Pen p = <span class="keyword">new</span> Pen(Color.Blue);									<span class="comment">//绘制画笔</span></span><br><span class="line">    <span class="comment">//设置用到的字体</span></span><br><span class="line">    Font fontO = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"Arial"</span>, <span class="number">9</span>, FontStyle.Regular);</span><br><span class="line">    Font fontT = <span class="keyword">new</span> System.Drawing.Font(<span class="string">"华文新魏"</span>, <span class="number">16</span>, FontStyle.Regular);</span><br><span class="line">    Point pointStart = <span class="keyword">new</span> Point(<span class="number">0</span>, <span class="number">0</span>);								<span class="comment">//绘制边框与显示字体</span></span><br><span class="line">    Size sizeWindows = <span class="keyword">new</span> Size(<span class="keyword">this</span>.Width - <span class="number">8</span>, <span class="keyword">this</span>.Height - <span class="number">34</span>);				<span class="comment">//创建Size对象</span></span><br><span class="line">    Rectangle rect = <span class="keyword">new</span> Rectangle(pointStart, sizeWindows);				<span class="comment">//创建Rectangle对象</span></span><br><span class="line">    g.DrawRectangle(p, rect);									<span class="comment">//绘制矩形</span></span><br><span class="line">    Brush brus = <span class="keyword">new</span> SolidBrush(Color.Red);							<span class="comment">//创建笔刷</span></span><br><span class="line">    g.DrawString(<span class="string">"网站人气指数曲线分析"</span>, fontT, brus, <span class="keyword">this</span>.Width / <span class="number">2.00f</span> - <span class="number">150</span>, <span class="number">10.00f</span>);</span><br><span class="line">    <span class="comment">//绘制网格线</span></span><br><span class="line">    <span class="keyword">int</span> x = <span class="keyword">this</span>.Width / <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> y = <span class="keyword">this</span>.Height / <span class="number">14</span>;</span><br><span class="line">    <span class="keyword">int</span> z = <span class="keyword">this</span>.Width / <span class="number">10</span>;</span><br><span class="line">    <span class="keyword">int</span> k = y * <span class="number">12</span>;</span><br><span class="line">    <span class="comment">//X</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawLine(p, x, y * <span class="number">3</span> - <span class="number">10</span>, x, y * <span class="number">12</span>);							<span class="comment">//绘制水平线条</span></span><br><span class="line">        x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//X轴</span></span><br><span class="line">    String[] n = &#123;<span class="string">" 1月"</span>, <span class="string">" 2月"</span>, <span class="string">" 3月"</span>, <span class="string">" 4月"</span>, <span class="string">" 5月"</span>, <span class="string">" 6月"</span>, <span class="string">" 7月"</span>,</span><br><span class="line">     <span class="string">" 8月"</span>, <span class="string">" 9月"</span>, <span class="string">"10月"</span>, <span class="string">"11月"</span>, <span class="string">"12月"</span>&#125;;						<span class="comment">//绘制月份</span></span><br><span class="line">    x = <span class="keyword">this</span>.Width / <span class="number">10</span> - <span class="number">16</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawString(n[i].ToString(), fontO, Brushes.Red, x, y * <span class="number">12</span>);			<span class="comment">//设置文字内容及输出位置</span></span><br><span class="line">        x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Y</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">12</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawLine(p, z, k, x + <span class="number">10</span>, k);								<span class="comment">//绘制垂直线条</span></span><br><span class="line">        k = k - (y * <span class="number">12</span>) / <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//Y轴</span></span><br><span class="line">    <span class="keyword">int</span> h = k;</span><br><span class="line">    String[] m = &#123;<span class="string">"5565"</span>,<span class="string">"5650"</span>,<span class="string">"4565"</span>, <span class="string">"4000"</span>, <span class="string">"3565"</span>, <span class="string">"3000"</span>, <span class="string">"2565"</span>, <span class="string">"2000"</span>, <span class="string">"1565"</span>, <span class="string">"1000"</span>,</span><br><span class="line">     <span class="string">"  565"</span>&#125;;											<span class="comment">//绘制Y轴显示的文字</span></span><br><span class="line">    k = y * <span class="number">12</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">11</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawString(m[<span class="number">10</span> - i].ToString(), fontO, Brushes.Red, z - <span class="number">35</span>, k - y);		<span class="comment">//开始绘制文字</span></span><br><span class="line">        k = k - (y * <span class="number">12</span>) / <span class="number">16</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span>[] Count = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">12</span>];</span><br><span class="line">    Pen mypen = <span class="keyword">new</span> Pen(Color.Red, <span class="number">2</span>);							<span class="comment">//创建画笔</span></span><br><span class="line">    Point[] points = <span class="keyword">new</span> Point[<span class="number">12</span>];</span><br><span class="line">    x = <span class="keyword">this</span>.Width / <span class="number">10</span>;</span><br><span class="line">    k = y * <span class="number">12</span>;</span><br><span class="line">    SqlConnection Con = <span class="keyword">new</span> SqlConnection(<span class="string">"Server=mrwxk\\\wangxiaoke;DataBase=db_TomeOne;Uid=sa;Pwd="</span>);</span><br><span class="line">    <span class="keyword">string</span> cmdtxt2 = <span class="string">"SELECT * FROM tb_reticulation"</span>;					<span class="comment">//声明SQL语句</span></span><br><span class="line">    SqlCommand Com1 = <span class="keyword">new</span> SqlCommand(cmdtxt2, Con);					<span class="comment">//创建SqlCommand对象</span></span><br><span class="line">    SqlDataAdapter da = <span class="keyword">new</span> SqlDataAdapter();						<span class="comment">//创建SqlDataAdapter对象</span></span><br><span class="line">    da.SelectCommand = Com1;</span><br><span class="line">    DataSet ds = <span class="keyword">new</span> DataSet();									<span class="comment">//创建DataSet对象</span></span><br><span class="line">    da.Fill(ds);											<span class="comment">//Fill方法填充DataSet对象</span></span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">12</span>; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//与Y轴数生成有关(y * 12)/16因为起始为565</span></span><br><span class="line">        Count[j] = Convert.ToInt32(ds.Tables[<span class="number">0</span>].Rows[<span class="number">0</span>][j + <span class="number">2</span>].ToString()) * (y * <span class="number">12</span>) / <span class="number">16</span> / <span class="number">565</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//设置绘制曲线的坐标数组</span></span><br><span class="line">    points[<span class="number">0</span>].X = x; points[<span class="number">0</span>].Y = k - Count[<span class="number">0</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">1</span>].X = x; points[<span class="number">1</span>].Y = k - Count[<span class="number">1</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">2</span>].X = x; points[<span class="number">2</span>].Y = k - Count[<span class="number">2</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">3</span>].X = x; points[<span class="number">3</span>].Y = k - Count[<span class="number">3</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">4</span>].X = x; points[<span class="number">4</span>].Y = k - Count[<span class="number">4</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">5</span>].X = x; points[<span class="number">5</span>].Y = k - Count[<span class="number">5</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">6</span>].X = x; points[<span class="number">6</span>].Y = k - Count[<span class="number">6</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">7</span>].X = x; points[<span class="number">7</span>].Y = k - Count[<span class="number">7</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">8</span>].X = x; points[<span class="number">8</span>].Y = k - Count[<span class="number">8</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">9</span>].X = x; points[<span class="number">9</span>].Y = k - Count[<span class="number">9</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">10</span>].X = x; points[<span class="number">10</span>].Y = k - Count[<span class="number">10</span>];</span><br><span class="line">    x = x + (<span class="keyword">this</span>.Width - <span class="number">34</span>) / <span class="number">14</span>;</span><br><span class="line">    points[<span class="number">11</span>].X = x; points[<span class="number">11</span>].Y = k - Count[<span class="number">11</span>];</span><br><span class="line">    g.DrawLines(mypen, points);									<span class="comment">//绘制折线</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟011：使用DataSet对象作为数据集。<br>DataSet对象是ADO.NET的核心成员，它是支持ADO.NET断开式、分布式数据方案的核心对象，也是实现基于非连接的数据查询的核心组件。DataSet对象是创建在内存中的集合对象，它可以包含任意数量的数据表以及所有表的约束、索引和关系等，它实质上相当于在内存中的一个小型关系数据库。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 窗口渐显</title>
    <url>/zh-CN/2016/07/04/csharp%20%E7%AA%97%E5%8F%A3%E6%B8%90%E6%98%BE.html</url>
    <content><![CDATA[<p>窗口渐显实现的效果</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Example002</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">private</span> System.Windows.Forms.Timer timer1;</span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.IContainer components;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.components = <span class="keyword">new</span> System.ComponentModel.Container();</span><br><span class="line">			<span class="keyword">this</span>.timer1 = <span class="keyword">new</span> System.Windows.Forms.Timer(<span class="keyword">this</span>.components);</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// timer1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.timer1.Tick += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.timer1_Tick);</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">256</span>, <span class="number">141</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Opacity = <span class="number">0.5</span>;</span><br><span class="line">			<span class="keyword">this</span>.StartPosition = System.Windows.Forms.FormStartPosition.CenterScreen;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">this</span>.timer1.Enabled=<span class="literal">true</span>;</span><br><span class="line">			<span class="keyword">this</span>.Opacity=<span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">timer1_Tick</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="keyword">this</span>.Opacity&lt;<span class="number">1</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">this</span>.Opacity=<span class="keyword">this</span>.Opacity+<span class="number">0.05</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">this</span>.timer1.Enabled=<span class="literal">false</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-04-0736229.png" alt="QQ图片20160704153514"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>美化单选按钮控件</title>
    <url>/zh-CN/2019/10/03/csharp%20%E7%BE%8E%E5%8C%96%E5%8D%95%E9%80%89%E6%8C%89%E9%92%AE%E6%8E%A7%E4%BB%B6.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://renwu.mingrisoft.com/" target="_blank" rel="external nofollow">明日科技</a></li>
</div>

<h2 id="美化单选按钮控件"><a href="#美化单选按钮控件" class="headerlink" title="美化单选按钮控件"></a>美化单选按钮控件</h2><h3 id="实例说明"><a href="#实例说明" class="headerlink" title="实例说明"></a>实例说明</h3><p>用户使用C#自带的控件制作应用程序时，为了使界面更加美观，更具有特色，可以对控件的样式进行重绘，本实例将对单选按钮控件进行重绘，以用户自定义样式进行显示。实例运行效果如图1所示。</p>
<p><img data-src="https://cdn.fesugar.com/2019/10/100319_0816_1.png" alt=""></p>
<p>图1 美化单选按钮控件</p>
<h3 id="关键技术"><a href="#关键技术" class="headerlink" title="关键技术"></a>关键技术</h3><p>本实例在美化单选按钮控件时，主要是通过重绘单选框实现的，具体实现时，首先需要创建用户控件，然后在用户控件中使用Graphics类的DrawEllipse方法和FillEllipse方法实现重绘单选框操作。下面对本实例中用到的关键技术进行详细讲解。 </p>
<a id="more"></a>
<p>（1）创建用户控件并使用 创建用户控件的步骤如下：<br>①选中当前项目，单击右键，在弹出的快捷菜单中选择”添加”/“新建项”命令，弹出如图2所示的”添加新项”对话框。</p>
<p><img data-src="https://cdn.fesugar.com/2019/10/100319_0816_2.png" alt=""></p>
<p>图2 “添加新项”对话框<br>②在图2所示对话框中找到”用户控件”并选中，在”名称”文本框中输入用户控件的名称，单击”添加”按钮，即可在当前项目中添加一个用户控件，如图3所示。</p>
<p><img data-src="https://cdn.fesugar.com/2019/10/100319_0816_3.png" alt=""></p>
<p>图3 添加的用户控件<br>③在用户控件中，如果需要添加Windows标准控件，可以从”工具箱”中直接拖放使用；如果需要编写代码，则单击”单击此处切换到代码视图”超级链接，进入后台代码视图，以便编写所需的代码。<br>④用户控件制作完成后，选中制作完成的用户控件，用鼠标将其拖拽到工具箱中，如图4所示。</p>
<p><img data-src="https://cdn.fesugar.com/2019/10/100319_0816_4.png" alt=""></p>
<p>图4 将用户控件拖拽到工具箱中<br>⑤最后就可以像使用Windows标准控件一样，对用户控件进行拖拽使用了。<br>（2）DrawEllipse方法<br>DrawEllipse方法用来绘制一个由边框（该边框由一对坐标、高度和宽度指定）定义的椭圆，该方法有4种重载形式，本实例中用到的它的重载形式如下：</p>
<p>public void DrawEllipse(Pen pen,Rectangle rect)</p>
<p>参数说明 R pen：Pen对象，它确定曲线的颜色、宽度和样式。<br>rect：Rectangle结构，它定义椭圆的边界。<br>（3）FillEllipse方法 FillEllipse方法用来填充边框所定义的椭圆的内部，该边框由一对坐标、一个宽度和一个高度指定，该方法有4种重载形式，本实例中用到的它的重载形式如下：</p>
<p>public void FillEllipse(Brush brush,Rectangle rect)</p>
<p>参数说明 R brush：确定填充特性的Brush。<br>rect：Rectangle结构，它表示定义椭圆的边框。</p>
<h3 id="设计过程"><a href="#设计过程" class="headerlink" title="设计过程"></a>设计过程</h3><p>（1）打开Visual Studio 2008开发环境，新建一个Windows窗体应用程序，命名为BeautifulRadioButton。<br>（2）在当前项目中添加一个用户控件，将其命名为GlorifyRadioButton。将用户控件继承的UserControl类改为RadioButton类。<br>（3）程序主要代码如下： 在GlorifyRadioButton控件中定义变量，代码如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">private bool FontAspect &#x3D; false;                                        &#x2F;&#x2F;判断字体的方向</span><br><span class="line">private int Measurement &#x3D; 255;                                        &#x2F;&#x2F;设置渐变的初始值</span><br><span class="line">LinearGradientBrush Periphery_br;                                    &#x2F;&#x2F;外圆的颜色</span><br><span class="line">LinearGradientBrush Central_br;                                        &#x2F;&#x2F;移入控件时中圆的颜色</span><br><span class="line">LinearGradientBrush NoCentral_br;                                    &#x2F;&#x2F;无操作时中圆的颜色</span><br><span class="line">LinearGradientBrush Stipple_br;                                        &#x2F;&#x2F;内圆选中的颜色</span><br><span class="line">LinearGradientBrush NoStipple_br;                                    &#x2F;&#x2F;内圆无选中的颜色</span><br></pre></td></tr></table></figure>
<p>  在GlorifyRadioButton控件的OnPaint事件中对控件的样式进行重绘，主要是通过SystemInformation类的SmallIconSize属性来获取单选按钮左边单选框的大小及位置，然后对单选框进行重绘。实现代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 控件在需要重绘时触发</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnPaint</span>(<span class="params">System.Windows.Forms.PaintEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e.Graphics.FillRectangle(SystemBrushes.Control, e.ClipRectangle);                <span class="comment">//填充矩形</span></span><br><span class="line">                                                                                     <span class="comment">//清除锯齿</span></span><br><span class="line">    e.Graphics.SmoothingMode = System.Drawing.Drawing2D.SmoothingMode.AntiAlias;</span><br><span class="line">    Rectangle boxrect = <span class="keyword">new</span> Rectangle(e.ClipRectangle.X, e.ClipRectangle.Y, SystemInformation.SmallIconSize.Width, e.ClipRectangle.Height);            <span class="comment">//获取左面图标的区域</span></span><br><span class="line">                                                                                                                                                       <span class="comment">//获取绘制的文本的区域</span></span><br><span class="line">    Rectangle strrect = <span class="keyword">new</span> Rectangle(e.ClipRectangle.X + SystemInformation.SmallIconSize.Width, e.ClipRectangle.Y, e.ClipRectangle.Width + <span class="number">2</span> - SystemInformation.SmallIconSize.Width, e.ClipRectangle.Height);</span><br><span class="line">    <span class="keyword">if</span> (FontAspect)                                                <span class="comment">//判断字体的读取方式</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//设置椭圆的位置</span></span><br><span class="line">        boxrect.X = e.ClipRectangle.X + e.ClipRectangle.Width - SystemInformation.SmallIconSize.Width;</span><br><span class="line">        strrect.X = e.ClipRectangle.X;                                    <span class="comment">//设置字体位置</span></span><br><span class="line">    &#125;</span><br><span class="line">    Point MousePos = <span class="keyword">this</span>.PointToClient(Control.MousePosition);                    <span class="comment">//获取鼠标的位置</span></span><br><span class="line">    <span class="keyword">bool</span> Above = e.ClipRectangle.Contains(MousePos);                        <span class="comment">//获取鼠标是否在当前控件上</span></span><br><span class="line">    DrawBox(e.Graphics, boxrect, Above);                                <span class="comment">//绘制单选图案</span></span><br><span class="line">    DrawText(e.Graphics, strrect);                                    <span class="comment">//绘制文字</span></span><br><span class="line">    <span class="keyword">if</span> (!Enabled)</span><br><span class="line">        e.Graphics.FillRectangle(<span class="keyword">new</span> SolidBrush(Color.FromArgb(<span class="number">127</span>, SystemColors.Control)), e.ClipRectangle);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">  自定义方法DrawBox主要通过LinearGradientBrush类来设置单选框的绘制颜色，然后用Graphics类进行绘制。实现代码如下：</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 绘制单选控件的图案</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param g="Graphics"&gt;</span>封装一个绘图的对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param rect="Rectangle"&gt;</span>单选图案的绘制区域<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param Above="bool"&gt;</span>断判鼠标是否在控件上方<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawBox</span>(<span class="params">Graphics g, Rectangle rect, <span class="keyword">bool</span> Above</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//设置外椭圆的渐变色</span></span><br><span class="line">    <span class="keyword">int</span> opacity = Measurement;</span><br><span class="line">    Periphery_br = <span class="keyword">new</span> LinearGradientBrush(rect, Color.FromArgb(opacity / <span class="number">2</span>, PeripheryColor), Color.FromArgb(opacity, PeripheryColor), LinearGradientMode.ForwardDiagonal);</span><br><span class="line">    <span class="comment">//设置中间椭圆形选中时的渐变色</span></span><br><span class="line">    opacity = (<span class="keyword">int</span>)(<span class="number">.4</span>f * opacity + <span class="number">.5</span>f);</span><br><span class="line">    Central_br = <span class="keyword">new</span> LinearGradientBrush(rect, Color.FromArgb(opacity / <span class="number">10</span>, CentralColor), Color.FromArgb(opacity, CentralColor), LinearGradientMode.ForwardDiagonal);</span><br><span class="line">    <span class="comment">//设置中间椭圆形无操作时的渐变色</span></span><br><span class="line">    opacity = (<span class="keyword">int</span>)(<span class="number">.4</span>f * opacity + <span class="number">.5</span>f);</span><br><span class="line">    NoCentral_br = <span class="keyword">new</span> LinearGradientBrush(rect, Color.FromArgb(opacity / <span class="number">10</span>, NoCentralColor), Color.FromArgb(opacity, NoCentralColor), LinearGradientMode.ForwardDiagonal);</span><br><span class="line">    <span class="comment">//设置内圆形选中时的渐变色</span></span><br><span class="line">    opacity = Measurement;</span><br><span class="line">    Stipple_br = <span class="keyword">new</span> LinearGradientBrush(rect, Color.FromArgb(opacity / <span class="number">5</span>, StippleColor), Color.FromArgb(opacity, StippleColor), LinearGradientMode.BackwardDiagonal);</span><br><span class="line">    <span class="comment">//设置内圆形无操作时的渐变色</span></span><br><span class="line">    opacity = (<span class="keyword">int</span>)(<span class="number">.4</span>f * opacity + <span class="number">.5</span>f);</span><br><span class="line">    NoStipple_br = <span class="keyword">new</span> LinearGradientBrush(rect, Color.FromArgb(opacity / <span class="number">10</span>, NoStippleColor), Color.FromArgb(opacity, NoStippleColor), LinearGradientMode.BackwardDiagonal);</span><br><span class="line">    <span class="keyword">int</span> size = <span class="keyword">this</span>.Font.Height;                                        <span class="comment">//获取字体的高度</span></span><br><span class="line">                                                                        <span class="comment">//获取外椭圆的区域</span></span><br><span class="line">    Rectangle box = <span class="keyword">new</span> Rectangle(rect.X + ((rect.Width - size) / <span class="number">2</span>), rect.Y + ((rect.Height - size) / <span class="number">2</span>), size - <span class="number">2</span>, size - <span class="number">2</span>);</span><br><span class="line">    Rectangle glyph = <span class="keyword">new</span> Rectangle(box.X + <span class="number">3</span>, box.Y + <span class="number">3</span>, box.Width - <span class="number">6</span>, box.Height - <span class="number">6</span>);    <span class="comment">//设置内圆的绘制区域</span></span><br><span class="line">    g.FillEllipse(<span class="keyword">new</span> SolidBrush(SystemColors.Window), box);                    <span class="comment">//以白色填充单选图案</span></span><br><span class="line">    <span class="keyword">if</span> (Above &amp;&amp; <span class="keyword">this</span>.Enabled)                                        <span class="comment">//如果鼠标移入该控件</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawEllipse(<span class="keyword">new</span> Pen(Central_br, (<span class="keyword">float</span>)(<span class="number">3</span>)), <span class="keyword">new</span> Rectangle(box.X + <span class="number">2</span>, box.Y + <span class="number">2</span>, box.Width - <span class="number">4</span>, box.Height - <span class="number">4</span>));    <span class="comment">//绘制中心椭圆</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        g.DrawEllipse(<span class="keyword">new</span> Pen(NoCentral_br, (<span class="keyword">float</span>)(<span class="number">3</span>)), <span class="keyword">new</span> Rectangle(box.X + <span class="number">2</span>, box.Y + <span class="number">2</span>, box.Width - <span class="number">4</span>, box.Height - <span class="number">4</span>));    <span class="comment">//绘制中心椭圆</span></span><br><span class="line">    &#125;</span><br><span class="line">    g.DrawEllipse(<span class="keyword">new</span> Pen(Periphery_br, (<span class="keyword">float</span>)(<span class="number">1.5</span>)), box);                        <span class="comment">//绘制外椭圆</span></span><br><span class="line">    g.FillEllipse(<span class="keyword">new</span> SolidBrush(SystemColors.Window), glyph);                    <span class="comment">//以白色填充内圆</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.Checked)                                            <span class="comment">//如果选中当前控件</span></span><br><span class="line">        g.FillEllipse(Stipple_br, glyph);                                    <span class="comment">//填充内圆</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        g.FillEllipse(NoStipple_br, glyph);                                <span class="comment">//填充内圆</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  自定义方法DrawText主要是通过判断单选按钮控件的显示方向，并在控件的指定位置绘制文本信息。实现代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 绘制文本</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param g="Graphics"&gt;</span>封装一个绘图的对象<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param rect="Rectangle"&gt;</span>绘制文本的区域<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">DrawText</span>(<span class="params">Graphics g, Rectangle rect</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    StringFormat tem_StringF = <span class="keyword">new</span> StringFormat();                            <span class="comment">//创建StringFormat对象</span></span><br><span class="line">    tem_StringF.Alignment = StringAlignment.Near;                            <span class="comment">//指定文本靠近布局对齐</span></span><br><span class="line">    tem_StringF.LineAlignment = StringAlignment.Center;                        <span class="comment">//文本居中对齐</span></span><br><span class="line">    <span class="keyword">if</span> (FontAspect)                                                <span class="comment">//如果控件是原始方向显示</span></span><br><span class="line">        tem_StringF.FormatFlags = StringFormatFlags.DirectionRightToLeft;            <span class="comment">//按从右到左的顺序显示文本</span></span><br><span class="line">    <span class="keyword">if</span> (!FontAspect)                                                <span class="comment">//如果控件是反方向显示</span></span><br><span class="line">                                                                    <span class="comment">//绘制文本（从左端开始绘制）</span></span><br><span class="line">        g.DrawString(<span class="keyword">this</span>.Text, <span class="keyword">this</span>.Font, SystemBrushes.ControlText, rect, tem_StringF);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        rect.X = rect.X - SystemInformation.SmallIconSize.Width / <span class="number">2</span> + <span class="number">2</span>;                <span class="comment">//设置文本的起始位置（在小图标后）</span></span><br><span class="line">                                                                                        <span class="comment">//绘制文本</span></span><br><span class="line">        g.DrawString(<span class="keyword">this</span>.Text, <span class="keyword">this</span>.Font, SystemBrushes.ControlText, rect, tem_StringF);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>  自定义方法getAspect主要用于获取单选按钮控件的显示方向，实现代码如下：</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取文本的读取方向</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;return&gt;</span>布尔型<span class="doctag">&lt;/return&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">bool</span> <span class="title">getAspect</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">bool</span> tem_Aspect = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.RightToLeft == RightToLeft.Yes)                                <span class="comment">//从右到左进行读取</span></span><br><span class="line">        tem_Aspect = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">this</span>.RightToLeft == RightToLeft.No)                                <span class="comment">//从左到右进行读取</span></span><br><span class="line">        tem_Aspect = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> tem_Aspect;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>


<h3 id="秘笈心法"><a href="#秘笈心法" class="headerlink" title="秘笈心法"></a>秘笈心法</h3><p>心法领悟002：RadioButton控件的使用。<br>RadioButton控件，又称为单选按钮控件，它为用户提供由两个或多个互斥选项组成的选项集，当用户选中某单选按钮时，同一组中的其他单选按钮不能同时选定。例如，在开发考试管理系统时，如果考试题中有单项选择题，则可以使用RadioButton控件来表示单项选择题的各个选项。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
        <category>csharp</category>
      </categories>
  </entry>
  <entry>
    <title>C# 获取光标闪烁频率</title>
    <url>/zh-CN/2018/01/25/csharp%20%E8%8E%B7%E5%8F%96%E5%85%89%E6%A0%87%E9%97%AA%E7%83%81%E9%A2%91%E7%8E%87.html</url>
    <content><![CDATA[<p>引入DLL函数</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[DllImport(&quot;user32.dll&quot;, EntryPoint &#x3D; &quot;GetCaretBlinkTime&quot;)]</span><br><span class="line"></span><br><span class="line">public extern static int GetDoubleClickTime();</span><br></pre></td></tr></table></figure>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">完整代码，创建一个窗体拖入一个文本框控件</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint = <span class="meta-string">"GetCaretBlinkTime"</span>)</span>]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetCaretBlinkTime</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>


<pre><code>private void Form1_Load(object sender, EventArgs e)
{
    textBox1.Text = Convert.ToString(GetDoubleClickTime());
}</code></pre><p><img data-src="https://cdn.fesugar.com/2018/01/2018-01-25-04364497.png" alt=""></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 自定义鼠标光标</title>
    <url>/zh-CN/2016/07/06/csharp%20%E8%87%AA%E5%AE%9A%E4%B9%89%E9%BC%A0%E6%A0%87%E5%85%89%E6%A0%87.html</url>
    <content><![CDATA[<p>自定义鼠标光标的方法</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line">namespace Example027_显示动画光标</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">273</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"user32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">SetCursor</span>(<span class="params">IntPtr hCursor</span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"user32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">LoadCursorFromFile</span>(<span class="params"><span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> WM_SETCURSOR = <span class="number">0x0020</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			IntPtr hCursor;</span><br><span class="line">			hCursor=LoadCursorFromFile(<span class="string">"..\\..\\pic.ani"</span>);</span><br><span class="line">			SetCursor(hCursor);	</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">WndProc</span>(<span class="params"><span class="keyword">ref</span> System.Windows.Forms.Message m</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">switch</span>(m.Msg)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">case</span> WM_SETCURSOR:</span><br><span class="line">					IntPtr hCursor;</span><br><span class="line">					hCursor=LoadCursorFromFile(<span class="string">"..\\..\\pic.ani"</span>);</span><br><span class="line">					SetCursor(hCursor);	</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">				<span class="keyword">default</span>:</span><br><span class="line">					<span class="keyword">base</span>.WndProc(<span class="keyword">ref</span> m);</span><br><span class="line">					<span class="keyword">break</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-06-01103899.png" alt="QQ图片20160706085555"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 获取鼠标双击间隔时间</title>
    <url>/zh-CN/2018/01/25/csharp%20%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E5%8F%8C%E5%87%BB%E9%97%B4%E9%9A%94%E6%97%B6%E9%97%B4.html</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">引入DLL函数</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint = <span class="meta-string">"GetDoubleClickTime"</span>)</span>]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetDoubleClickTime</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">完整代码，创建一个窗体拖入一个文本框控件</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint = <span class="meta-string">"GetDoubleClickTime"</span>)</span>]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetDoubleClickTime</span>(<span class="params"></span>)</span>;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            textBox1.Text = Convert.ToString(GetDoubleClickTime());</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2018/01/2018-01-25-04364497.png" alt=""></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 让其程序只能单实例运行</title>
    <url>/zh-CN/2016/07/05/csharp%20%E8%AE%A9%E5%85%B6%E7%A8%8B%E5%BA%8F%E5%8F%AA%E8%83%BD%E5%8D%95%E5%AE%9E%E4%BE%8B%E8%BF%90%E8%A1%8C.html</url>
    <content><![CDATA[<p>使用 CreateMutex 互斥解决单实例运行</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Threading;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line">namespace Example104_使程序只能够运行一个</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">272</span>, <span class="number">189</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"></span><br><span class="line">		[<span class="meta">StructLayout( LayoutKind.Sequential)</span>]</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SECURITY_ATTRIBUTES</span> </span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">int</span> nLength; </span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">int</span> lpSecurityDescriptor; </span><br><span class="line">			<span class="keyword">public</span> <span class="keyword">int</span> bInheritHandle; </span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">GetLastError</span>(<span class="params"></span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> IntPtr <span class="title">CreateMutex</span>(<span class="params">SECURITY_ATTRIBUTES lpMutexAttributes,<span class="keyword">bool</span> bInitialOwner,<span class="keyword">string</span> lpName</span>)</span>;</span><br><span class="line">		[<span class="meta">System.Runtime.InteropServices.DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">ReleaseMutex</span>(<span class="params">IntPtr hMutex</span>)</span>;</span><br><span class="line">		<span class="keyword">const</span> <span class="keyword">int</span> ERROR_ALREADY_EXISTS = <span class="number">0183</span>;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			IntPtr hMutex;</span><br><span class="line">			hMutex=CreateMutex(<span class="literal">null</span>,<span class="literal">false</span>,<span class="string">"test"</span>);</span><br><span class="line">			<span class="keyword">if</span> (GetLastError()!=ERROR_ALREADY_EXISTS)</span><br><span class="line">			&#123;</span><br><span class="line">				Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				MessageBox.Show(<span class="string">"本程序只允许同时运行一个"</span>);</span><br><span class="line">				ReleaseMutex(hMutex);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 获取鼠标按键数量</title>
    <url>/zh-CN/2018/01/25/csharp%20%E8%8E%B7%E5%8F%96%E9%BC%A0%E6%A0%87%E6%8C%89%E9%94%AE%E6%95%B0%E9%87%8F.html</url>
    <content><![CDATA[<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">引入DLL函数</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint = <span class="meta-string">"GetSystemMetrics"</span>)</span>]</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetSystemMetrics</span>(<span class="params"><span class="keyword">int</span> intcount</span>)</span>;</span><br></pre></td></tr></table></figure>
<p>完整代码，创建一个窗体拖入一个文本框控件</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> SM_CMOUSEBUTTONS = <span class="number">43</span>;<span class="comment">//定义一个常量值</span></span><br><span class="line"></span><br><span class="line">[<span class="meta">DllImport(<span class="meta-string">"user32.dll"</span>, EntryPoint = <span class="meta-string">"GetSystemMetrics"</span>)</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">extern</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">GetSystemMetrics</span>(<span class="params"><span class="keyword">int</span> intcount</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    InitializeComponent();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> jishu = GetSystemMetrics(SM_CMOUSEBUTTONS); <span class="comment">//获取鼠标按键数</span></span><br><span class="line">    textBox1.Text = Convert.ToString(jishu);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 设置计算机名称</title>
    <url>/zh-CN/2018/09/06/csharp%20%E8%AE%BE%E7%BD%AE%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%90%8D%E7%A7%B0.html</url>
    <content><![CDATA[<p>设置修改当前计算机名称  </p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> Microsoft.VisualBasic.Devices;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">ModifyComputerName</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">Frm_Main</span> : <span class="title">Form</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">Frm_Main</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        [<span class="meta">DllImport(<span class="meta-string">"kernel32.dll"</span>)</span>]</span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">SetComputerName</span>(<span class="params"><span class="keyword">string</span> ipComputerName</span>)</span>;<span class="comment">//重写API函数</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Frm_Main_Load</span>(<span class="params"><span class="keyword">object</span> sender, EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Computer computer = <span class="keyword">new</span> Computer();<span class="comment">//创建计算机对象</span></span><br><span class="line">            textBox1.Text = computer.Name;<span class="comment">//显示计算机名称</span></span><br><span class="line"></span><br><span class="line">            SetComputerName(textBox2.Text);<span class="comment">//修改计算机名称</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>.NET</tag>
        <tag>Visual Studio</tag>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C#通用数据库操作类</title>
    <url>/zh-CN/2016/10/18/csharp%20%E9%80%9A%E7%94%A8%E6%95%B0%E6%8D%AE%E5%BA%93%E6%93%8D%E4%BD%9C%E7%B1%BB.html</url>
    <content><![CDATA[<p>各种搜集数据库操作完整类，在一篇博文留言中发现了一个开源的 Dbhelper 试了下，用起来很爽。。。<br>博文地址 <a href="http://www.cnblogs.com/podolski/p/5152537.html" target="_blank" rel="noopener">波多尔斯基</a> <img data-src="https://cdn.fesugar.com/2016/10/2016-10-18-10232965.png" alt="8720161018181711"> DbHelper<br>开源地址 <a href="https://devlib.codeplex.com/SourceControl/latest#Main/Source/DevLib.Data/DbHelper.cs" target="_blank" rel="noopener">DevLib</a> <img data-src="https://cdn.fesugar.com/2016/10/2016-10-18-10241644.png" alt="8720161018182238"></p>
]]></content>
      <categories>
        <category>未分类</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>C# 读写ini配置文件</title>
    <url>/zh-CN/2016/07/05/csharp%20%E8%AF%BB%E5%86%99ini%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6.html</url>
    <content><![CDATA[<p>读写ini文件的方法</p>
<figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Drawing;</span><br><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Forms;</span><br><span class="line"><span class="keyword">using</span> System.Data;</span><br><span class="line"><span class="keyword">using</span> System.Runtime.InteropServices;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line">namespace Example084_读写ini文件</span><br><span class="line">&#123;</span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> Form1 的摘要说明。</span></span><br><span class="line">	<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">	public class Form1 : System.Windows.Forms.Form</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 必需的设计器变量。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="keyword">private</span> System.ComponentModel.Container components = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">public</span> <span class="title">Form1</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// Windows 窗体设计器支持所必需的</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			InitializeComponent();</span><br><span class="line"></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">			<span class="comment">// <span class="doctag">TODO:</span> 在 InitializeComponent 调用后添加任何构造函数代码</span></span><br><span class="line">			<span class="comment">//</span></span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 清理所有正在使用的资源。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">Dispose</span>(<span class="params"> <span class="keyword">bool</span> disposing </span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span>( disposing )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span> (components != <span class="literal">null</span>) </span><br><span class="line">				&#123;</span><br><span class="line">					components.Dispose();</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">base</span>.Dispose( disposing );</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="meta">#<span class="meta-keyword">region</span> Windows Form Designer generated code</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 设计器支持所需的方法 - 不要使用代码编辑器修改</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 此方法的内容。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">InitializeComponent</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="comment">// Form1</span></span><br><span class="line">			<span class="comment">// </span></span><br><span class="line">			<span class="keyword">this</span>.AutoScaleBaseSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">6</span>, <span class="number">14</span>);</span><br><span class="line">			<span class="keyword">this</span>.ClientSize = <span class="keyword">new</span> System.Drawing.Size(<span class="number">292</span>, <span class="number">273</span>);</span><br><span class="line">			<span class="keyword">this</span>.Name = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Text = <span class="string">"Form1"</span>;</span><br><span class="line">			<span class="keyword">this</span>.Closing += <span class="keyword">new</span> System.ComponentModel.CancelEventHandler(<span class="keyword">this</span>.Form1_Closing);</span><br><span class="line">			<span class="keyword">this</span>.Load += <span class="keyword">new</span> System.EventHandler(<span class="keyword">this</span>.Form1_Load);</span><br><span class="line"></span><br><span class="line">		&#125;</span><br><span class="line">		<span class="meta">#<span class="meta-keyword">endregion</span></span></span><br><span class="line"></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> 应用程序的主入口点。</span></span><br><span class="line">		<span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">		[<span class="meta">STAThread</span>]</span><br><span class="line">		<span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"></span>) </span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			Application.Run(<span class="keyword">new</span> Form1());</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">int</span> <span class="title">GetPrivateProfileInt</span>(<span class="params"><span class="keyword">string</span> lpApplicationName,<span class="keyword">string</span> lpKeyName,<span class="keyword">int</span> nDefault,<span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">GetPrivateProfileString</span>(<span class="params"><span class="keyword">string</span> lpApplicationName,<span class="keyword">string</span> lpKeyName,<span class="keyword">string</span> lpDefault,StringBuilder lpReturnedString,<span class="keyword">int</span> nSize,<span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">WritePrivateProfileString</span>(<span class="params"><span class="keyword">string</span> lpApplicationName,<span class="keyword">string</span> lpKeyName,<span class="keyword">string</span> lpString,<span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">GetPrivateProfileSection</span>(<span class="params"><span class="keyword">string</span> lpAppName,<span class="keyword">string</span> lpReturnedString,<span class="keyword">int</span> nSize,<span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line">		[<span class="meta">DllImport(<span class="meta-string">"kernel32"</span>)</span>]</span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">extern</span> <span class="keyword">bool</span> <span class="title">WritePrivateProfileSection</span>(<span class="params"><span class="keyword">string</span> lpAppName,<span class="keyword">string</span> lpString,<span class="keyword">string</span> lpFileName</span>)</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">int</span> MAX_PATH = <span class="number">256</span>;</span><br><span class="line">		<span class="keyword">public</span> <span class="keyword">const</span> <span class="keyword">string</span> FILE_NAME=<span class="string">".\\test.ini"</span>;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Load</span>(<span class="params"><span class="keyword">object</span> sender, System.EventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">if</span> (File.Exists(FILE_NAME))</span><br><span class="line">			&#123;</span><br><span class="line">				StringBuilder strCaption=<span class="keyword">new</span> StringBuilder(<span class="number">256</span>);</span><br><span class="line">				GetPrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Caption"</span>,<span class="string">"Default Caption"</span>,strCaption,strCaption.Capacity,FILE_NAME);</span><br><span class="line">				<span class="keyword">this</span>.Text=strCaption.ToString();</span><br><span class="line">				<span class="keyword">int</span> myWidth=GetPrivateProfileInt(<span class="string">"Form"</span>,<span class="string">"Width"</span>,<span class="keyword">this</span>.Width,FILE_NAME);</span><br><span class="line">				<span class="keyword">this</span>.Width=myWidth;</span><br><span class="line">				<span class="keyword">int</span> myHeight=GetPrivateProfileInt(<span class="string">"Form"</span>,<span class="string">"Height"</span>,<span class="keyword">this</span>.Height,FILE_NAME);</span><br><span class="line">				<span class="keyword">this</span>.Height=myHeight;</span><br><span class="line">				<span class="keyword">int</span> myLeft=GetPrivateProfileInt(<span class="string">"Form"</span>,<span class="string">"Left"</span>,<span class="keyword">this</span>.Left,FILE_NAME);</span><br><span class="line">				<span class="keyword">this</span>.Left=myLeft;</span><br><span class="line">				<span class="keyword">int</span> myTop=GetPrivateProfileInt(<span class="string">"Form"</span>,<span class="string">"Top"</span>,<span class="keyword">this</span>.Top,FILE_NAME);</span><br><span class="line">				<span class="keyword">this</span>.Top=myTop;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line"></span><br><span class="line">		<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">Form1_Closing</span>(<span class="params"><span class="keyword">object</span> sender, System.ComponentModel.CancelEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>		&#123;</span><br><span class="line">			<span class="keyword">string</span> strCaption=<span class="keyword">this</span>.Text;</span><br><span class="line">			WritePrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Caption"</span>,strCaption,FILE_NAME);</span><br><span class="line">			WritePrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Width"</span>,<span class="keyword">this</span>.Width.ToString(),FILE_NAME);</span><br><span class="line">			WritePrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Height"</span>,<span class="keyword">this</span>.Height.ToString(),FILE_NAME);</span><br><span class="line">			WritePrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Left"</span>,<span class="keyword">this</span>.Left.ToString(),FILE_NAME);</span><br><span class="line">			WritePrivateProfileString(<span class="string">"Form"</span>,<span class="string">"Top"</span>,<span class="keyword">this</span>.Top.ToString(),FILE_NAME);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><img data-src="https://cdn.fesugar.com/2016/07/2016-07-05-00130184.png" alt="C# 读写ini"></p>
]]></content>
      <categories>
        <category>学习记录</category>
        <category>csharp</category>
      </categories>
      <tags>
        <tag>C#</tag>
      </tags>
  </entry>
  <entry>
    <title>排序算法之希尔排序</title>
    <url>/zh-CN/2016/09/23/php%E6%8E%92%E5%BA%8F%E7%AE%97%E6%B3%95%E4%B9%8B%E5%B8%8C%E5%B0%94%E6%8E%92%E5%BA%8F.html</url>
    <content><![CDATA[<div>
<li>来源:<a href="http://www.onmpw.com/tm/xwzj/algorithm_44.html" target="_blank" rel="external nofollow">www.onmpw.com</a></li>
</div>

<p>希尔排序是按照该算法的设计者的名字希尔 命名的，其产生是希尔在插入排序的基础上改进的，可以说是一种特殊的插入排序。<br>下面先介绍一下插入排序的性质：<br>首先，插入排序算法对于已经有序的数据进行操作的时候，效率很高，可以达到线性排序的效率。<br>其次，插入排序进行排序的时候，每一趟排序只能移动一个数据。所以说这样的排序方法相对来说效率又比较低。<br>基于此性质，希尔排序的设计者发明了希尔排序算法，其基本思想是：<br>先将整个待排序的记录序列分割成为若干子序列分别进行直接插入排序，分割子序列的方法就是设定一个增量，待当下的每个子序列有序的时候，将增量减一半（除以2，取整），再次进行子序列的排序。<br>依次进行，待整个序列中的记录基本上有序的时候，再对全体记录进行依次直接插入排序，此时增量减为1，因为直接插入排序在元素基本有序的情况下（根据上述第一点，接近最好的情况），效率是很高的。 </p>
<a id="more"></a>
<p>因此，对于希尔排序，总结一句话，就是一种分组插入方法。因为设定了一个增量，并且依次将增量减1，所以希尔排序又称为递减增量排序算法。<br>对于希尔排序的算法步骤，可以用下图来表示<br><img data-src="https://cdn.fesugar.com/2016/09/2016-09-23-12334768.png" alt="1-1601050tu0148"><br><img data-src="https://cdn.fesugar.com/2016/09/2016-09-23-1234088.png" alt="1-1601050tuc06"><br><img data-src="https://cdn.fesugar.com/2016/09/2016-09-23-12344069.png" alt="1-1601050tzn20"><br>在这里需要说一下，希尔排序是稳定排序，我们可以设定一组数据按照上述方式进行排序，可以发现其为稳定排序。<br>希尔排序在按照增量分组以后，其组内的排序可以使用插入排序，当然也可以使用冒泡排序、选择排序等等 下面奉上希尔排序的PHP实现代码</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line">$arr = <span class="keyword">array</span>(<span class="number">10</span>, <span class="number">6</span>, <span class="number">20</span>, <span class="number">50</span>, <span class="number">30</span>, <span class="number">7</span>, <span class="number">23</span>, <span class="number">35</span>, <span class="number">40</span>, <span class="number">1</span>, <span class="number">17</span>);</span><br><span class="line">/\*</span><br><span class="line">\* 首先初始化 增量  数组长度/<span class="number">2</span> 取整 floor() 函数向下取整  对于增量每次循环都由 当前增量/<span class="number">2</span></span><br><span class="line">*/</span><br><span class="line"><span class="keyword">for</span> ($dl = floor(count($arr) / <span class="number">2</span>); $dl &gt;= <span class="number">1</span>; $dl = floor($dl / <span class="number">2</span>)) &#123;</span><br><span class="line">    /\*</span><br><span class="line">\* 每次从 增量的位置开始，直到数组递增变量达到数组的长度</span><br><span class="line">*/</span><br><span class="line">    <span class="keyword">for</span> ($j = $dl; $j &lt; count($arr); $j++) &#123;</span><br><span class="line">        <span class="keyword">for</span> ($i = $j - $dl; $i &gt;= <span class="number">0</span>; $i -= $dl) &#123;</span><br><span class="line">            <span class="keyword">if</span> ($arr[$i + $dl] &lt; $arr[$i]) &#123;</span><br><span class="line">                $temp = $arr[$i + $dl];</span><br><span class="line">                $arr[$i + $dl] = $arr[$i];</span><br><span class="line">                $arr[$i] = $temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>  以上代码只是其中的一种实现方式，其代码实现有很多种，仅仅针对组内的排序方式就有很多，如果大家有什么好的方法，欢迎从下面留言，大家共同讨论，共同提高。</p>
]]></content>
      <categories>
        <category>书籍文档</category>
      </categories>
  </entry>
  <entry>
    <title>收集整理 Mysql 的一些用法</title>
    <url>/zh-CN/2016/12/06/%E6%94%B6%E9%9B%86%E6%95%B4%E7%90%86%20Mysql%20%E7%9A%84%E4%B8%80%E4%BA%9B%E7%94%A8%E6%B3%95.html</url>
    <content><![CDATA[<p>1、说明：创建数据库 <code>Create DATABASE database-name</code></p>
<p>2、说明：删除数据库 <code>drop database dbname</code></p>
<p>3、说明：备份sql server —<br>创建 备份数据的 device <code>USE master EXEC sp_addumpdevice &#39;disk&#39;, &#39;testBack&#39;, &#39;c:\mssql7backup\MyNwind_1.dat&#39;</code> —<br>开始 备份 <code>BACKUP DATABASE pubs TO testBack</code></p>
<p>4、说明：创建新表 <code>create table tabname(col1 type1 [not null] [primary key],col2 type2 [not null],..)</code><br>    根据已有的表创建新表：<br>    A：<code>create table tab_new like tab_old (使用旧表创建新表)</code><br>    B：<code>create table tab_new as select col1,col2… from tab_old definition only</code></p>
<p>5、说明：删除新表 <code>drop table tabname</code></p>
<p>6、说明：增加一个列 <code>Alter table tabname add column col type</code> 注：列增加后将不能删除。DB2中列加上后数据类型也不能改变，唯一能改变的是增加varchar类型 的长度。</p>
<p>7、说明：添加主键： <code>Alter table tabname add primary key(col)</code> 说明：删除主键： <code>Alter table tabname drop primary key(col)</code></p>
<p>8、说明：创建索引：<code>create [unique] index idxname on tabname(col….)</code> 删除索引：<code>drop index idxname</code> 注：索引是不可更改的，想更改必须删除重新建。</p>
<p>9、说明：创建视图：<code>create view viewname as select statement</code> 删除视图：<code>drop view viewname</code></p>
<a id="more"></a>
<p>10、说明：几个简单的基本的sql语句<br>    选择：<code>select * from table1 where 范围</code><br>    插入：<code>insert into table1(field1,field2) values(value1,value2)</code> 删除：<code>delete from table1 where 范围</code><br>    更新：<code>update table1 set field1=value1 where 范围</code><br>    查找：<code>select * from table1 where field1 like &#39;%value1%&#39; ---like的语法很精妙，查资料!</code><br>    排序：<code>select * from table1 order by field1,field2 [desc]</code><br>    总数：<code>select count as totalcount from table1</code><br>    求和：<code>select sum(field1) as sumvalue from table1</code><br>    平均：<code>select avg(field1) as avgvalue from table1</code><br>    最大：<code>select max(field1) as maxvalue from table1</code><br>    最小：<code>select min(field1) as minvalue from table1</code></p>
<p>11、说明：几个高级查询运算词<br>    A： UNION 运算符 UNION 运算符通过组合其他两个结果表（例如 TABLE1 和 TABLE2）并消去表中任何重复行而派生 出一个结果表。当 ALL 随 UNION 一起使用时（即 UNION ALL），不消除重复行。两种情况下，派 生表的每一行不是来自 TABLE1 就是来自 TABLE2。<br>    B： EXCEPT 运算符 EXCEPT 运算符通过包括所有在 TABLE1 中但不在 TABLE2 中的行并消除所有重复行而派生出一个 结果表。当 ALL 随 EXCEPT 一起使用时 (EXCEPT ALL)，不消除重复行。<br>    C： INTERSECT 运算符 INTERSECT 运算符通过只包括 TABLE1 和 TABLE2 中都有的行并消除所有重复行而派生出一个结果 表。当 ALL 随 INTERSECT 一起使用时 (INTERSECT ALL)，不消除重复行。<br>注：使用运算词的几个查询结果行必须是一致的。</p>
<p>12、说明：使用外连接<br>    A、left outer join： 左外连接（左连接）：结果集几包括连接表的匹配行，也包括左连接表的所有行。<br>    sql: <code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</code><br>    B：right outer join: 右外连接(右连接)：结果集既包括连接表的匹配连接行，也包括右连接表的所有行。<br>    C：full outer join： 全外连接：不仅包括符号连接表的匹配行，还包括两个连接表中的所有记录。</p>
<p>13、说明：复制表(只复制结构,源表名：a 新表名：b) (Access可用)<br>    法一：<code>select * into b from a where 1&lt;&gt;1</code><br>    法二：<code>select top 0 * into b from a</code></p>
<p>14、说明：拷贝表(拷贝数据,源表名：a 目标表名：b) (Access可用) <code>insert into b(a, b, c) select d,e,f from b;</code></p>
<p>15、说明：跨数据库之间表的拷贝(具体数据使用绝对路径) (Access可用)<br>    <code>insert into b(a, b, c) select d,e,f from b in ‘具体数据库&#39; where 条件 例子：..from b in &#39;&quot;&amp;Server.MapPath(&quot;.&quot;)&amp;&quot;\data.mdb&quot; &amp;&quot;&#39; where..</code></p>
<p>16、说明：子查询(表名1：a 表名2：b)<br>    <code>select a,b,c from a where a IN (select d from b ) 或者: select a,b,c from a where a IN (1,2,3)</code></p>
<p>17、说明：显示文章、提交人和最后回复时间<br>    <code>select a.title,a.username,b.adddate from table a,(select max(adddate) adddate from table where table.title=a.title) b</code></p>
<p>18.说明：外连接查询(表名1：a 表名2：b)<br>    <code>select a.a, a.b, a.c, b.c, b.d, b.f from a LEFT OUT JOIN b ON a.a = b.c</code></p>
<p>19、说明：在线视图查询(表名1：a )<br>    <code>select * from (Select a,b,c FROM a) T where t.a &gt; 1;</code></p>
<p>20、说明：between的用法,between限制查询数据范围时包括了边界值,not between不包括<br>    <code>select * from table1 where time between time1 and time2 select a,b,c, from table1 where a not between 数值1 and 数值2</code></p>
<p>21、说明：in 的使用方法<br>    <code>select * from table1 where a [not] in (‘值1&#39;,&#39;值2&#39;,&#39;值4&#39;,&#39;值6&#39;)</code></p>
<p>22、说明：两张关联表，删除主表中已经在副表中没有的信息<br>    <code>delete from table1 where not exists ( select * from table2 where table1.field1=table2.field1 )</code></p>
<p>23、说明：四表联查问题：<br>    <code>select * from a left inner join b on a.a=b.b right inner join c on a.a=c.c inner join d on a.a=d.d where .....</code></p>
<p>24、说明：日程安排提前五分钟提醒<br>    sql: select * from 日程安排 where datediff(‘minute’,f开始时间,getdate())&gt;5</p>
<p>25、说明：一条sql 语句搞定数据库分页<br>    <code>select top 10 b.* from (select top 20 主键字段,排序字段 from 表名 order by 排序字段 desc) a,表名 b where b.主键字段 = a.主键字段 order by a.排序字段</code></p>
<p>26、说明：前10条记录<br>    <code>select top 10 * form table1 where 范围</code></p>
<p>27、说明：选择在每一组b值相同的数据中对应的a最大的记录的所有信息(类似这样的用法可以用 于论坛每月排行榜,每月热销产品分析,按科目成绩排名,等等.)<br>    <code>select a,b,c from tablename ta where a=(select max(a) from tablename tb where tb.b=ta.b)</code></p>
<p>28、说明：包括所有在 TableA 中但不在 TableB和TableC 中的行并消除所有重复行而派生出一个 结果表<br>    <code>(select a from tableA ) except (select a from tableB) except (select a from tableC)</code></p>
<p>29、说明：随机取出10条数据<br>    <code>select top 10 * from tablename order by newid()</code></p>
<p>30、说明：随机选择记录<br>    <code>select newid()</code></p>
<p>31、说明：删除重复记录<br>    <code>Delete from tablename where id not in (select max(id) from tablename group by col1,col2,...)</code></p>
<p>32、说明：列出数据库里所有的表名<br>    select name from sysobjects where type=’U’</p>
<p>33、说明：列出表里的所有的<br>    <code>select name from syscolumns where id=object_id(&#39;TableName&#39;)</code></p>
<p>34、说明：列示type、vender、pcs字段，以type字段排列，case可以方便地实现多重选择，类似 select 中的case。<br>    <code>select type,sum(case vender when &#39;A&#39; then pcs else 0 end),sum(case vender when &#39;C&#39; then pcs else 0 end),sum(case vender when &#39;B&#39; then pcs else 0 end) FROM tablename group by type</code> 显示结果： type vender pcs 电脑 A 1 电脑 A 1 光盘 B 2 光盘 A 2 手机 B 3 手机 C 3</p>
<p>35、说明：初始化表<br>    table1 TRUNCATE TABLE table1</p>
<p>36、说明：选择从10到15的记录<br>    <code>select top 5 * from (select top 15 * from table order by id asc) table_别名 order by id desc</code><br>随机选择数据库记录的方法（使用Randomize函数，通过SQL语句实现）<br>对存储在数据库中的数据来说，随机数特性能给出上面的效果，但它们可能太慢了些。你不能 要求ASP“找个随机数”然后打印出来。<br>实际上常见的解决方案是建立如下所示的循环：<br>    <code>Randomize RNumber = Int(Rnd*499) +1</code> While Not objRec.EOF If objRec(“ID”) = RNumber THEN … 这里是执行脚本 … end if objRec.MoveNext Wend 这很容易理解。<br>首先，你取出1到500范围之内的一个随机数（假设500就是数据库内记录的总 数）。然后，你遍历每一记录来测试ID 的值、检查其是否匹配RNumber。满足条件的话就执行由 THEN 关键字开始的那一块代码。假如你的RNumber 等于495，那么要循环一遍数据库花的时间可就 长了。虽然500这个数字看起来大了些，但相比更为稳固的企业解决方案这还是个小型数据库了， 后者通常在一个数据库内就包含了成千上万条记录。这时候不就死定了？<br>采用SQL，你就可以很快地找出准确的记录并且打开一个只包含该记录的recordset，如下所示 ：<br>    <code>Randomize RNumber = Int(Rnd*499) + 1</code><br>    sql = “Select * FROM Customers Where ID = “ &amp; RNumber set objRec = ObjConn.Execute(SQL) Response.WriteRNumber &amp; “ = “ &amp; objRec(“ID”) &amp; “ “ &amp; objRec(“c_email”) 不必写出RNumber 和ID，你只需要检查匹配情况即可。<br>    只要你对以上代码的工作满意，你自可 按需操作“随机”记录。Recordset没有包含其他内容，因此你很快就能找到你需要的记录这样就 大大降低了处理时间。 再谈随机数 现在你下定决心要榨干Random 函数的最后一滴油，那么你可能会一次取出多条随机记录或者 想采用一定随机范围内的记录。把上面的标准Random 示例扩展一下就可以用SQL应对上面两种情况 了。<br>    为了取出几条随机选择的记录并存放在同一recordset内，你可以存储三个随机数，然后查询 数据库获得匹配这些数字的记录：<br>        <code>sql = &quot;Select * FROM Customers Where ID = &quot; &amp; RNumber &amp; &quot; or ID = &quot; &amp; RNumber2 &amp; &quot; or ID = &quot; &amp; RNumber3</code> 假如你想选出10条记录（也许是每次页面装载时的10条链接的列表），你可以用BETWEEN 或者 数学等式选出第一条记录和适当数量的递增记录。这一操作可以通过好几种方式来完成，但是 Select 语句只显示一种可能（这里的ID 是自动生成的号码）：<br>            <code>sql = &quot;Select * FROM Customers Where ID BETWEEN &quot; &amp; RNumber &amp; &quot; AND &quot; &amp; RNumber &amp; &quot;+ 9&quot;</code> 注意：以上代码的执行目的不是检查数据库内是否有9条并发记录。 随机读取若干条记录，测试过 Access语法：Select top 10 * From 表名 orDER BY Rnd(id) sql server:select top n * from 表名 order by newid() mysqlelect * From 表名 order By rand() Limit n Access左连接语法(最近开发要用左连接,Access帮助什么都没有,网上没有Access的SQL说明,只有 自己测试, 现在记下以备后查) 语法elect table1.fd1,table1,fd2,table2.fd2 From table1 left join table2 on table1.fd1,table2.fd1 where … 使用SQL语句 用…代替过长的字符串显示 语法： SQL数据库：select case when len(field)&gt;10 then left(field,10)+’…’ else field end as news_name,news_id from tablename Access数据库：Select iif(len(field)&gt;2,left(field,2)+’…’,field) FROM tablename; Conn.Execute说明 Execute方法 该方法用于执行SQL语句。根据SQL语句执行后是否返回记录集，该方法的使用格式分为以下两 种：<br>（1）.执行SQL查询语句时，将返回查询得到的记录集。用法为： Set 对象变量名=连接对象.Execute(“SQL 查询语言”) Execute方法调用后，会自动创建记录集对象，并将查询结果存储在该记录对象中，通过Set 方法，将记录集赋给指定的对象保存，以后对象变量就代表了该记录集对象。<br>（2）．执行SQL的操作性语言时，没有记录集的返回。此时用法为： 连接对象.Execute “SQL 操作性语句” [, RecordAffected][, Option] ?RecordAffected 为可选项，此出可放置一个变量，SQL语句执行后，所生效的记录 数会自动保存到该变量中。通过访问该变量，就可知道SQL语句队多少条记录进行了操作。 ?Option 可选项，该参数的取值通常为adCMDText，它用于告诉ADO，应该将Execute 方法之后的第一个字符解释为命令文本。通过指定该参数，可使执行更高效。 *BeginTrans、RollbackTrans、CommitTrans方法 这三个方法是连接对象提供的用于事务处理的方法。BeginTrans用于开始一个事物； RollbackTrans用于回滚事务；CommitTrans用于提交所有的事务处理结果，即确认事务的处理。 事务处理可以将一组操作视为一个整体，只有全部语句都成功执行后，事务处理才算成功；若 其中有一个语句执行失败，则整个处理就算失败，并恢复到处里前的状态。 BeginTrans和CommitTrans用于标记事务的开始和结束，在这两个之间的语句，就是作为事务 处理的语句。判断事务处理是否成功，可通过连接对象的Error集合来实现，若Error集合的成员个 数不为0，则说明有错误发生，事务处理失败。Error集合中的每一个Error对象，代表一个错误信 息。</p>
<p>37、一道SQL语句面试题，关于group by 表内容： 2005-05-09 胜 2005-05-09 胜 2005-05-09 负 2005-05-09 负 2005-05-10 胜 2005-05-10 负 2005-05-10 负 如果要生成下列结果, 该如何写sql语句? 胜 负 2005-05-09 2 2 2005-05-10 1 2 答：代码如下： <code>create table #tmp(rq varchar(10),shengfu nchar(1)) insert into #tmp values(&#39;2005-05-09&#39;,&#39;胜&#39;) insert into #tmp values(&#39;2005-05-09&#39;,&#39;胜&#39;) insert into #tmp values(&#39;2005-05-09&#39;,&#39;负&#39;) insert into #tmp values(&#39;2005-05-09&#39;,&#39;负&#39;) insert into #tmp values(&#39;2005-05-10&#39;,&#39;胜&#39;) insert into #tmp values(&#39;2005-05-10&#39;,&#39;负&#39;) insert into #tmp values(&#39;2005-05-10&#39;,&#39;负&#39;) 1)select rq, sum(case when shengfu=&#39;胜&#39; then 1 else 0 end)&#39;胜&#39;,sum(case when shengfu=&#39; 负&#39; then 1 else 0 end)&#39;负&#39; from #tmp group by rq 2) select N.rq,N.勝,M.負 from ( select rq,勝=count(*) from #tmp where shengfu=&#39;胜&#39;group by rq)N inner join (select rq,負=count(*) from #tmp where shengfu=&#39;负&#39;group by rq)M on N.rq=M.rq
3)select a.col001,a.a1 胜,b.b1 负 from (select col001,count(col001) a1 from temp1 where col002=&#39;胜&#39; group by col001) a, (select col001,count(col001) b1 from temp1 where col002=&#39;负&#39; group by col001) b where a.col001=b.col001</code></p>
<p>38、请教一个面试中遇到的SQL语句的查询问题 表中有A B C三列,用SQL语句实现：当A列大于B列时选择A列否则选择B列，当B列大于C列时选择B列 否则选择C列。 示例如下: <code>select (case when a&gt;b then a else b end ), (case when b&gt;c then b esle c end) from table_name</code></p>
<p>39、一个日期判断的sql语句？ 请取出tb_send表中日期(SendTime字段)为当天的所有记录?(SendTime字段为datetime型，包含日 期与时间) 示例如下: <code>select * from tb where datediff(dd,SendTime,getdate())=0</code></p>
<p>40、有一张表，里面有3个字段：语文，数学，英语。其中有3条记录分别表示语文70分，数学80分 ，英语58分，请用一条sql语句查询出这三条记录并按以下条件显示出来（并写出您的思路）： 大于或等于80表示优秀，大于或等于60表示及格，小于60分表示不及格。 显示格式： 语文 数学 英语 及格 优秀 不及格 示例如下： <code>select (case when 语文&gt;=80 then &#39;优秀&#39; when 语文&gt;=60 then &#39;及格&#39; else &#39;不及格&#39;) as 语文, (case when 数学&gt;=80 then &#39;优秀&#39; when 数学&gt;=60 then &#39;及格&#39; else &#39;不及格&#39;) as 数学, (case when 英语&gt;=80 then &#39;优秀&#39; when 英语&gt;=60 then &#39;及格&#39; else &#39;不及格&#39;) as 英语, from table</code></p>
<p>41、在sqlserver2000中请用sql创建一张用户临时表和系统临时表，里面包含两个字段ID和 IDValues,类型都是int型，并解释下两者的区别? 用户临时表:create table #xx(ID int, IDValues int) 系统临时表:create table ##xx(ID int, IDValues int) 区别: 用户临时表只对创建这个表的用户的Session可见,对其他进程是不可见的. 当创建它的进程消失时这个临时表就自动删除. 全局临时表对整个SQL Server实例都可见,但是所有访问它的Session都消失的时候,它也自动删除.</p>
<p>42、sqlserver2000是一种大型数据库，他的存储容量只受存储介质的限制，请问它是通过什么方 式实现这种无限容量机制的。 它的所有数据都存储在数据文件中(*.dbf),所以只要文件够大,SQL Server的存储容量是可以扩 大的. SQL Server 2000 数据库有三种类型的文件： 主要数据文件 主要数据文件是数据库的起点，指向数据库中文件的其它部分。每个数据库都有一个主要数据文件 。主要数据文件的推荐文件扩展名是 .mdf。 次要数据文件 次要数据文件包含除主要数据文件外的所有数据文件。有些数据库可能没有次要数据文件，而有些 数据库则有多个次要数据文件。次要数据文件的推荐文件扩展名是 .ndf。 日志文件 日志文件包含恢复数据库所需的所有日志信息。每个数据库必须至少有一个日志文件，但可以不止 一个。日志文件的推荐文件扩展名是 .ldf。</p>
<p>43、请用一个sql语句得出结果 从table1,table2中取出如table3所列格式数据，注意提供的数据及结果不准确，只是作为一个格 式向大家请教。 如使用存储过程也可以。 table1 月份mon 部门dep 业绩yj 一月份 01 10 一月份 02 10 一月份 03 5 二月份 02 8 二月份 04 9 三月份 03 8 table2 部门dep 部门名称dname ——————————– 01 国内业务一部 02 国内业务二部 03 国内业务三部 04 国际业务部 table3 （result） 部门dep 一月份 二月份 三月份 ————————————– 01 10 null null 02 10 8 null 03 null 5 8 04 null null 9 ——————————————</p>
<p>1) <code>select a.部门名称dname,b.业绩yj as &#39;一月份&#39;,c.业绩yj as &#39;二月份&#39;,d.业绩yj as &#39;三月份&#39; from table1 a,table2 b,table2 c,table2 d where a.部门dep = b.部门dep and b.月份mon = &#39;一月份&#39; and a.部门dep = c.部门dep and c.月份mon = &#39;二月份&#39; and a.部门dep = d.部门dep and d.月份mon = &#39;三月份&#39; and
2) select a.dep, sum(case when b.mon=1 then b.yj else 0 end) as &#39;一月份&#39;, sum(case when b.mon=2 then b.yj else 0 end) as &#39;二月份&#39;, sum(case when b.mon=3 then b.yj else 0 end) as &#39;三月份&#39;, sum(case when b.mon=4 then b.yj else 0 end) as &#39;四月份&#39;, sum(case when b.mon=5 then b.yj else 0 end) as &#39;五月份&#39;, sum(case when b.mon=6 then b.yj else 0 end) as &#39;六月份&#39;, sum(case when b.mon=7 then b.yj else 0 end) as &#39;七月份&#39;, sum(case when b.mon=8 then b.yj else 0 end) as &#39;八月份&#39;, sum(case when b.mon=9 then b.yj else 0 end) as &#39;九月份&#39;, sum(case when b.mon=10 then b.yj else 0 end) as &#39;十月份&#39;, sum(case when b.mon=11 then b.yj else 0 end) as &#39;十一月份&#39;, sum(case when b.mon=12 then b.yj else 0 end) as &#39;十二月份&#39;, from table2 a left join table1 b on a.dep=b.dep</code></p>
<p>44、华为一道面试题 一个表中的Id有多个记录，把所有这个id的记录查出来，并显示有多少条记录。 ————————————————-<br><code>select id, Count(*) from tb group by id having count(*)&gt;1 select*from(select count(ID) as count from table group by ID)T where T.count&gt;1</code><br>【mysql】mysql 常用建表语句 . 分类：<br>【07-MySql数据库】<br>【06-基础知识】 2012-03-27 23:31 43383人阅读 评论(3) 收藏 举报 mysqltableemailinsertnullqq<br>【1】建立员工档案表 要求字段：员工员工编号，员工姓名，性别，工资，email，入职时间，部门。<br>【2】合理选择数据类型及字段修饰符，要求有NOT NULL，auto_increment, primary key等。 <code>-- -- make by kakane --</code> DROP TABLE IF EXISTS `workers_info`; CREATE TABLE `workers_info` ( `id` int(11) NOT NULL AUTO_INCREMENT, `workername` varchar(20) NOT NULL, `sex` enum(F,M,S), `salary` int(11) DEFAULT ‘0’, `email` varchar(30), `EmployedDates` date, `department` varchar(30), PRIMARY KEY (`id`) ) ENGINE=MyISAM DEFAULT CHARSET=utf8; mysql&gt; alter table workers_info ADD sex enum(‘F’,’M’,’S’);<br>【3】查看表的结构 <code>mysql&gt; desc workers_info;</code><br>【4】新增qq和tel字段，要求tel字段位于email前，要求入职时间是最后一个字段 <code>mysql&gt; ALTER TABLE workers_info ADD tel varchar(15) after salary; mysql&gt; ALTER TABLE workers_info ADD qq int; ALTER TABLE workers_info MODIFY EmployedDates date after qq;</code><br>【5】把email字段修改成mailbox <code>mysql&gt; ALTER TABLE workers_info CHANGE email mailbox varchar(30);</code><br>【6】向表里添加10条记录 <code>mysql&gt; INSERT INTO workers_info values(NULL,&#39;xing&#39;,10000,&#39;1598232123&#39;,&#39;xing@qq.com&#39;,&#39;yanfa&#39;,736019646,20121221); mysql&gt; INSERT INTO workers_info (workername,salary,tel,mailbox,department,qq,EmployedDates) values(&#39;xing&#39;,10000,&#39;1598232123&#39;,&#39;xing@qq.com&#39;,&#39;yanfa&#39;,736019646,20121221);</code><br>【7】修改其中两条记录的tel和mailbox <code>mysql&gt; UPDATE workers_info SET mailbox = &#39;haha@qq.com&#39; WHERE id = 14; mysql&gt; UPDATE workers_info SET mailbox = &#39;haha@qq.com&#39;,tel=&#39;1246543423&#39; WHERE id = 13;</code><br>【8】查看所添加记录 <code>mysql&gt; select * from workers_info;</code><br>【9】查看姓名和入职时间记录 <code>mysql&gt; select workername,EmployedDates from workers_info;</code><br>【10】查询入职时间在2003年以前的 <code>mysql&gt; select * from workers_info where year(EmployedDates) &lt; 2003;
【11】查询工资最高和最低的员工姓名 mysql&gt; select * from workers_info ORDER BY salary limit 1; mysql&gt; select * from workers_info ORDER BY salary desc limit 1;</code><br>【12】查询平均工资 <code>mysql&gt; select avg(salary) from workers_info;</code><br>【13】统计男员工人数、女员工人数 <code>mysql&gt; select count(男) from workers_info where sex=&quot;M&quot;; mysql&gt; select count(男) from workers_info where sex=&quot;M&quot;;</code><br>【14】按照入职时间先后进行排序，并显示前5位员工姓名 <code>mysql&gt; select * from workers_info ORDER BY EmployedDates limit 5;</code></p>
]]></content>
      <categories>
        <category>书籍文档</category>
      </categories>
      <tags>
        <tag>MySql</tag>
      </tags>
  </entry>
</search>
